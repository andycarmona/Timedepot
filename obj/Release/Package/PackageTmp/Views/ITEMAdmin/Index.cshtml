@using PagedList.Mvc;   @*//import this so we get our HTML Helper*@
@using PagedList;       @*//import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@
@model IEnumerable<TimelyDepotMVC.Models.Admin.ITEM>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>ITEM</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table>
    <tr>
        <th></th>
        <th>ItemId</th>
        <th>
            @Html.DisplayNameFor(model => model.PicID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DialType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DescA)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DescB)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CollectionID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price_ID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Misc_ID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Inactive)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Keywords)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Special)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.New)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UnitPerCase)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UnitWeight)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CaseWeight)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DimensionH)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DimensionL)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DimensionD)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Pic2ID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Pic3ID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DeptoNo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.YearProduct)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ClassNo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UPCCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CaseDimensionL)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CaseDimensionW)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CaseDimensionH)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Note)
        </th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ItemID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ItemID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ItemID })
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ItemID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PicID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DialType)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DescA)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DescB)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CollectionID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price_ID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Misc_ID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Inactive)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Keywords)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Special)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.New)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UnitPerCase)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UnitWeight)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CaseWeight)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DimensionH)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DimensionL)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DimensionD)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Status)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Pic2ID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Pic3ID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DeptoNo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.YearProduct)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ClassNo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UPCCode)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CaseDimensionL)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CaseDimensionW)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CaseDimensionH)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Note)
        </td>
    </tr>
}
    <tr>
        <td colspan="31">
            <!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
            @Html.PagedListPager((IPagedList)ViewBag.OnePageOfData, page => Url.Action("Index", new { page }))

        </td>
    </tr>

</table>
