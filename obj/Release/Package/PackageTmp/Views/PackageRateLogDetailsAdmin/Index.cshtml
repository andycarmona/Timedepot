@using PagedList.Mvc;   @*//import this so we get our HTML Helper*@
@using PagedList;       @*//import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@
@model IEnumerable<TimelyDepotMVC.Models.Admin.PackageRateLogDetails>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="webgrid">
    <tr class="webgrid-header">
        <th></th>
        <th>Id</th>
        <th>
            @Html.DisplayNameFor(model => model.IdRateLog)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BoxNo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Quantity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Dimensions)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DimensionsUnits)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WeigthUnits)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DeclaredValue)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RequestCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PackageTypeCode)
        </th>
    </tr>
    @{

        int nRow = 0;
        int nMod = 0;
        string szClass = "";
    }

    @foreach (var item in Model)
    {
        nRow++;
        nMod = (nRow % 2);
        if (nMod == 0)
        {
            szClass = "webgrid-alternating-row";
        }
        else
        {
            szClass = "webgrid-row-style";
        }
        <tr class="@szClass">
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
            @Html.ActionLink("Details", "Details", new { id = item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IdRateLog)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BoxNo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Dimensions)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DimensionsUnits)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.WeigthUnits)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DeclaredValue)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RequestCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PackageTypeCode)
            </td>
        </tr>
    }
    <tr>
        <td colspan="11">
            <!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
            @Html.PagedListPager((IPagedList)ViewBag.OnePageOfData, page => Url.Action("Index", new { page }))

        </td>
    </tr>

</table>
