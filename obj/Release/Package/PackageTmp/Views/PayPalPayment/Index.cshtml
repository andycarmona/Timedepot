@model TimelyDepotMVC.Models.Admin.Payments

@{
    ViewBag.Title = "Payment";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section scripts{
    <script type="text/javascript">
        jQuery(document).ready(initializePayPalPaymentIndex);

        function initializePayPalPaymentIndex() {
            //debugger;
            //Attach handlers
            jQuery("#btPayPalPaymentid").button();
            jQuery("#OrderSimpleFormid").submit(submitOrderSimpleFormid);
        }

        function submitOrderSimpleFormid(src, arg) {
            //debugger;

            //Validate paypalid
            var nPos = -1;
            var szMsg = "";
            var szPayPalId = jQuery("#orderEmail").val();
            if (szPayPalId == "") {
                szMsg = 'The PayPal Id is required.';
                alert(szMsg);
                //jQuery("#messageid").val(szMsg);
                src.preventDefault();
                return false;
            }

            //var patt1 = new RegExp("x0040");
            //nPos = szPayPalId.indexOf("m");
            //if (nPos == -1) {
            //    szMsg = 'A valid email address is required.';
            //    alert(szMsg);
            //    //jQuery("#messageid").val(szMsg);
            //    src.preventDefault();
            //    return false;
            //}
        }
     </script>
}
<div class="divh1">@ViewBag.Title</div>

<div style="margin: 5px auto 20px auto; width:400px; border: 1px solid #000000; padding: 10px;">
    @using (Html.BeginForm("OrderSimple", "PayPalPayment", null, FormMethod.Post, new { id = "OrderSimpleFormid" }))
    {
        int nHas = 0;
        int nPos = -1;
        string szError = "";
        string szDecriptedData = "";
        string szDecriptedCode = "";
        string szMsg = "";

        szDecriptedData = TimelyDepotMVC.Controllers.PaymentController.DecodeInfo02(Model.PaymentType, ref szError);
        if (!string.IsNullOrEmpty(szError))
        {
            nPos = szError.IndexOf("data to decode");
            if (nPos != -1)
            {
                szDecriptedData = string.Empty;
            }
            else
            {
                szDecriptedData = string.Format("******");
            }
        }
        else
        {
            //Mask the card number
            nHas = szDecriptedData.Length;
            if (nHas > 4)
            {
                szMsg = szDecriptedData.Substring(nHas - 4, 4);
                szDecriptedData = string.Format("******{0}", szMsg);
            }
            else
            {
                szDecriptedData = string.Format("******");
            }
        }
       
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id) 
        @Html.HiddenFor(model => model.PaymentNo) 
        @Html.HiddenFor(model => model.PaymentDate) 
        
        <div id="messageid" class="error">
        </div>    
        <div>
            <div class="editor-label">
                @Html.LabelFor(model => model.PaymentNo)
            </div>
            <div class="editor-field paypayment">
                @Html.DisplayFor(model => model.PaymentNo)
                @Html.ValidationMessageFor(model => model.PaymentNo)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.CustomerNo)
            </div>
            <div class="editor-field paypayment">
                <div style="display: block;">
                    @Html.DisplayFor(model => model.CustomerNo)&nbsp;@ViewBag.Company
                    @Html.ValidationMessageFor(model => model.CustomerNo)
                </div>
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.SalesOrderNo)
            </div>
            <div class="editor-field paypayment">
                <div style="display: block;">
                    @Html.DisplayFor(model => model.SalesOrderNo)
                    @Html.ValidationMessageFor(model => model.SalesOrderNo)
                </div>
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.PaymentType)
            </div>
            <div class="editor-field paypayment">
                <div>
                    <div style="display: block;">
                        @szDecriptedData
@*                        @Html.DisplayFor(model => model.PaymentType)
                        @Html.ValidationMessageFor(model => model.PaymentType)*@
                    </div>
                </div>
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.ReferenceNo)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.ReferenceNo)
                @Html.ValidationMessageFor(model => model.ReferenceNo)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Amount)
            </div>
            <div class="editor-field paypayment">
                @Html.DisplayFor(model => model.Amount)
                @Html.ValidationMessageFor(model => model.Amount)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.PaymentDate)
            </div>
            <div class="editor-field paypayment">
                <div style="display: block;">
                    @Html.DisplayFor(model => model.PaymentDate)
                    @Html.ValidationMessageFor(model => model.PaymentDate)
                </div>
            </div>
            <div class="editor-label">
                Ship to
            </div>
            <div class="editor-field paypayment">
                <div>
                    <div class="left" style="margin-right: 5px;">Attn:</div>
                    <div>@ViewBag.FirstName&nbsp;@ViewBag.LastName</div>
                </div>
                <div>
                    @ViewBag.Company
                </div>
                <div>
                    @ViewBag.AddressHlp4
                </div>
                <div>
                    @ViewBag.AddressHlp5
                </div>
            </div>
            <div>Your PayPal Id</div>
            <div class="editor-field viosinput300" style="padding-top:3px; padding-bottom:3px;">
                <input type="text" id="orderEmail" name="orderEmail"/><br /> e.g. james_1284183860_per@yahoo.com <br/>
            </div>
        </div>
        <div style="margin: 5px auto; text-align: center;">
            <input id="btPayPalPaymentid" type="submit" value="Pay Sales Order" />&nbsp;
        </div>
    }
</div>
