@using PagedList.Mvc;   @*//import this so we get our HTML Helper*@
@using PagedList;       @*//import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@
@model IEnumerable<TimelyDepotMVC.Models.Admin.Customers>

@{
    ViewBag.Title = "Customers";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section scripts{
    <script type="text/javascript">
        jQuery(document).ready(initializeCustomerIndex);

        function initializeCustomerIndex() {
            //debugger;
            //Set the buttons
            jQuery(".btnSubmitSearch").button();

            //Initialize fields
            var objHlp = jQuery("#SelectStatus");
            var selectstatus = '@ViewBag.SelectStatus';
            if (selectstatus != "") {
                objHlp[0].selectedIndex = selectstatus;
            }

            //Attach handlers
            //jQuery("#lnkAddCustomerId").click(clicklnkAddCustomerId);

            //Prepare the dialogs 
            jQuery("#loadingHlpDialogid").dialog({ autoOpen: false, modal: true });
            jQuery("#addcustomerDialog").dialog({ autoOpen: false, modal: true });
        }

        function clicklnkAddCustomerId(src, arg) {
            src.preventDefault();

            //debugger;

            //Display load image
            ShowLoadingDialog();

            //Get the partial view
            var szUrl = jQuery(src.target).attr("href");

            jQuery.ajax({
                type: 'GET',
                url: szUrl,
                data: null,
                //contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                error: AjaxFailed,
                success: customerSuccess
            });

        }
        function AjaxFailed(response, statusCode, optionerror) {
            //debugger;
            //var response = ajaxContext.get_response();
            //var statusCode = response.get_statusCode();
            alert("Sorry, the request failed with status code: " + statusCode);
        }
        function customerSuccess(response, statusCode) {
            //debugger;
            var objRes = response;

            //Display the response data
            jQuery("#addcustomerDialog").html(objRes);

            //Hide load image
            HideLoadingDialog();

            //Set the buttons
            jQuery(".btn btn-default").button();

            //Attach handlers 
            jQuery("#btDialogClose").click(clickbtDialogClose);
            //jQuery("#lnkserachUserID").click(clicklnkserachUserID);
            //jQuery("#lnkserachPais").click(clicklnkserachPais);
            //jQuery("#lnkserachDepartamento").click(clicklnkserachDepartamento);
            //jQuery("#lnkserachCiudad").click(clicklnkserachCiudad);
            //jQuery(".verDepartamentosLnk a").each(eachverDepartamentosLnk);
            //jQuery(".verCiudadLnk a").each(eachverCiudadLnk);

            //Initialize fields

            //Get the title 
            //debugger;
            var szTitle = "Customers";

            //Show the dialog (used with the BuscarDepartamento call)
            jQuery("#addcustomerDialog").dialog("option", "title", "Add " + szTitle);

            //setter
            jQuery("#addcustomerDialog").dialog("option", "width", 700);

            //display the popup dialog
            jQuery("#addcustomerDialog").dialog("open");

        }

        function clickbtDialogClose(src, arg) {
            jQuery("#addcustomerDialog").dialog("close");
        }
    </script>
}
<div class="divh1">@ViewBag.Title</div>

<div style="margin: 0px auto; width: 1240px; padding: 10px;">
    @Html.ActionLink("Add Customer", "Create01", null, new { id = "lnkAddCustomerId" })
</div>
<div style="margin: 0px auto; width: 1240px; padding: 5px;">
    @using (Html.BeginForm("Index", "Customers", FormMethod.Post))
    {
        <div style="margin: 0px auto; width: 1240px;">
            <table>
                <tr>
                    <td>
                        <div class="left" style="margin-right: 3px; padding-top: 0px;">Search by Customer No.:</div>
                    </td>
                    <td>
                        <select id="SelectStatus" name="SelectStatus">
                            <option>All Status</option>
                            <option>Active</option>
                            <option>Inactive</option>
                        </select></td>
                    <td>
                        <input id="searchCustomerNo" name="searchCustomerNo" type="text" value="@ViewBag.SerchCustomerNo" /></td>
                    <td>
                        <div>
                            <div class="left" style="margin-right: 3px; padding-top: 0px;">Email:</div>
                            <div><input id="searchEmail" name="searchEmail" type="text" value="@ViewBag.SearchEmail" /></div>
                        </div>
                    </td>
                    <td>
                        <input id="btnSubmitSearch" class="btnSubmitSearch" type="submit" value="Search" /></td>
                    <td>@Html.ActionLink("Reset", "Index", "Customers", null, new { id = "lnkResetId", @class = "btnSubmitSearch" })</td>
                </tr>
            </table>
        </div>    
    }

</div>
<div style="width: 1240px; margin: 0px auto;">
    <table class="webgrid" style="width: 1240px; margin: 0px auto;">
        <tr class="webgrid-header">
            <th></th>
            <th>
                @Html.DisplayNameFor(model => model.CustomerNo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>Email</th>
            <th>Company Name</th>
            <th>
                @Html.DisplayNameFor(model => model.BussinesType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SalesPerson)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeptoNo)
            </th>
            @*        <th>
            @Html.DisplayNameFor(model => model.SellerPermintNo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ASINo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PPAINo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SageNo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Origin)
        </th>*@
            <th>
                @Html.DisplayNameFor(model => model.CreditLimit)
            </th>
            @*        <th>
            @Html.DisplayNameFor(model => model.PaymentTerms)
        </th>*@
            <th>
                @Html.DisplayNameFor(model => model.BussinesSice)
            </th>
        </tr>
        @{
            TimelyDepotMVC.DAL.TimelyDepotContext db01 = new TimelyDepotMVC.DAL.TimelyDepotContext();

            int nRow = 0;
            int nMod = 0;
            string szClass = "";
            string szEmail = "";
            string szName = "";
        }

        @foreach (var item in Model)
        {
            szEmail = TimelyDepotMVC.Controllers.CustomersController.GetCustomerEmailName(db01, item.Id, ref szName);

            nRow++;
            nMod = (nRow % 2);
            if (nMod == 0)
            {
                szClass = "webgrid-alternating-row";
            }
            else
            {
                szClass = "webgrid-row-style";
            }
            <tr class="@szClass">
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { onclick = "return confirm('Are you sure you want to delete this Customer?');" })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CustomerNo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @szEmail
                </td>
                <td>
                    @szName
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BussinesType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SalesPerson)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DeptoNo)
                </td>
                @*        <td>
            @Html.DisplayFor(modelItem => item.SellerPermintNo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ASINo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PPAINo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SageNo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Origin)
        </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.CreditLimit)
                </td>
                @*        <td>
            @Html.DisplayFor(modelItem => item.PaymentTerms)
        </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.BussinesSice)
                </td>
            </tr>
        }
        <tr>
            <td colspan="5">
                <!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
                @Html.PagedListPager((IPagedList)ViewBag.OnePageOfData, page => Url.Action("Index", new { page }))

            </td>
        </tr>

    </table>
</div>
<div id="addcustomerDialog">
    Add Customer here
</div>
