@model TimelyDepotMVC.Models.Admin.Payments

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    int nHas = 0;
    int nPos = -1;
    string szError = "";
    string szDecriptedData = "";
    string szDecriptedCode = "";
    string szMsg = "";
    szError = "";
    szDecriptedData = TimelyDepotMVC.Controllers.PaymentController.DecodeInfo02(Model.CreditCardNumber, ref szError);
    if (!string.IsNullOrEmpty(szError))
    {
        nPos = szError.IndexOf("data to decode");
        if (nPos != -1)
        {
            szDecriptedData = string.Empty;
        }
        else
        {
            szDecriptedData = string.Format("******");
        }
    }
    else
    {
        //Mask the card number
        nHas = szDecriptedData.Length;
        if (nHas > 4)
        {
            szMsg = szDecriptedData.Substring(nHas - 4, 4);
            szDecriptedData = string.Format("******{0}", szMsg);
        }
        else
        {
            szDecriptedData = string.Format("******");
        }
    }
    
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Payments</legend>

        @Html.HiddenFor(model => model.Id)

        <div class="editor-label">
            @Html.LabelFor(model => model.PaymentNo)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PaymentNo)
            @Html.ValidationMessageFor(model => model.PaymentNo)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CustomerNo)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CustomerNo)
            @Html.ValidationMessageFor(model => model.CustomerNo)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SalesOrderNo)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SalesOrderNo)
            @Html.ValidationMessageFor(model => model.SalesOrderNo)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PaymentType)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PaymentType)
            @Html.ValidationMessageFor(model => model.PaymentType)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CreditCardNumber)
        </div>
        <div>
            <input id="CreditNumber01" name="CreditNumber01" type="text" value="@szDecriptedData" />
        </div>
        <div class="editor-field" style="display: none;">
            @Html.EditorFor(model => model.CreditCardNumber)
            @Html.ValidationMessageFor(model => model.CreditCardNumber)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ReferenceNo)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ReferenceNo)
            @Html.ValidationMessageFor(model => model.ReferenceNo)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Amount)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Amount)
            @Html.ValidationMessageFor(model => model.Amount)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PaymentDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PaymentDate)
            @Html.ValidationMessageFor(model => model.PaymentDate)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.PayLog)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PayLog)
            @Html.ValidationMessageFor(model => model.PayLog)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.InvoicePayment)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.InvoicePayment)
            @Html.ValidationMessageFor(model => model.InvoicePayment)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
