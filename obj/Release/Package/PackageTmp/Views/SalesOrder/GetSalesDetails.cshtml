@using PagedList.Mvc;   @*//import this so we get our HTML Helper*@
@using PagedList;       @*//import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@
@model IEnumerable<TimelyDepotMVC.Models.Admin.SalesOrderDetail>

<div style="margin: 10px 30px 5px 30px;">
    @{
        int nRow = 0;
        int nMod = 0;
        double dExtAmount = 0;
        string szClass = "";
        string szExtAmount = "";
        string szQty = "";
        string szShipQty = "";
        string szBOQty = "";
        string szDescription = "";
        string szTax = "";
        string szPrice = "";
        string szLnkUpdate = "";
        string szProductService = "product";
        string szPicPath = "";
    }
    @foreach (var item in Model)
    {
        szQty = string.Format("qty_{0}", item.Id);
        szShipQty = string.Format("shipqty_{0}", item.Id);
        szBOQty = string.Format("boqty_{0}", item.Id);
        szDescription = string.Format("desc_{0}", item.Id);
        szTax = string.Format("tax_{0}", item.Id);
        szPrice = string.Format("price_{0}", item.Id);
        szLnkUpdate = string.Format("lkup_{0}", item.Id);

        //Set the image path
        szPicPath = string.Format("~/Images/timely/Small_Pic/{0}.gif", item.ItemID);
        szPicPath = Url.Content(szPicPath);

        // the tax should be on product only, no tax on service
        if (string.IsNullOrEmpty(item.Sub_ItemID))
        {
            szProductService = "service";
        }
        else
        {
            szProductService = "product";
        }

        nRow++;
        nMod = (nRow % 2);
        if (nMod == 0)
        {
            szClass = "webgrid-alternating-row";
        }
        else
        {
            szClass = "webgrid-row-style";
        }

        dExtAmount = Convert.ToDouble(item.UnitPrice) * Convert.ToDouble(item.Quantity);
        szExtAmount = dExtAmount.ToString("C");
        <div class="cf" style="margin-bottom: 5px;">
            <div class="left" style="display: none;">
                @Html.DisplayFor(modelItem => item.Id)
            </div>
            <div class="left" style="display: none;">
                @Html.DisplayFor(modelItem => item.SalesOrderId)
            </div>
            <div class="left" style="margin-left: 5px; margin-right: 5px;">@Html.ActionLink("X", "DeleteDetail", "SalesOrder", new { id = item.Id }, new { onclick = "return confirm('Are you sure you want to delete this item?');" })</div>
            <div class="left" style="width: 300px; margin-right: 0.5em;">
                Item No.:&nbsp;@Html.DisplayFor(modelItem => item.Sub_ItemID)
            </div>
            <div id="@szDescription" class="left">
                Description:&nbsp;@Html.TextBoxFor(modelItem => item.Description, new { Style = "width:500px;" })
            </div>
        </div>
        <div class="darkerline cf" style="padding: 5px; margin-bottom: 5px;">
            <div class="left">
                <div style="width: 160px; margin: 20px auto;">
                    <img id="picImageId" alt="@item.ItemID" src="@szPicPath" width="160" />
                </div>
            </div>
            <div class="left" style="margin-left: 10px;">
                <div style="text-align: center">Logo</div>
                <div>
                    <div class="editor-field">
                        @Html.TextBoxFor(modelItem => item.Logo, new { style = "width:350px;" })
                        @Html.ValidationMessageFor(modelItem => item.Logo)
                    </div>
                </div>
                <div>
                    <div class="left" style="margin-right:5px;">Imprint Method</div>
                    <div>
                        <div class="editor-field">
                            @Html.TextBoxFor(modelItem => item.ImprintMethod, new { style = "width:180px;" })
                            @Html.ValidationMessageFor(modelItem => item.ImprintMethod)
                        </div>
                    </div>
                </div>
            </div>
            <div class="left">Qty</div>
            <div class="left">Price</div>
        </div>
    }
    <div style="margin: 5px auto; width: 200px; display: block; text-align: center">
        @Html.ActionLink("Add", "AddDetail", "SalesOrder", new { salesorderid = ViewBag.SalesOrderId }, new { id = "lnkAddSalesOrderDetail" })
    </div>
</div>
