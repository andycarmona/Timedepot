@using PagedList.Mvc;   @*//import this so we get our HTML Helper*@
@using PagedList;       @*//import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@
@model IEnumerable<TimelyDepotMVC.ModelsView.SelectCustomer>
<div>
    @*Html.ActionLink("Search by user name", "SearchUserRegistration", "Quotes", null, new { id = "lnkSearchUserRegId" })*@
    @using (Html.BeginForm("SelectCustomer", "SalesOrder" , null, FormMethod.Post, new { id="selectcustomersearchform" }))
    {
        <div style="margin-bottom: 5px;">
            <table>
                <tr>
                    <td>
                        <div>
                            <div class="left" style="margin-right: 3px; padding-top: 10px;">Search by Company Name:</div>
                            <input id="searchCompanyName" name="companyname" type="text" value="@ViewBag.SearchCompanyName" />
                        </div>
                    </td>
                    <td>
                        <div>
                            <div class="left">Email:</div>
                            <input id="searchemail" name="email" type="text" value="@ViewBag.SearchEmail" />
                        </div>
                    </td>
                    <td>
                        <input id="btnSubmitSelectCustomer" class="btn btn-default" type="submit" value="Search" />
                    </td>
                    <td>@Html.ActionLink("Reset", "SelectCustomer", "SalesOrder", null, new { id = "lnkResetSelectCustomerId", @class = "btn btn-default" })</td>
                </tr>
            </table>
        </div>    
    }
</div>

<table class="webgrid">
    <tr class="webgrid-header">
        <th></th>
        <th>
            @Html.DisplayNameFor(model => model.CustomerNo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Companyname)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
    </tr>
    @{
        int nRow = 0;
        int nMod = 0;
        string szClass = "";
    }
    @foreach (var item in Model)
    {
        nRow++;
        nMod = (nRow % 2);
        if (nMod == 0)
        {
            szClass = "webgrid-alternating-row";
        }
        else
        {
            szClass = "webgrid-row-style";
        }

        <tr class="@szClass">
            <td class="lnkselectcustomerquote">
                @Html.ActionLink("Select", "CreateSalesOrder", "SalesOrder", new { id = item.CustomerNo }, null)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CustomerNo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Companyname)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
        </tr>
    }
    <tr>
        <td colspan="3">
            <!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
            @Html.PagedListPager((IPagedList)ViewBag.OnePageOfData, page => Url.Action("Index", new { page }))

        </td>
        <td>
            <input id="btDialogCloseSelect" class="btn btn-default" type="button" value="Close" /></td>
    </tr>

</table>
