@using PagedList.Mvc;   @*//import this so we get our HTML Helper*@
@using PagedList;       @*//import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@
@model IEnumerable<TimelyDepotMVC.Models.Admin.PurchaseOrders>

@{
    ViewBag.Title = "Purchase Order";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>@ViewBag.Title</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table>
    <tr>
        <th></th>
        <th>@Html.DisplayNameFor(model => model.PurchaseOrderId)</th>
        <th>
            @Html.DisplayNameFor(model => model.PurchaseOrderNo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SalesOrderNo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TradeId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PODate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VendorId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ShipDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PaidBy)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BlindDrop)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Logo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ImprintColor)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsBlindShip)
        </th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.PurchaseOrderId }) |
            @Html.ActionLink("Details", "Details", new { id=item.PurchaseOrderId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.PurchaseOrderId })
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PurchaseOrderId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PurchaseOrderNo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SalesOrderNo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TradeId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PODate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.VendorId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ShipDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PaidBy)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BlindDrop)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Logo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ImprintColor)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsBlindShip)
        </td>
    </tr>
}
    <tr>
        <td colspan="13">
            <!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
            @Html.PagedListPager((IPagedList)ViewBag.OnePageOfData, page => Url.Action("Index", new { page }))

        </td>
    </tr>

</table>
