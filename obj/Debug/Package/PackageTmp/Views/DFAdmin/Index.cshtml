@using PagedList.Mvc;   @*//import this so we get our HTML Helper*@
@using PagedList;       @*//import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@
@model IEnumerable<TimelyDepotMVC.Models.Admin.DF>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>DF</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table>
    <tr>
        <th></th>
        <th>ItemID</th>
        <th>
            @Html.DisplayNameFor(model => model.DialType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DescA)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CollectionID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Start_Qty)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Field11)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Field12)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Field13)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Field14)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Field15)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Field16)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Field17)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Field18)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Field19)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Field20)
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ItemID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ItemID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ItemID })
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ItemID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DialType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DescA)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CollectionID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Start_Qty)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Field11)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Field12)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Field13)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Field14)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Field15)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Field16)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Field17)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Field18)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Field19)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Field20)
            </td>
        </tr>
    }
    <tr>
        <td colspan="14">
            <!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
            @Html.PagedListPager((IPagedList)ViewBag.OnePageOfData, page => Url.Action("Index", new { page }))

        </td>
    </tr>

</table>
