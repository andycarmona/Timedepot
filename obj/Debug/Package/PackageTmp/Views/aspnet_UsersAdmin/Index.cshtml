@using PagedList.Mvc;   @*//import this so we get our HTML Helper*@
@using PagedList;       @*//import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@
@model IEnumerable<TimelyDepotMVC.Models.Admin.aspnet_Users>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table>
    <tr>
        <th></th>
        <th>UserId</th>
        <th>
            @Html.DisplayNameFor(model => model.ApplicationId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UserName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LoweredUserName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MobileAlias)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsAnonymous)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastActivityDate)
        </th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.UserId }) |
            @Html.ActionLink("Details", "Details", new { id=item.UserId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.UserId })
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UserId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ApplicationId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UserName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LoweredUserName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MobileAlias)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsAnonymous)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastActivityDate)
        </td>
    </tr>
}

    <tr>
        <td colspan="8">
            <!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
            @Html.PagedListPager((IPagedList)ViewBag.OnePageOfData, page => Url.Action("Index", new { page }))

        </td>
    </tr>

</table>
