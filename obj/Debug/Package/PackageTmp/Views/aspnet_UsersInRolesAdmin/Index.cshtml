@using PagedList.Mvc;   @*//import this so we get our HTML Helper*@
@using PagedList;       @*//import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@
@model IEnumerable<TimelyDepotMVC.Models.Admin.aspnet_UsersInRoles>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table>
    <tr>
        <th></th>
        <th>UserId</th>
        <th>User Name</th>
        <th>RoleId</th>
        <th>Role name</th>
    </tr>
    @{
        TimelyDepotMVC.DAL.TimelyDepotContext db01 = new TimelyDepotMVC.DAL.TimelyDepotContext();
        TimelyDepotMVC.Models.Admin.aspnet_Roles webroles = null;
        TimelyDepotMVC.Models.Admin.aspnet_Users userprofile = null;
        string szUserName = "";
        string szRoleName = "";

    }
    @foreach (var item in Model)
    {
        userprofile = db01.aspnet_Users.Find(item.UserId);
        if (userprofile != null)
        {
            szUserName = userprofile.UserName;
        }
        webroles = db01.aspnet_Roles.Find(item.RoleId);
        if (webroles != null)
        {
            szRoleName = webroles.RoleName;
        }
        <tr>
            <td>
                @Html.ActionLink("Delete", "Delete", new { UserId = item.UserId, RoleId = item.RoleId })
            </td>
            <td class="viosinput60">@Html.DisplayFor(modelitem => item.UserId)</td>
            <td>@szUserName</td>
            <td class="viosinput60">@Html.DisplayFor(modelitem => item.RoleId)</td>
            <td>@szRoleName</td>
        </tr>
    }

</table>
