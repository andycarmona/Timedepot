@using PagedList.Mvc;   @*//import this so we get our HTML Helper*@
@using PagedList;       @*//import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@
@model IEnumerable<TimelyDepotMVC.Models.Admin.ImprintMaster>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Imprint Master</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table>
    <tr>
          <th></th>
          <th></th>
      <th>
            @Html.DisplayNameFor(model => model.ImprintName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SetUpCharge)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SetUpCharge2)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RunCharge)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ColorCharge)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Displayname)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DiscountCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ImagePath)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.NumberColor)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Information)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RunChargeInclude)
        </th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ImprintId }) |
            @Html.ActionLink("Details", "Details", new { id=item.ImprintId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ImprintId })
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ImprintId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ImprintName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SetUpCharge)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SetUpCharge2)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.RunCharge)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ColorCharge)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Displayname)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DiscountCode)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ImagePath)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.NumberColor)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Information)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.RunChargeInclude)
        </td>
    </tr>
}
        <tr>
        <td colspan="13">
            <!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
            @Html.PagedListPager((IPagedList)ViewBag.OnePageOfData, page => Url.Action("Index", new { page }))

        </td>
    </tr>

</table>
