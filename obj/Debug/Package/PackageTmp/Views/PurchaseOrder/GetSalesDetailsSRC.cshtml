@using PagedList.Mvc;   @*//import this so we get our HTML Helper*@
@using PagedList;       @*//import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@
@model IEnumerable<TimelyDepotMVC.Models.Admin.PurchaseOrderDetailSRC>

<div style="margin: 10px 5px 5px 5px;">
    @{
        int nRow = 0;
        int nMod = 0;
        double dExtAmountSC = 0;
        double dExtAmountRC = 0;
        double dExtAmountTotal = 0;
        double dExtAmount = 0;
        string szClass = "";
        string szExtAmount = "";
        string szExtAmountSC = "";
        string szExtAmountRC = "";
        string szExtAmountTotal = "";
        string szQty = "";
        string szShipQty = "";
        string szBOQty = "";
        string szDescription = "";
        string szTax = "";
        string szPrice = "";
        string szLnkUpdate = "";
        string szProductService = "product";

        string szPicPath = "";
        string szLogo = "";
        string szImprint = "";
        string szImprintSelector = "";
        string szQtySCid = "";
        string szQtyRCid = "";
        string szPriceSC = "";
        string szPriceRC = "";
    }

    @foreach (var item in Model)
    {
        szQty = string.Format("qty_{0}", item.Id);
        szShipQty = string.Format("shipqty_{0}", item.Id);
        szBOQty = string.Format("boqty_{0}", item.Id);
        szDescription = string.Format("desc_{0}", item.Id);
        szTax = string.Format("tax_{0}", item.Id);
        szPrice = string.Format("price_{0}", item.Id);
        szLnkUpdate = string.Format("lkup_{0}", item.Id);


        szLogo = string.Format("logo_{0}", item.Id);
        szImprint = string.Format("ipmt_{0}", item.Id);
        szImprintSelector = string.Format("ipmtselect_{0}", item.Id);
        szQtySCid = string.Format("qtySC_{0}", item.Id);
        szQtyRCid = string.Format("qtyRC_{0}", item.Id);
        szPriceSC = string.Format("priceSC_{0}", item.Id);
        szPriceRC = string.Format("priceRC_{0}", item.Id);


        //Set the image path
        szPicPath = string.Format("~/Images/timely/Small_Pic/{0}.gif", item.ItemID);
        szPicPath = Url.Content(szPicPath);

        // the tax should be on product only, no tax on service
        if (string.IsNullOrEmpty(item.Sub_ItemID))
        {
            szProductService = "service";
        }
        else
        {
            szProductService = "product";
        }

        nRow++;
        nMod = (nRow % 2);
        if (nMod == 0)
        {
            szClass = "webgrid-alternating-row";
        }
        else
        {
            szClass = "webgrid-row-style";
        }

        dExtAmount = Convert.ToDouble(item.UnitPrice) * Convert.ToDouble(item.Quantity);
        szExtAmount = dExtAmount.ToString("C");
        dExtAmountSC = Convert.ToDouble(item.UnitPricSRC) * Convert.ToDouble(item.QuantitySC);
        szExtAmountSC = dExtAmountSC.ToString("C");
        dExtAmountRC = Convert.ToDouble(item.UnitPriceRC) * Convert.ToDouble(item.QuantityRC);
        szExtAmountRC = dExtAmountRC.ToString("C");

        dExtAmountTotal = dExtAmount + dExtAmountSC + dExtAmountRC;
        szExtAmountTotal = dExtAmountTotal.ToString("C");
        
        
        //dExtAmount = Convert.ToDouble(item.UnitPrice) * Convert.ToDouble(item.Quantity);
        //szExtAmount = dExtAmount.ToString("C");

        <div class="cf" style="margin-bottom: 5px;">
            <div class="left" style="display: none;">
                @Html.DisplayFor(modelItem => item.Id)
            </div>
            <div class="left" style="display: none;">
                @Html.DisplayFor(modelItem => item.SalesOrderId)
            </div>
            <div class="left" style="margin-left: 5px; margin-right: 5px;">@Html.ActionLink("X", "DeleteDetail", "PurchaseOrder", new { id = item.Id }, new { onclick = "return confirm('Are you sure you want to delete this item?');" })</div>
            <div class="left" style="width: 300px; margin-right: 0.5em;">
                Item No.:&nbsp;@Html.DisplayFor(modelItem => item.Sub_ItemID)
            </div>
            <div id="@szDescription" class="left">
                Description:&nbsp;@Html.TextBoxFor(modelItem => item.Description, new { Style = "width:500px;" })
            </div>
        </div>
        <div class="darkerline cf" style="padding: 5px; margin-bottom: 5px;">
            <div class="left">
                <div style="width: 160px; margin: 0px auto;">
                    <img id="picImageId" alt="@item.ItemID" src="@szPicPath" width="160" />
                </div>
            </div>
            <div class="left" style="margin-left: 10px;">
                <div style="text-align: center">Logo</div>
                <div style="margin-top: 5px;">
                    <div id="@szLogo" class="editor-field">
                        @Html.TextBoxFor(modelItem => item.Logo, new { style = "width:350px;" })
                        @Html.ValidationMessageFor(modelItem => item.Logo)
                    </div>
                </div>
                <div>
                    <div class="left" style="margin-right: 5px;">Imprint Method</div>
                    <div>
                        @if (ViewBag.ImprintList != null)
                        {
                            @Html.DropDownList("ImprintMethod", (IEnumerable<SelectListItem>)ViewBag.ImprintList, "Select", new { id = szImprintSelector, @class="imprintselectorclass" })
                        }
                        <div id="@szImprint" class="editor-field">
                            @Html.TextBoxFor(modelItem => item.ImprintMethod, new { style = "width:180px;" })
                            @Html.ValidationMessageFor(modelItem => item.ImprintMethod)
                        </div>
                    </div>
                </div>
            </div>
            <div class="left">
                <table>
                    <tr class="paddLR">
                        <td>Req. Qty</td>
                        <td>Ship Qty</td>
                        <td>B.O. Qty</td>
                    </tr>
                    <tr class="paddLR">
                        <td>
                            <div id="@szQty" class="viosinput100">
                                @Html.TextBoxFor(modelItem => item.Quantity, new { @class = "textright" })
                                @Html.ValidationMessageFor(model => item.Quantity)
                            </div>
                        </td>
                        <td>
                            <div id="@szShipQty"  class="viosinput100 textright">
                                @Html.TextBoxFor(modelItem => item.ShipQuantity, new { @class = "textright" })
                                @Html.ValidationMessageFor(model => item.ShipQuantity)
                            </div>
                        </td>
                        <td>
                            <div id="@szBOQty" class="viosinput100 textright">
                                @Html.TextBoxFor(modelItem => item.BackOrderQuantity, new { @class = "textright" })
                                @Html.ValidationMessageFor(model => item.BackOrderQuantity)
                            </div>
                        </td>
                    </tr>
                    <tr class="paddLR">
                        <td colspan="2" style="text-align: right;">Set up Charge</td>
                        <td>
                            <div id="@szQtySCid" class="viosinput100 textright">
                                @Html.TextBoxFor(modelItem => item.QuantitySC, new { @class = "textright" })
                                @Html.ValidationMessageFor(model => item.QuantitySC)
                            </div>
                        </td>
                    </tr>
                    <tr class="paddLR">
                        <td colspan="2" style="text-align: right;">Run Charge</td>
                        <td>
                            <div id="@szQtyRCid" class="viosinput100 textright">
                                @Html.TextBoxFor(modelItem => item.QuantityRC, new { @class = "textright" })
                                @Html.ValidationMessageFor(model => item.QuantityRC)
                            </div>
                        </td>
                    </tr>
                </table>

            </div>
            <div class="left">
                <table>
                    <tr class="paddLR">
                        <td>Unit Price</td>
                        <td>Amount</td>
                    </tr>
                    <tr class="paddLR">
                        <td>
                            <div id="@szPrice" class="viosinput100 textright">
                                @Html.TextBoxFor(modelItem => item.UnitPrice, new { @class = "textright" })
                                @Html.ValidationMessageFor(model => item.UnitPrice)
                            </div>
                        </td>
                        <td class="textright">@szExtAmount</td>
                    </tr>
                    <tr class="paddLR">
                        <td>
                            <div id="@szPriceSC" class="viosinput100 textright">
                                @Html.TextBoxFor(modelItem => item.UnitPricSRC, new { @class = "textright" })
                                @Html.ValidationMessageFor(model => item.UnitPricSRC)
                            </div>
                        </td>
                        <td class="textright">@szExtAmountSC</td>
                    </tr>
                    <tr class="paddLR">
                        <td>
                            <div id="@szPriceRC" class="viosinput100 textright">
                                @Html.TextBoxFor(modelItem => item.UnitPriceRC, new { @class = "textright" })
                                @Html.ValidationMessageFor(model => item.UnitPriceRC)
                            </div>
                        </td>
                        <td class="textright">@szExtAmountRC</td>
                    </tr>
                    <tr class="paddLR textright">
                        <td><span style="font-size: 1.0em; font-weight: bold;">Item Total:</span></td>
                        <td class="textright">@szExtAmountTotal</td>
                    </tr>
                </table>
            </div>
            <div style="margin: 5px auto; width: 80px; display: block; text-align: center">
                <span class="lnkUpdateDetail">@Html.ActionLink("Update", "UpdateDetail", "PurchaseOrder", new { id = item.Id, salesorderid = ViewBag.SalesOrderId }, new { id = szLnkUpdate })</span>
            </div>
            <div id="@szTax" class="tdsalesdetail viosinput60"  style="display:none;">
                <div class="@szProductService">
                    @Html.EditorFor(modelItem => item.Tax)
                </div>
            </div>
        </div>

    }
    <div class="cf">
        <div class="right" style="margin-right:50px;">@ViewBag.TotalPO</div>
        <div class="right"><span style="margin-right:5px; font-weight:bold;">Order Total:</span></div>
    </div>
    <div style="margin: 5px auto; width: 40px; display: block;">
        @Html.ActionLink("Add", "AddDetail", "PurchaseOrder", new { purchaseorderid = ViewBag.SalesOrderId }, new { id = "lnkAddSalesOrderDetail" })
    </div>
</div>
