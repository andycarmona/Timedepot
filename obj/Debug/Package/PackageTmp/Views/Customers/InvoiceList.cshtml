@using PagedList.Mvc;   @*//import this so we get our HTML Helper*@
@using PagedList;       @*//import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@
@model IEnumerable<TimelyDepotMVC.ModelsView.PurchaseOrdersbyVendor>
<div class="darkerline01">
    <div style="padding: 10px;">
        @Html.ActionLink("Invoice List (Excel)", "InvoiceListExcel", "Customers", new { customerid = ViewBag.CustomerId }, null)
    </div>
    <table class="webgrid" style="width: 1100px; margin: 0px auto;">
        <tr class="webgrid-header">
            <th></th>
            <th style="display: none;">
                @Html.DisplayNameFor(model => model.PurchaseOrderId)
            </th>
            <th>Invoice&nbsp;No.
            @*@Html.DisplayNameFor(model => model.PurchaseOrderNo)*@
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SODate)
            </th>
            <th style="display: none;">
                @Html.DisplayNameFor(model => model.VendorNo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Sub_ItemID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnitPrice)
            </th>
        </tr>
        @{

            int nRow = 0;
            int nMod = 0;
            string szClass = "";
        }

        @foreach (var item in Model)
        {

            nRow++;
            nMod = (nRow % 2);
            if (nMod == 0)
            {
                szClass = "webgrid-alternating-row";
            }
            else
            {
                szClass = "webgrid-row-style";
            }
            <tr class="@szClass">
                <td>
                    @Html.ActionLink("Details", "Edit", "Invoice", new { id = item.PurchaseOrderId }, null)
                </td>
                <td style="display: none;">
                    @Html.DisplayFor(modelItem => item.PurchaseOrderId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PurchaseOrderNo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SODate)
                </td>
                <td style="display: none;">
                    @Html.DisplayFor(modelItem => item.VendorNo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Sub_ItemID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UnitPrice)
                </td>
            </tr>
        }
        <tr>
            <td colspan="9">
                <!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
                @Html.PagedListPager((IPagedList)ViewBag.OnePageOfData, page => Url.Action("InvoiceList", new { page }))

            </td>
        </tr>

    </table>
</div>
