@using PagedList.Mvc;   @*//import this so we get our HTML Helper*@
@using PagedList;       @*//import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@
@model IEnumerable<TimelyDepotMVC.Models.Admin.ITEM>

@{
    ViewBag.Title = "Inventory";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section scripts{
    <script type="text/javascript">
        jQuery(document).ready(initializeInventoryIndex);

        function initializeInventoryIndex() {

            //Set the buttons
            jQuery(".btnSubmitSearch").button();

            //Attach handlers
            jQuery("#lnkInventoryId").click(clicklnkInventoryId);
            jQuery(".timelydeptotr").each(eachtimelydeptotr);
            jQuery("#lnkEditItem").click(clicklnkEditItem);


            //Prepare the dialogs 
            jQuery("#loadingHlpDialogid").dialog({ autoOpen: false, modal: true });
            jQuery("#addinventorydialogId").dialog({ autoOpen: false, modal: true });
        }

        function clicklnkInventoryId(src, arg) {
            src.preventDefault();

            //debugger;

            //Display load image
            ShowLoadingDialog();

            //Get the partial view
            var szUrl = jQuery(src.target).attr("href");

            jQuery.ajax({
                type: 'GET',
                url: szUrl,
                data: null,
                //contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                error: AjaxFailed,
                success: inventorySuccess
            });
        }
        function AjaxFailed(response, statusCode, optionerror) {
            //debugger;
            //var response = ajaxContext.get_response();
            //var statusCode = response.get_statusCode();
            alert("Sorry, the request failed with status code: " + statusCode);
        }
        function inventorySuccess(response, statusCode) {
            //debugger;
            var objRes = response;

            //Display the response data
            jQuery("#addinventorydialogId").html(objRes);

            //Hide load image
            HideLoadingDialog();

            //Set the buttons
            jQuery(".btn btn-default").button();

            //Attach handlers 
            jQuery("#btDialogClose").click(clickbtDialogClose);
            //jQuery("#lnkserachUserID").click(clicklnkserachUserID);
            //jQuery("#lnkserachPais").click(clicklnkserachPais);
            //jQuery("#lnkserachDepartamento").click(clicklnkserachDepartamento);
            //jQuery("#lnkserachCiudad").click(clicklnkserachCiudad);
            //jQuery(".verDepartamentosLnk a").each(eachverDepartamentosLnk);
            //jQuery(".verCiudadLnk a").each(eachverCiudadLnk);

            //Initialize fields

            //Get the title 
            //debugger;
            var szTitle = "Item";

            //Show the dialog (used with the BuscarDepartamento call)
            jQuery("#addinventorydialogId").dialog("option", "title", "Add " + szTitle);

            //setter
            jQuery("#addinventorydialogId").dialog("option", "width", 800);

            //display the popup dialog
            jQuery("#addinventorydialogId").dialog("open");

        }
        function clickbtDialogClose(src, arg) {
            jQuery("#addinventorydialogId").dialog("close");
        }

        function eachtimelydeptotr(nPos, src) {
            jQuery(src).click(clickimelydeptotr);
            jQuery(src).mouseover(mouseovertimelydeptotr);
        }
        function clickimelydeptotr(src, arg) {
            //debugger;


            var szhRef = jQuery("#lnkEditItem").attr("href");

            var szId = src.target.id;
            szId = szId.replace("row0_", "");
            szId = szId.replace("row1_", "");
            szId = szId.replace("img_", "");

            szhRef = szhRef.replace("0", szId);
            jQuery("#lnkEditItem").attr("href", szhRef);
            jQuery("#lnkEditItem").trigger('click');
        }

        function clicklnkEditItem(src, arg) {
            //debugger;
            var szUrl = src.target.href;
            //window.location(szUrl);
            window.open(szUrl, "_self");
        }

        function mouseovertimelydeptotr(src, arg) {
            //debugger;
            jQuery(src.target).css("cursor", "pointer");
        }
    </script>
}
<div class="divh1">@ViewBag.Title</div>

<div style="width: 100%">
    <div style="margin: 0px auto; width: 50%">
        @Html.ActionLink("Add Item", "Create", "Inventory", null, new { id = "lnkInventoryId" })
    </div>
    @using (Html.BeginForm("Index", "Inventory", FormMethod.Post))
    {
        <div style="margin: 0px auto; width: 50%">
            <div class="left" style="margin-right: 3px; padding-top: 10px;">Search by item:</div>
            <input id="searchItem" name="searchItem" type="text" value="@ViewBag.SearchItem" />
            <input id="btnSubmitSearch" class="btnSubmitSearch" type="submit" value="Search" />
            @Html.ActionLink("Reset", "Index", "Inventory", null, new { id = "lnkResetId", @class = "btnSubmitSearch" })
        </div>    
    }
    <table class="webgrid" style="margin: 0px auto;">
        <tr class="webgrid-header">
            <th>
                @Html.DisplayNameFor(model => model.ItemID)
            </th>
            <th>Image
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DescA)
            </th>
        </tr>
        @{
            int nRow = 0;
            int nMod = 0;
            string szClass = "";
            
            //Set the image path
            string szPicPath = "";
            string sztrId = "";
            string sztrId1 = "";
            string szimgId = "";
        }
        @foreach (var item in Model)
        {

            nRow++;
            nMod = (nRow % 2);
            if (nMod == 0)
            {
                szClass = "webgrid-alternating-row timelydeptotr";
            }
            else
            {
                szClass = "webgrid-row-style timelydeptotr";
            }

            szPicPath = string.Format("~/Images/timely/Small_Pic/{0}.gif", item.ItemID);
            szPicPath = Url.Content(szPicPath);

            sztrId = string.Format("row0_{0}", item.ItemID);
            sztrId1 = string.Format("row1_{0}", item.ItemID);
            szimgId = string.Format("img_{0}", item.ItemID);
            
            <tr class="@szClass">
                <td id="@sztrId" style="font-size:1.0em; font-weight:bold;">
                    @Html.DisplayFor(modelItem => item.ItemID)
                </td>
                <td style="padding:10px;">
                    <div>
                        <img id="@szimgId" alt="@item.ItemID" src="@szPicPath" width="100" />
                    </div>

                </td>
                <td id="@sztrId1">
                    @Html.DisplayFor(modelItem => item.DescA)
                </td>

                @*                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ItemID }) |
                    @Html.ActionLink("Delete", "DeleteConfirmed", new { id = item.ItemID }, new { onclick = "return confirm('Are you sure you want to delete this Item?');"})
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CollectionID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price_ID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.YearProduct)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Note)
                </td>*@

            </tr>
        }
        <tr>
            <td colspan="7">
                <!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
                @Html.PagedListPager((IPagedList)ViewBag.OnePageOfData, page => Url.Action("Index", new { page }))

            </td>
        </tr>

    </table>
</div>
<div id="addinventorydialogId">
    Inventory data here
</div>
<div style="display:none;">
    @Html.ActionLink("Edit", "Edit", new { id = "0" }, new { id = "lnkEditItem" }) 
</div>