@using PagedList.Mvc;   @*//import this so we get our HTML Helper*@
@using PagedList;       @*//import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@
@model IEnumerable<TimelyDepotMVC.Models.Admin.ITEM>
<div style="width: 90%; margin: 0px auto 5px auto">
    @using (Html.BeginForm("SelectItem", "UPSRatingPackage", null, FormMethod.Get, new { id = "searchselectitemid" }))
    {
        <div style="margin: 0px auto; width: 100%">
            <div class="left" style="margin-right: 5px;">
                <div class="left" style="margin-right: 3px; padding-top: 10px;">Search by item:</div>
                <input id="searchItem" name="searchItem" type="text" value="@ViewBag.SearchItem" />
                <input id="btnSubmitSearch" class="btNavTimley" type="submit" value="Search" />
            </div>
            <div class="lnkResetId">
                @Html.ActionLink("Reset", "SelectItem", "UPSRatingPackage", new { salesorderid = ViewBag.SalesOrderId }, new { id = "lnkResetselectItemIdHlp", @class = "btNavTimley" })
            </div>
        </div>    
    }

</div>

<table class="webgrid">
    <tr class="webgrid-header">
        <th></th>
        <th>ItemId</th>
        <th>
            @Html.DisplayNameFor(model => model.CollectionID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UnitPerCase)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UnitWeight)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CaseWeight)
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.CaseDimensionL)*@
            Case Dim.L
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.CaseDimensionW)*@
                Case DimW
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.CaseDimensionH)*@
                Case Dim.H
        </th>
        <th>Price</th>
        @*        <th>
            @Html.DisplayNameFor(model => model.DimensionH)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DimensionL)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DimensionD)
        </th>*@
    </tr>
    @{
        TimelyDepotMVC.DAL.TimelyDepotContext db01 = new TimelyDepotMVC.DAL.TimelyDepotContext();
        short nQty = ViewBag.Qty;

        int nRow = 0;
        int nMod = 0;
        string szClass = "";
        string szPrice = "";
        string szItemId = "";
        string szUpC = "";
        string szUW = "";
        string szCW = "";
        string szCDL = "";
        string szCDW = "";
        string szCDH = "";
        string szUnitPrice = "";
    }

    @foreach (var item in Model)
    {
        //Get the price
        szPrice = TimelyDepotMVC.Controllers.UPSRatingPackageController.GetPrice(db01, item.ItemID, nQty);

        szUpC = string.Format("UpC_{0}", item.ItemID);
        szUW = string.Format("UW_{0}", item.ItemID);
        szCW = string.Format("CW_{0}", item.ItemID);
        szCDL = string.Format("CDL_{0}", item.ItemID);
        szCDW = string.Format("CDW_{0}", item.ItemID);
        szCDH = string.Format("CDH_{0}", item.ItemID);
        szUnitPrice = string.Format("UnitPrice_{0}", item.ItemID);
        
        
        nRow++;
        nMod = (nRow % 2);
        if (nMod == 0)
        {
            szClass = "webgrid-alternating-row";
        }
        else
        {
            szClass = "webgrid-row-style";
        }
        <tr class="@szClass">
            <td class="lnkselectitemid">
                @Html.ActionLink("Select", "SelectItem", new { id = item.ItemID })
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ItemID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CollectionID)
            </td>
            <td id="@szUpC">
                @Html.DisplayFor(modelItem => item.UnitPerCase)
            </td>
            <td id="@szUW">
                @Html.DisplayFor(modelItem => item.UnitWeight)
            </td>
            <td id="@szCW">
                @Html.DisplayFor(modelItem => item.CaseWeight)
            </td>
            <td id="@szCDL">
                @Html.DisplayFor(modelItem => item.CaseDimensionL)
            </td>
            <td id="@szCDW">
                @Html.DisplayFor(modelItem => item.CaseDimensionW)
            </td>
            <td id="@szCDH">
                @Html.DisplayFor(modelItem => item.CaseDimensionH)
            </td>
            <td id="@szUnitPrice">@szPrice</td>
            @*        <td>
            @Html.DisplayFor(modelItem => item.DimensionH)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DimensionL)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DimensionD)
        </td>*@
        </tr>
    }
    <tr>
        <td colspan="11">
            <!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
            @Html.PagedListPager((IPagedList)ViewBag.OnePageOfData, page => Url.Action("SelectItem", new { page }))

        </td>
        <td>
            <input id="btDialogClose" class="btNavTimley" type="button" value="Close" />
        </td>
    </tr>

</table>
