@model TimelyDepotMVC.Models.Admin.CustomersCreditCardShipping
<div id="UpdateCreditCardForm">
    <div id="contactFormContainer">
        @using (Html.BeginForm("CreateEditCreditCardFromPayment", "Customers", new { customerdefault = "0" }, FormMethod.Post, new { id = "UpdateCreditCardForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)


            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.CustomerId)
            @Html.HiddenFor(model => model.ExpirationDate)
            @Html.HiddenFor(model => model.CreditNumber)

            long telHlp = 0;
            string telfmt = "000-000-0000";

            telHlp = Convert.ToInt64(Model.Tel);

            int nHas = 0;
            int nPos = -1;
            string szError = "";
            string szDecriptedData = "";
            string szDecriptedCode = "";
            string szMsg = "";

            szError = "";
            szDecriptedData = TimelyDepotMVC.Controllers.PaymentController.DecodeInfo02(Model.CreditNumber, ref szError);
            if (!string.IsNullOrEmpty(szError))
            {
                nPos = szError.IndexOf("data to decode");
                if (nPos != -1)
                {
                    szDecriptedData = string.Empty;
                }
                else
                {
                    szDecriptedData = string.Format("******");
                }
            }
            else
            {
                //Mask the card number
                nHas = szDecriptedData.Length;
                if (nHas > 4)
                {
                    szMsg = szDecriptedData.Substring(nHas - 4, 4);
                    szDecriptedData = string.Format("******{0}", szMsg);
                }
                else
                {
                    szDecriptedData = string.Format("******");
                }
            }

            szDecriptedCode = TimelyDepotMVC.Controllers.PaymentController.DecodeInfo02(Model.SecureCode, ref szError);
            if (!string.IsNullOrEmpty(szError))
            {
                nPos = szError.IndexOf("data to decode");
                if (nPos != -1)
                {
                    szDecriptedCode = string.Empty;
                }
                else
                {
                    szDecriptedCode = string.Format("***");
                }
            }
            else
            {
                //Mask the card number
                nHas = szDecriptedCode.Length;
                if (nHas > 3)
                {
                    szMsg = szDecriptedCode.Substring(nHas - 3, 3);
                    szDecriptedData = string.Format("******{0}", szMsg);
                    szDecriptedData = string.Format("***");
                }
                else
                {
                    szDecriptedCode = string.Format("******");
                }
            }

            <div style="margin-top: 28px;">
                <table id="createeditcreditcardid" style="width: 900px; border-collapse: collapse; margin: 0px auto; border: 1px solid #000000;">
                    <tr>
                        <td class="boxlr5">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.Name)
                            </div>
                            <div class="viosinput400">
                                @Html.EditorFor(model => model.Name)
                                @Html.ValidationMessageFor(model => model.Name)
                            </div>

                        </td>
                        <td>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.Tel)
                            </div>
                            <div class="viosinput400">
                                <input id="Tel" name="Tel" type="text" value="@telHlp.ToString(telfmt)" />
                                @*@Html.EditorFor(model => model.Tel)*@
                                @Html.ValidationMessageFor(model => model.Tel)
                            </div>

                        </td>
                    </tr>
                    <tr>
                        <td class="boxlr5">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.CreditNumber)
                            </div>
                            <div class="viosinput400">
                                <input id="CreditNumber01" name="CreditNumber01" type="text" value="@szDecriptedData" />

                            </div>
                        </td>
                        <td>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.Address1)
                            </div>
                            <div class="viosinput400">
                                @Html.EditorFor(model => model.Address1)
                                @Html.ValidationMessageFor(model => model.Address1)
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="boxlr5">
                            <div>
                                <div class="left" style="margin-right: 10px;">
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.CardType)
                                    </div>
                                    @Html.DropDownList("CardType", (IEnumerable<SelectListItem>)ViewBag.CardTypeList, "SelectCardt Type.", new { id = "cardtypeelectorId" })
                                    <div class="viosinput180" style="display: none;">
                                        @Html.EditorFor(model => model.CardType)
                                        @Html.ValidationMessageFor(model => model.CardType)
                                    </div>
                                </div>
                                <div>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.SecureCode)
                                    </div>
                                    <div class="viosinput180">
                                        @Html.EditorFor(model => model.SecureCode)
                                        @Html.ValidationMessageFor(model => model.SecureCode)
                                        @*<input id="SecureCode01" name="SecureCode01" type="text" value="@szDecriptedCode" />*@
                                    </div>
                                </div>
                            </div>
                        </td>
                        <td>
                            <div>
                                <div class="left" style="margin-right: 10px;">
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.City)
                                    </div>
                                    <div class="viosinput180">
                                        @Html.EditorFor(model => model.City)
                                        @Html.ValidationMessageFor(model => model.City)
                                    </div>
                                </div>
                                <div>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.State)
                                    </div>
                                    <div class="viosinput180">
                                        @Html.EditorFor(model => model.State)
                                        @Html.ValidationMessageFor(model => model.State)
                                    </div>
                                </div>
                            </div>

                        </td>
                    </tr>
                    <tr>
                        <td class="boxlr5">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.ExpirationDate)
                            </div>
                            <div class="viosinput180">
                                <input id="ExpirationDateHlp" name="ExpirationDateHlp" style="margin-right:3px;" type="text" value="@Convert.ToDateTime(Model.ExpirationDate).ToString("MM/yyyy")" />
                                @*Html.EditorFor(model => model.ExpirationDate)*@
                                @Html.ValidationMessageFor(model => model.ExpirationDate)
                            </div>
                        </td>
                        <td>
                            <div>
                                <div class="left" style="margin-right: 10px;">
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.Zip)
                                    </div>
                                    <div class="viosinput180">
                                        @Html.EditorFor(model => model.Zip)
                                        @Html.ValidationMessageFor(model => model.Zip)
                                    </div>
                                </div>
                                <div>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.Country)
                                    </div>
                                    <div class="viosinput180">
                                        @Html.EditorFor(model => model.Country)
                                        @Html.ValidationMessageFor(model => model.Country)
                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>
                </table>
                <div class="centerMinified">
                    <input id="btAddCreditCard" class="btn btn-default" type="button" value="Add" />&nbsp;
                    <input type="submit" id="UpdateCreditCardid" class="btn btn-default" value="Update" />&nbsp;
                    @*<button type="button" id="UpdateCreditCardid">Update</button>*@
                    @Html.ActionLink("Delete", "DeleteCreditCard", "Customers", new { id = Model.Id, customerdefaultid = ViewBag.CustomerDefaultId }, new { id = "btDeleteSalesContact", @class = "btn btn-default", onclick = "return confirm('Do you want to delete this Credit Card?');" })
                </div>

            </div>

            @*

                <div class="editor-label">
                    @Html.LabelFor(model => model.Address2)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Address2)
                    @Html.ValidationMessageFor(model => model.Address2)
                </div>*@
        }
    </div>
    <div id="contactFormStatus">
    </div>
</div>
        @section scripts{

            <script>
                jQuery(document).ready(function (e) {
                    $(function () {
                        $('#UpdateCreditCardid').submit(function () {
                            $.ajax({
                                type: this.method,
                                url: this.action,
                                data: $(this).serialize(),
                                success: function (result) {
                                    if (result.success) {
                                        $('#UpdateCreditCardForm')[0].reset();
                                    }
                                    $('#contactFormStatus').text(result.message);
                                }
                            });
                            return false;
                        });
                    });
                });
            </script>
        }
