@using PagedList.Mvc;   @*//import this so we get our HTML Helper*@
@using PagedList;       @*//import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@
@model IEnumerable<TimelyDepotMVC.Models.Admin.Customers>

@{
    ViewBag.Title = "Customers";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>@ViewBag.Title</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table>
    <tr>
        <th></th>
        <th>Id</th>
        <th>
            @Html.DisplayNameFor(model => model.CustomerNo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BussinesType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SalesPerson)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DeptoNo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SellerPermintNo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ASINo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PPAINo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SageNo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Origin)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreditLimit)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PaymentTerms)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BussinesSice)
        </th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Id)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CustomerNo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Status)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BussinesType)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SalesPerson)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DeptoNo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SellerPermintNo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ASINo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PPAINo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SageNo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Origin)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreditLimit)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PaymentTerms)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BussinesSice)
        </td>
    </tr>
}
    <tr>
        <td colspan="5">
            <!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
            @Html.PagedListPager((IPagedList)ViewBag.OnePageOfData, page => Url.Action("Index", new { page }))

        </td>
    </tr>

</table>
