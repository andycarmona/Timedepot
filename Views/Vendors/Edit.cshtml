@using PagedList.Mvc;   @*//import this so we get our HTML Helper*@
@using PagedList;       @*//import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@
@model TimelyDepotMVC.ModelsView.VendorView

@{
    ViewBag.Title = "Vendor";
    //Layout = "~/Views/Shared/_Layout.cshtml";
}

@section scripts{
    <script type="text/javascript">
        jQuery(document).ready(initializeCustomerEdit);

        function initializeCustomerEdit() {

            //Create buttons
            jQuery(".btNavTimley").button();

            //Attach handlers 
            jQuery(".lnkCreateEditNoteCustomer").each(eachlnkCreateEditNoteCustomer);
            //jQuery(".lnkCreateEditSubsidiaryCustomer").each(eachlnkCreateEditSubsidiaryCustomer);
            jQuery(".lnkCreateEditSaleCustomer").each(eachlnkCreateEditSaleCustomer);
            //jQuery(".lnkCreateEditShipCustomer").each(eachlnkCreateEditShipCustomer);
            jQuery("#salescontactselectorId").change(changesalescontactselectorId);

            jQuery("#selectiteminactiveid").change(changeselectiteminactiveid);
            jQuery("#btPrevious").click(clickbtPrevious);
            jQuery("#btNext").click(clickbtNext);
            jQuery("#lnkVendorNoteid").click(clicklnkVendorNoteid);
            jQuery("#addcustomerHlpid").blur(bluraddcustomerHlpid);

            //jQuery("#lnkQuitEditVendor").click(clickbtQuit);
            jQuery("#lnkQuitid").click(clicklnkQuitidEditVendor);

            //Create the tabs
            //jQuery("#tabs").tabs({ load: loadTab });
            jQuery("#tabscustomers").tabs({ beforeActivate: bfactabs });
            jQuery("#summarytabs").tabs({ beforeActivate: bfacsummarytabs });


            //Prepare the dialogs 
            jQuery("#loadingHlpDialogid").dialog({ autoOpen: false, modal: true });
            jQuery("#editcustomerdialoid").dialog({ autoOpen: false, modal: true });

            //Load the forms used in the tabs
            //LoadSalesContact02();
            LoadSalesContact();
            SetTabIndex();

            //Initialize fields
            SetActiveInactiveSelector();

        }
        function bluraddcustomerHlpid(src, arg) {
            //debugger;
            var szCustomerNo = src.target.value;
            jQuery("#vendor_VendorNo").val(szCustomerNo);
            jQuery("#lnkAddCustomerId").css("display", "none");
        }

        function clicklnkVendorNoteid(src, arg) {
            src.preventDefault();
            LoadEditNoteCustomer();
        }
        function loadTab(event, ui) {
            //debugger;

            //Use the required ui
            if (ui.index == 1) {
                //Create the buttons
                jQuery(".divButtons a").button();
            }
        }

        function eachlnkCreateEditNoteCustomer(nPos, src) {
            jQuery(src).click(clicklnkCreateEditNoteCustomer);
        }

        function clicklnkCreateEditNoteCustomer(src, arg) {
            //debugger;
            src.preventDefault();
            //Display load image
            ShowLoadingDialog();

            //Get the partial view
            var szUrl = jQuery(src.target).attr("href");

            jQuery.ajax({
                type: 'GET',
                url: szUrl,
                data: null,
                //contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                error: AjaxFailed,
                success: customerNoteSuccess
            });
        }

        function AjaxFailed(response, statusCode, optionerror) {
            //debugger;
            //var response = ajaxContext.get_response();
            //var statusCode = response.get_statusCode();
            alert("Sorry, the request failed with status code: " + statusCode);
        }
        function customerNoteSuccess(response, statusCode) {
            //debugger;
            var objRes = response;

            //Display the response data
            jQuery("#editcustomerdialoid").html(objRes);

            //Hide load image
            HideLoadingDialog();

            //Set the buttons
            jQuery(".btNavTimley").button();

            //Attach handlers 
            jQuery("#btDialogClose").click(clickbtDialogClose);

            //Get the title 
            //debugger;
            var szTitle = "Vendor Special Note";

            //Show the dialog (used with the BuscarDepartamento call)
            jQuery("#editcustomerdialoid").dialog("option", "title", szTitle);

            //setter
            jQuery("#editcustomerdialoid").dialog("option", "width", 700);

            //display the popup dialog
            jQuery("#editcustomerdialoid").dialog("open");

        }

        function clickbtDialogClose(src, arg) {
            jQuery("#editcustomerdialoid").dialog("close");
        }

        function eachlnkCreateEditSubsidiaryCustomer(Npo, src) {
            jQuery(src).click(clicklnkCreateEditSubsidiaryCustomer);
        }

        function clicklnkCreateEditSubsidiaryCustomer(src, arg) {
            //debugger;
            src.preventDefault();
            //Display load image
            ShowLoadingDialog();

            //Get the partial view
            var szUrl = jQuery(src.target).attr("href");

            jQuery.ajax({
                type: 'GET',
                url: szUrl,
                data: null,
                //contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                error: AjaxFailed,
                success: subsidiaryNoteSuccess
            });
        }

        function subsidiaryNoteSuccess(response, statusCode) {
            //debugger;
            var objRes = response;

            //Display the response data
            jQuery("#editcustomerdialoid").html(objRes);

            //Hide load image
            HideLoadingDialog();

            //Set the buttons
            jQuery(".btNavTimley").button();

            //Attach handlers 
            jQuery("#btDialogCloseSubsidiary").click(clickbtDialogCloseSubsidiary);

            //Get the title 
            //debugger;
            var szTitle = "Subsidiary";

            //Show the dialog (used with the BuscarDepartamento call)
            jQuery("#editcustomerdialoid").dialog("option", "title", "Add " + szTitle);

            //setter
            jQuery("#editcustomerdialoid").dialog("option", "width", 700);

            //display the popup dialog
            jQuery("#editcustomerdialoid").dialog("open");
        }

        function clickbtDialogCloseSubsidiary(src, arg) {
            jQuery("#editcustomerdialoid").dialog("close");
        }

        function eachlnkCreateEditSaleCustomer(nPos, src) {
            jQuery(src).click(clicklnkCreateEditSaleCustomer);
        }

        function clicklnkCreateEditSaleCustomer(src, arg) {
            //debugger;
            src.preventDefault();
            //Display load image
            ShowLoadingDialog();

            //Get the partial view
            var szUrl = jQuery(src.target).attr("href");

            jQuery.ajax({
                type: 'GET',
                url: szUrl,
                data: null,
                //contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                error: AjaxFailed,
                success: salesSuccess
            });
        }

        function salesSuccess(response, statusCode) {
            //debugger;
            var objRes = response;

            //Display the response data
            jQuery("#editcustomerdialoid").html(objRes);

            //Hide load image
            HideLoadingDialog();

            //Set the buttons
            jQuery(".btNavTimley").button();

            //Attach handlers 
            jQuery("#btDialogCloseSales").click(clickbtDialogCloseSales);

            //Get the title 
            //debugger;
            var szTitle = "Sales Contact";

            //Show the dialog (used with the BuscarDepartamento call)
            jQuery("#editcustomerdialoid").dialog("option", "title", " " + szTitle);

            //setter
            jQuery("#editcustomerdialoid").dialog("option", "width", 700);

            //display the popup dialog
            jQuery("#editcustomerdialoid").dialog("open");
        }

        function clickbtDialogCloseSales(src, arg) {
            jQuery("#editcustomerdialoid").dialog("close");
        }

        function eachlnkCreateEditShipCustomer(nPos, src) {
            jQuery(src).click(clicklnkCreateEditShipCustomer);
        }

        function clicklnkCreateEditShipCustomer(src, arg) {
            //debugger;
            src.preventDefault();
            //Display load image
            ShowLoadingDialog();

            //Get the partial view
            var szUrl = jQuery(src.target).attr("href");

            jQuery.ajax({
                type: 'GET',
                url: szUrl,
                data: null,
                //contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                error: AjaxFailed,
                success: shipSuccess
            });
        }

        function shipSuccess(response, statusCode) {
            //debugger;
            var objRes = response;

            //Display the response data
            jQuery("#editcustomerdialoid").html(objRes);

            //Hide load image
            HideLoadingDialog();

            //Set the buttons
            jQuery(".btNavTimley").button();

            //Attach handlers 
            jQuery("#btDialogCloseSales").click(clickbtDialogCloseSales);

            //Get the title 
            //debugger;
            var szTitle = "Ship to Address";

            //Show the dialog (used with the BuscarDepartamento call)
            jQuery("#editcustomerdialoid").dialog("option", "title", " " + szTitle);

            //setter
            jQuery("#editcustomerdialoid").dialog("option", "width", 700);

            //display the popup dialog
            jQuery("#editcustomerdialoid").dialog("open");
        }
        function LoadSalesContact02() {

            //Display load image
            ShowLoadingDialog();

            //Get the partial view
            var szUrl = jQuery("#lnkCreateEditSaleCustomer02").attr("href");
            //debugger;

            jQuery.ajax({
                type: 'GET',
                url: szUrl,
                data: null,
                //contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                error: AjaxFailed,
                success: salescontactSuccess
            });
        }

        function LoadSalesContact() {

            //Display load image
            ShowLoadingDialog();

            //Get the partial view
            var szUrl = jQuery("#lnkCreateEditSaleCustomer01").attr("href");
            //debugger;

            jQuery.ajax({
                type: 'GET',
                url: szUrl,
                data: null,
                //contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                error: AjaxFailed,
                success: salescontactSuccess
            });
        }

        function salescontactSuccess(response, statusCode) {
            //debugger;
            var objRes = response;

            //Display the response data
            jQuery("#salescontactdataid").html(objRes);

            //Hide load image
            HideLoadingDialog();

            //Set the buttons
            jQuery(".btNavTimley").button();

            SetSalesContactIndex();

            //Attach handlers 
            jQuery("#samevendorasmainid").click(clicksamevendorasmainid);

            //Set the dropdown selector 
            var szMsg = "";
            var szSalesContactIdHlp = jQuery("#salescontactId").val();
            var ddlSalesContact = jQuery("#salescontactselectorId");
            for (var i = 0; i < ddlSalesContact[0].length; i++) {
                szMsg = ddlSalesContact[0][i].value;
                if (szSalesContactIdHlp == szMsg) {
                    //When this is enabled gives de efect of 'no sincorinized'
                    //ddlSalesContact[0].selectedIndex = ddlSalesContact[0][i].index;
                }
            }

            var nIndice = ddlSalesContact[0].selectedIndex;

            //Attach handlers 
            jQuery("#btAddSalesContact").click(clickbtAddSalesContact);
            jQuery("#UpdateCustomerSalesid").submit(submitUpdateCustomerSalesid)

        }

        function clickbtAddSalesContact(src, arg) {
            //debugger;

            //Display load image
            //ShowLoadingDialog();

            //Get the partial view
            var szVendorIdHlp = jQuery("#vendor_Id").val();

            //Empty all fields and adjust Id field 
            jQuery("#Id").val("0");
            jQuery("#VendorId").val(szVendorIdHlp);
            jQuery("#FirstName").val("");
            jQuery("#LastName").val("");
            jQuery("#Address").val("");
            jQuery("#Title").val("");
            jQuery("#Note").val("");
            jQuery("#Tel").val("");
            jQuery("#Fax").val("");
            jQuery("#City").val("");
            jQuery("#State").val("");
            jQuery("#Email").val("");
            jQuery("#Zip").val("");
            jQuery("#Country").val("");

            //var szMsg1 = "";
            //var szMsg2 = "";
            //var szUrl = jQuery("#lnkCreateEditSaleCustomer01").attr("href");
            //var nPos1 = szUrl.lastIndexOf("/");
            //var nPos2 = szUrl.lastIndexOf("=");
            //if (nPos1 != -1 && nPos2 != -1) {
            //    szMsg1 = szUrl.substring(0, nPos1 + 1);
            //    szMsg2 = szUrl.substring(nPos2 + 1);
            //    szUrl = szMsg1 + '0?vendorid=' + szMsg2 + '&vendoridHlp=' + szVendorIdHlp;
            //}

            //jQuery.ajax({
            //    type: 'GET',
            //    url: szUrl,
            //    data: null,
            //    //contentType: 'application/json; charset=utf-8',
            //    dataType: 'html',
            //    error: AjaxFailed,
            //    success: salescontactSuccess
            //});
        }

        function clicksamevendorasmainid(src, arg) {
            //debugger;
            src.preventDefault();

            //Copy from main contact createeditsalesid
            var szObj = jQuery("#vendoraddress_FirstName").val();
            //jQuery("#FirstName").val(szObj);
            jQuery("#createeditsalesid #FirstName").val(szObj);

            jQuery("#createeditsalesid #LastName").val(jQuery("#vendoraddress_LastName").val());
            jQuery("#createeditsalesid #Address").val(jQuery("#vendoraddress_Address").val());
            jQuery("#createeditsalesid #Note").val(jQuery("#vendoraddress_Note").val());

            jQuery("#createeditsalesid #Tel").val(jQuery("#vendoraddress_Tel").val());
            jQuery("#createeditsalesid #Fax").val(jQuery("#vendoraddress_Fax").val());
            jQuery("#createeditsalesid #Zip").val(jQuery("#vendoraddress_Zip").val());
            jQuery("#createeditsalesid #Country").val(jQuery("#vendoraddress_Country").val());

            jQuery("#createeditsalesid #Title").val(jQuery("#vendoraddress_Title").val());
            jQuery("#createeditsalesid #City").val(jQuery("#vendoraddress_City").val());
            jQuery("#createeditsalesid #State").val(jQuery("#vendoraddress_State").val());
            jQuery("#createeditsalesid #Email").val(jQuery("#vendoraddress_Email").val());
        }
        function changesalescontactselectorId(src, arg) {
            //debugger;

            var szVendorIdHlp = jQuery("#vendor_Id").val();

            var nSelected = src.target.selectedIndex;
            var nId = src.target[nSelected].value;
            var szMsg1 = "";
            var szMsg2 = "";
            var szUrl = jQuery("#lnkCreateEditSaleCustomer01").attr("href");
            var nPos1 = szUrl.lastIndexOf("/");
            var nPos2 = szUrl.lastIndexOf("=");
            if (nPos1 != -1 && nPos2 != -1) {
                szMsg1 = szUrl.substring(0, nPos1 + 1);
                szMsg2 = szUrl.substring(nPos2 + 1);
                szUrl = szMsg1 + szVendorIdHlp + '?vendorid=' + nId;
            }

            jQuery.ajax({
                type: 'GET',
                url: szUrl,
                data: null,
                //contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                error: AjaxFailed,
                success: salescontactSuccess
            });
        }

        function LoadEditNoteCustomer() {
            //debugger;

            //Get the partial view
            var szUrl = jQuery("#lnkVendorNoteid").attr("href");

            jQuery.ajax({
                type: 'GET',
                url: szUrl,
                data: null,
                //contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                error: AjaxFailed,
                success: customerNoteSuccess
            });
        }

        function submitUpdateCustomerSalesid(src, arg) {
            //debugger;
            var szCustomerDefaultid = '@Model.vendordefaults.Id';
            //var szCustomerDefaultid = '@Model.vendordefaults.VendorId';
            var hrefaction = src.target.action;
            var nPos = hrefaction.lastIndexOf("?");
            if (nPos != -1) {
                hrefaction = hrefaction.substring(0, nPos + 1);
                hrefaction = hrefaction + 'vendordefault=' + szCustomerDefaultid;
            }
            src.target.action = hrefaction;
        }
        function SetTabIndex() {
            //debugger;
            jQuery("#vendoraddress_CompanyName").attr("tabindex", "1");
            jQuery("#vendoraddress_FirstName").attr("tabindex", "1");
            jQuery("#vendoraddress_LastName").attr("tabindex", "1");
            jQuery("#vendoraddress_Title").attr("tabindex", "1");
            jQuery("#vendoraddress_Tel1").attr("tabindex", "1");
            jQuery("#vendoraddress_Tel2").attr("tabindex", "1");
            jQuery("#vendoraddress_Tel").attr("tabindex", "1");
            jQuery("#vendoraddress_Fax").attr("tabindex", "1");
            jQuery("#vendoraddress_Email").attr("tabindex", "1");

            jQuery("#vendoraddress_Address").attr("tabindex", "2");
            jQuery("#vendoraddress_Address3").attr("tabindex", "2");
            jQuery("#vendoraddress_Note").attr("tabindex", "2");
            jQuery("#vendoraddress_City").attr("tabindex", "2");
            jQuery("#vendoraddress_State").attr("tabindex", "2");
            jQuery("#vendoraddress_Zip").attr("tabindex", "2");
            jQuery("#vendoraddress_Country").attr("tabindex", "2");
            jQuery("#vendoraddress_Website").attr("tabindex", "2");

        }

        function SetSalesContactIndex() {
            //debugger;
            jQuery("#FirstName").attr("tabindex", "3");
            jQuery("#LastName").attr("tabindex", "3");
            jQuery("#Title").attr("tabindex", "3");
            jQuery("#Tel").attr("tabindex", "3");
            jQuery("#Fax").attr("tabindex", "3");
            jQuery("#Email").attr("tabindex", "3");

            jQuery("#Address").attr("tabindex", "4");
            jQuery("#Note").attr("tabindex", "4");
            jQuery("#City").attr("tabindex", "4");
            jQuery("#State").attr("tabindex", "4");
            jQuery("#Zip").attr("tabindex", "4");
            jQuery("#Country").attr("tabindex", "4");

        }
        function bfactabs(event, ui) {

            if (ui.newPanel.selector == "#tabs-4") {
                //debugger;
                LoadOpenPurchaseOrder();
            }
        }
        function bfacsummarytabs(event, ui) {
            if (ui.newPanel.selector == "#summtabs-1") {
                //debugger;
                LoadOpenPurchaseOrder();
            }
            if (ui.newPanel.selector == "#summtabs-2") {
                //debugger;
                LoadReceivedPurchaseOrder();
            }
        }
        function LoadOpenPurchaseOrder() {
            //debugger;

            //Display load image
            ShowLoadingDialog();

            //Get the partial view
            var szUrl = jQuery("#lnkOpenPurchaseOrder").attr("href");

            jQuery.ajax({
                type: 'GET',
                url: szUrl,
                data: null,
                //contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                error: AjaxFailed,
                success: OpenPurchaseOrderSuccess
            });
        }
        function OpenPurchaseOrderSuccess(response, statusCode) {
            //debugger;
            var objRes = response;

            //Display the response data
            jQuery("#openpurchaseorderid").html(objRes);

            //Hide load image
            HideLoadingDialog();

            //Set the buttons
            jQuery(".btNavTimley").button();


            //Attach handlers
            jQuery(".pagination ul li a").each(eachlnknavigation);

        }
        function eachlnknavigation(nPos, src) {
            if (src.href != "") {
                jQuery(src).click(clicklnkselectPOOpenpage);
            }
        }
        function clicklnkselectPOOpenpage(src, arg) {
            //debugger;
            src.preventDefault();

            //Display load image
            ShowLoading01Dialog("Inventory List");

            //Get the partial view
            var szUrl = jQuery(src.target).attr("href");

            jQuery.ajax({
                type: 'GET',
                url: szUrl,
                data: null,
                //contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                error: AjaxFailed,
                success: OpenPurchaseOrderSuccess
            });
        }
        //
        function LoadReceivedPurchaseOrder() {
            //debugger;

            //Display load image
            ShowLoadingDialog();

            //Get the partial view
            var szUrl = jQuery("#lnkReceivedPurchaseOrder").attr("href");

            jQuery.ajax({
                type: 'GET',
                url: szUrl,
                data: null,
                //contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                error: AjaxFailed,
                success: ReceivedPurchaseOrderSuccess
            });
        }
        function ReceivedPurchaseOrderSuccess(response, statusCode) {
            //debugger;
            var objRes = response;

            //Display the response data
            jQuery("#receivedpurchaseorderid").html(objRes);

            //Hide load image
            HideLoadingDialog();

            //Set the buttons
            jQuery(".btNavTimley").button();


            //Attach handlers
            jQuery(".pagination ul li a").each(eachlnknavigationreceived);

        }
        function eachlnknavigationreceived(nPos, src) {
            if (src.href != "") {
                jQuery(src).click(clicklnkselectPOReceivedpage);
            }
        }
        function clicklnkselectPOReceivedpage(src, arg) {
            //debugger;
            src.preventDefault();

            //Display load image
            ShowLoadingDialog();

            //Get the partial view
            var szUrl = jQuery(src.target).attr("href");

            jQuery.ajax({
                type: 'GET',
                url: szUrl,
                data: null,
                //contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                error: AjaxFailed,
                success: ReceivedPurchaseOrderSuccess
            });
        }
        function changeselectiteminactiveid(src, arg) {
            //debugger;
            var szId = src.target.id;
            var nSelected = src.target.selectedIndex;
            var nId = src.target[nSelected].text;

            //alert(nId + ' ' + jQuery("#vendor_Status").prop("checked") );

            if (nId == "") {
                jQuery("#vendor_Status").prop("checked", false);
            }
            else {
                if (nId == "Inactive") {
                    jQuery("#vendor_Status").prop("checked", false);
                }
                else {
                    jQuery("#vendor_Status").prop("checked", true);
                }
            }
        }
        function clickbtQuit(src, arg) {
            window.close();
        }
        function clicklnkQuitidEditVendor(src, arg) {
            var hrefHlp = src.target.href;
            var hrefLnkQuit = jQuery("#lnkQuitEditVendor").attr("href");

            src.target.href = hrefLnkQuit;
        }
        function clickbtPrevious(src, arg) {
            var szUrl = jQuery("#lnkPrevious").attr("href");
            window.open(szUrl, target = "_self");
        }
        function clickbtNext(src, arg) {
            var szUrl = jQuery("#lnkNext").attr("href");
            window.open(szUrl, target = "_self");
        }
        function SetActiveInactiveSelector() {
            //debugger;
            //var szActiveInactive = jQuery("#customer_Status").val();
            var szActiveInactive = '@Model.vendor.Status';

            var ddlHlp = jQuery("#selectiteminactiveid")[0];
            if (szActiveInactive == "True") {
                ddlHlp.selectedIndex = 1;
            }
            else {
                if (szActiveInactive == "False") {
                    ddlHlp.selectedIndex = 2;
                }
                else {
                    ddlHlp.selectedIndex = 1;
                }
            }
        }
    </script>
}
<div class="divh1">@ViewBag.Title&nbsp;@ViewBag.CustomerInfo</div>
<div style="border: 1px solid #6B6C69; padding: 5px 50px 5px 50px;">
    <div class="cf">
        <div class="editor-label left">
            @Html.LabelFor(model => model.vendor.VendorNo)
            @if (ViewBag.AddCustomerHlp == null)
            {
                <span style="font-weight: bold; margin-left: 5px;">@Html.DisplayFor(model => model.vendor.VendorNo)</span>               
            }
            else
            {
                <input id="addcustomerHlpid" type="text" value="@Model.vendor.VendorNo" />
            }
        </div>
        <div class="left" style="width: 500px; margin-left: 300px;">
            <input id="btPrevious" class="btNavTimley" type="button" value="Previous" />
            <input id="btNext" class="btNavTimley" style="margin-left: 50px;" type="button" value="Next" />
        </div>
        <div class="right">
            @Html.DropDownList("iteminavtiveid", (IEnumerable<SelectListItem>)ViewBag.ActiveInactivelist, "Select", new { id = "selectiteminactiveid" })
        </div>
    </div>
    @{
        int nRow = 0;
        int nMod = 0;
        string szClass = "";
        string modomultiple = "";
        TimelyDepotMVC.DAL.TimelyDepotContext db01 = new TimelyDepotMVC.DAL.TimelyDepotContext();
    }
    <div id="maincontentcustomerid">
        <div id="tabscustomers" style="margin-top: 1em; margin-bottom: 0.3em;">
            <ul>
                <li><a href="#tabscus-1">Main Contact</a></li>
                <li><a href="#tabscus-2">Sales Contact</a></li>
                <li><a href="#tabscus-3">Bank Info</a></li>
            </ul>
            <div id="tabscus-1">
                <div style="padding: 5px;">
                    @using (Html.BeginForm("UpdateVendorandAddress", "Vendors", FormMethod.Post))
                    {
                        long telHlp = 0;
                        long faxHlp = 0;
                        string telfmt = "000-000-0000";

                        @Html.HiddenFor(model => model.vendor.Id)
                        <div style="display: none;">@Html.EditorFor(model => model.vendor.Status)</div>                        
                        <div style="display: none;">@Html.EditorFor(model => model.vendor.VendorNo)</div>                        

                        @Html.HiddenFor(model => model.vendoraddress.Id)
                        @Html.HiddenFor(model => model.vendoraddress.VendorId)
                
                        <div class="cf">
                            <div class="left">
                                <div id="vendorsaddressidHlp" style="width: 500px; margin-top: 5px; margin-left: 5px;">
                                    <table style="width: 500px; border-collapse: collapse; margin: 0px auto;">
                                        <tr>
                                            <td class="boxlr5">
                                                <div class="editor-label">
                                                    @Html.LabelFor(model => model.vendoraddress.CompanyName)
                                                </div>
                                                <div class="viosinput400">
                                                    @Html.EditorFor(model => model.vendoraddress.CompanyName)
                                                    @Html.ValidationMessageFor(model => model.vendoraddress.CompanyName)
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="boxlr5">
                                                <div>Contact</div>
                                                <div>
                                                    <div class="left" style="margin-right: 10px;">
                                                        <div class="viosinput190">
                                                            @Html.EditorFor(model => model.vendoraddress.FirstName)
                                                            @Html.ValidationMessageFor(model => model.vendoraddress.FirstName)
                                                        </div>
                                                    </div>
                                                    <div>
                                                        <div class="viosinput190">
                                                            @Html.EditorFor(model => model.vendoraddress.LastName)
                                                            @Html.ValidationMessageFor(model => model.vendoraddress.LastName)
                                                        </div>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="boxlr5">
                                                <div class="editor-label">
                                                    @Html.LabelFor(model => model.vendoraddress.Title)
                                                </div>
                                                <div class="viosinput400">
                                                    @Html.EditorFor(model => model.vendoraddress.Title)
                                                    @Html.ValidationMessageFor(model => model.vendoraddress.Title)
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <div>
                                                    <div class="left" style="margin-right: 10px;">
                                                        <div class="editor-label">
                                                            @Html.LabelFor(model => model.vendoraddress.Tel1)
                                                        </div>
                                                        @{
                        telHlp = Convert.ToInt64(Model.vendoraddress.Tel1);
                        telHlp = Convert.ToInt64(Model.vendoraddress.Fax);

                        string szBussinesType = TimelyDepotMVC.Controllers.VendorsController.GetBussinesType(db01, Convert.ToInt32(Model.vendoraddress.VendorId), "");

                        if (!string.IsNullOrEmpty(szBussinesType))
                        {
                            if (szBussinesType.ToUpper() != "DOMESTIC")
                            {
                                int nLen = 13;
                                if (!string.IsNullOrEmpty(Model.vendoraddress.Tel))
                                {
                                    nLen = Model.vendoraddress.Tel.Length;
                                }
                                switch (nLen)
                                {
                                    case 8:
                                        telfmt = "000-00000";
                                        break;
                                    case 9:
                                        telfmt = "000-000000";
                                        break;
                                    case 10:
                                        telfmt = "000-0000000";
                                        break;
                                    case 11:
                                        telfmt = "000-00000000";
                                        break;
                                    case 12:
                                        telfmt = "000-000000000";
                                        break;
                                    case 13:
                                        telfmt = "000-0000000000";
                                        break;
                                    default:
                                        break;
                                }

                            }
                        }
                        
                                                        }
                                                        <div class="viosinput160">
                                                            <input id="vendoraddress_Tel1" name="vendoraddress.Tel1" type="text" value="@telHlp.ToString(telfmt)" />
                                                            @*Html.EditorFor(model => model.vendoraddress.Tel1)
                                            @Html.ValidationMessageFor(model => model.vendoraddress.Tel1)*@
                                                        </div>
                                                    </div>
                                                    <div>
                                                        <div class="editor-label">
                                                            @Html.LabelFor(model => model.vendoraddress.Fax)
                                                        </div>
                                                        <div class="viosinput160">
                                                            <input id="vendoraddress_Fax" name="vendoraddress.Fax" type="text" value="@telHlp.ToString(telfmt)" />
                                                            @*Html.EditorFor(model => model.vendoraddress.Fax)
                                            @Html.ValidationMessageFor(model => model.vendoraddress.Fax)*@
                                                        </div>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="boxlr5">
                                                <div>
                                                    <div class="left" style="margin-right: 10px;">
                                                        <div class="editor-label">
                                                            @Html.LabelFor(model => model.vendoraddress.Tel2)
                                                        </div>
                                                        @{
                        telHlp = Convert.ToInt64(Model.vendoraddress.Tel2);
                                                        }
                                                        <div class="viosinput160">
                                                            <input id="vendoraddress_Tel2" name="vendoraddress.Tel2" type="text" value="@telHlp.ToString(telfmt)" />
                                                            @*Html.EditorFor(model => model.vendoraddress.Tel2)
                                            @Html.ValidationMessageFor(model => model.vendoraddress.Tel2)*@
                                                        </div>
                                                    </div>
                                                    <div>
                                                        <div class="editor-label">
                                                            @Html.LabelFor(model => model.vendoraddress.Tel)
                                                        </div>
                                                        @{
                        telHlp = Convert.ToInt64(Model.vendoraddress.Tel);
                                                        }
                                                        <div class="viosinput160">
                                                            <input id="vendoraddress_Tel" name="vendoraddress.Tel" type="text" value="@telHlp.ToString(telfmt)" />
                                                            @*Html.EditorFor(model => model.vendoraddress.Tel)
                                            @Html.ValidationMessageFor(model => model.vendoraddress.Tel)*@
                                                        </div>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <div class="editor-label">
                                                    @*@Html.LabelFor(model => model.vendoraddress.Address)*@
                                                    Address 1
                                                </div>
                                                <div class="viosinput400">
                                                    @Html.EditorFor(model => model.vendoraddress.Address)
                                                    @Html.ValidationMessageFor(model => model.vendoraddress.Address)
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <div class="editor-label">
                                                    @*@Html.LabelFor(model => model.vendoraddress.Note)*@
                                                    Address 2
                                                </div>
                                                <div class="viosinput400">
                                                    @Html.EditorFor(model => model.vendoraddress.Note)
                                                    @Html.ValidationMessageFor(model => model.vendoraddress.Note)
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <div class="editor-label">
                                                    @*@Html.LabelFor(model => model.vendoraddress.Note)*@
                                                    Address 3
                                                </div>
                                                <div class="viosinput400">
                                                    @Html.EditorFor(model => model.vendoraddress.Address3)
                                                    @Html.ValidationMessageFor(model => model.vendoraddress.Address3)
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <div>
                                                    <div class="left" style="margin-right: 10px;">
                                                        <div class="editor-label">
                                                            @Html.LabelFor(model => model.vendoraddress.City)
                                                        </div>
                                                        <div class="viosinput160">
                                                            @Html.EditorFor(model => model.vendoraddress.City)
                                                            @Html.ValidationMessageFor(model => model.vendoraddress.City)
                                                        </div>
                                                    </div>
                                                    <div>
                                                        <div class="editor-label">
                                                            @Html.LabelFor(model => model.vendoraddress.State)
                                                        </div>
                                                        <div class="viosinput160">
                                                            @Html.EditorFor(model => model.vendoraddress.State)
                                                            @Html.ValidationMessageFor(model => model.vendoraddress.State)
                                                        </div>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <div>
                                                    <div class="left" style="margin-right: 10px;">
                                                        <div class="editor-label">
                                                            @Html.LabelFor(model => model.vendoraddress.Zip)
                                                        </div>
                                                        <div class="viosinput160">
                                                            @Html.EditorFor(model => model.vendoraddress.Zip)
                                                            @Html.ValidationMessageFor(model => model.vendoraddress.Zip)
                                                        </div>
                                                    </div>
                                                    <div>
                                                        <div class="editor-label">
                                                            @Html.LabelFor(model => model.vendoraddress.Country)
                                                        </div>
                                                        <div class="viosinput160">
                                                            @Html.EditorFor(model => model.vendoraddress.Country)
                                                            @Html.ValidationMessageFor(model => model.vendoraddress.Country)
                                                        </div>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    </table>
                                </div>

                            </div>
                            <div class="left">
                                <div style="width: 520px; margin-top: 5px; margin-right: 5px;">
                                    <table style="width: 510px; border-collapse: collapse; margin: 0px;">
                                        <tr>
                                            <td class="boxlr5">
                                                <div class="cf">
                                                    <div>
                                                        <div class="left">
                                                            <div class="editor-label">
                                                                @*@Html.LabelFor(model => model.vendor.Origin)*@
                                                                Original
                                                            </div>
                                                            @Html.DropDownList("vendor.Origin", (IEnumerable<SelectListItem>)ViewBag.OriginList, "Select Origin", new { id = "OriginselectorId", @class = "vendorbussinnestype" })
                                                            <div class="editor-field" style="display: none;">
                                                                @Html.EditorFor(model => model.vendor.Origin)
                                                                @Html.ValidationMessageFor(model => model.vendor.Origin)
                                                            </div>
                                                        </div>
                                                        <div class="left">
                                                            <div class="editor-label">
                                                                @Html.LabelFor(model => model.vendor.BussinesSice)
                                                            </div>
                                                            <div class="editor-field">
                                                                @Html.EditorFor(model => model.vendor.BussinesSice)
                                                                @Html.ValidationMessageFor(model => model.vendor.BussinesSice)
                                                            </div>
                                                        </div>
                                                        <div class="editor-label">
                                                            @Html.LabelFor(model => model.vendor.BussinesType)
                                                        </div>
                                                        @Html.DropDownList("vendor.BussinesType", (IEnumerable<SelectListItem>)ViewBag.VendorTypeList, "Select Vendor Type", new { id = "bussinestypeselectorId", @class = "vendorbussinnestype" })
                                                        <div class="editor-field" style="display: none;">
                                                            @Html.EditorFor(model => model.vendor.BussinesType)
                                                            @Html.ValidationMessageFor(model => model.vendor.BussinesType)
                                                        </div>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="boxlr5">
                                                <div class="cf">
                                                    <div class="left">
                                                        <div class="editor-label">
                                                            @Html.LabelFor(model => model.vendor.PaymentTerms)
                                                        </div>
                                                        @Html.DropDownList("vendor.PaymentTerms", (IEnumerable<SelectListItem>)ViewBag.TermsList, "Select Payment Terms", new { id = "PaymentTermsselectorId", @class = "vendorbussinnestype" })
                                                        <div class="editor-field" style="display: none;">
                                                            @Html.EditorFor(model => model.vendor.PaymentTerms)
                                                            @Html.ValidationMessageFor(model => model.vendor.PaymentTerms)
                                                        </div>
                                                    </div>
                                                    <div>
                                                        <div class="editor-label">
                                                            @Html.LabelFor(model => model.vendor.CreditLimit)
                                                        </div>
                                                        <div class="editor-field">
                                                            @Html.EditorFor(model => model.vendor.CreditLimit)
                                                            @Html.ValidationMessageFor(model => model.vendor.CreditLimit)
                                                        </div>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <div style="margin-bottom: 5px;">
                                                    <div class="editor-label">
                                                        @Html.LabelFor(model => model.vendoraddress.Email)
                                                    </div>
                                                    <div class="viosinput400">
                                                        @Html.EditorFor(model => model.vendoraddress.Email)
                                                        @Html.ValidationMessageFor(model => model.vendoraddress.Email)
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="margin-bottom: 5px;">
                                                <div style="margin-bottom: 5px;">
                                                    <div class="editor-label">
                                                        @Html.LabelFor(model => model.vendoraddress.Website)
                                                    </div>
                                                    <div class="viosinput400">
                                                        @Html.EditorFor(model => model.vendoraddress.Website)
                                                        @Html.ValidationMessageFor(model => model.vendoraddress.Website)
                                                    </div>
                                                </div>
                                            </td>

                                        </tr>
                                        <tr>
                                            <td>
                                                <div>Comment</div>
                                                <div>
                                                    <textarea id="comment" name="comment" cols="50" rows="10"></textarea>
                                                </div>
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </div>                                                                       
                        <div class="cf" style="margin: 16px auto 3px auto; width: 450px;">
                            <div class="left" style="margin-right: 5px;">
                                @Html.ActionLink("Add Vendor", "Create01", null, new { id = "lnkAddCustomerId", @class = "btNavTimley" })
                            </div>
                            <div class="left" style="margin-right: 5px;">
                                <input type="submit" class="btNavTimley" value="Update" />
                            </div>
                            <div class="left" style="margin-right: 5px;">
                                @Html.ActionLink("Delete", "Delete", new { id = Model.vendor.Id }, new { onclick = "return confirm('Are you sure you want to delete this Vendor?');", @class = "btNavTimley" })
                            </div>
                            <div class="left" style="display: block;">@Html.ActionLink("Quit", "Index", "Vendors", null, new { @class = "btNavTimley", id = "lnkQuitEditVendor" })</div>
                        </div>
                    }
                </div>
            </div>
            <div id="tabscus-2">
                <div style="padding: 5px;">
                    <div style="margin-bottom: 5px;">
                        <div class="left">
                            <label>Sales Contact</label>
                            @Html.DropDownList("salescontactId", (IEnumerable<SelectListItem>)ViewBag.SalesContactList, "Select Sales Contact", new { id = "salescontactselectorId" })
                            <input id="salescontactId" name="salescontactId" type="hidden" value="@Model.vendoraddress.VendorId" />
                        </div>
                    </div>
                    <div id="salescontactdataid">
                    </div>
                </div>

            </div>
            <div id="tabscus-3">
                <div style="padding: 5px;">
                    @using (Html.BeginForm("UpdateVendorBilling", "Vendors", FormMethod.Post))
                    {
                        @Html.HiddenFor(model => model.vendorbilling.Id)
                        @Html.HiddenFor(model => model.vendorbilling.VendorId)
                        <table style="width: 900px; border-collapse: collapse; margin: 0px auto; border: 1px solid #000000;">
                            <tr>
                                <td style="padding: 5px;">Payment information</td>
                                <td style="width: 420px; padding-top: 5px;">
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.vendorbilling.Beneficiary)
                                    </div>
                                    <div class="viosinput400">
                                        @Html.EditorFor(model => model.vendorbilling.Beneficiary)
                                        @Html.ValidationMessageFor(model => model.vendorbilling.Beneficiary)
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td></td>
                                <td>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.vendorbilling.BeneficiaryAccountNo)
                                    </div>
                                    <div class="viosinput400">
                                        @Html.EditorFor(model => model.vendorbilling.BeneficiaryAccountNo)
                                        @Html.ValidationMessageFor(model => model.vendorbilling.BeneficiaryAccountNo)
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td></td>
                                <td>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.vendorbilling.SWIFT)
                                    </div>
                                    <div class="viosinput400">
                                        @Html.EditorFor(model => model.vendorbilling.SWIFT)
                                        @Html.ValidationMessageFor(model => model.vendorbilling.SWIFT)
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td></td>
                                <td>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.vendorbilling.BankName)
                                    </div>
                                    <div class="viosinput400">
                                        @Html.EditorFor(model => model.vendorbilling.BankName)
                                        @Html.ValidationMessageFor(model => model.vendorbilling.BankName)
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td></td>
                                <td style="padding-bottom: 5px;">
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.vendorbilling.BankAddress)
                                    </div>
                                    <div class="viosinput400">
                                        @Html.TextAreaFor(model => model.vendorbilling.BankAddress, 6, 50, null)
                                        @*@Html.EditorFor(model => model.vendorbilling.BankAddress)*@
                                        @Html.ValidationMessageFor(model => model.vendorbilling.BankAddress)
                                    </div>
                                </td>
                            </tr>
                        </table>
                        <div style="width: 900px; margin: 0px auto; padding: 5px;">
                            <input type="submit" class="btNavTimley" value="Update" />
                        </div>
                
                    }
                </div>
            </div>
        </div>
    </div>
    <div style="padding: 5px; border: 1px solid #000000; width: 780px; margin: 0px auto;">
        <div class="cf">
            <div class="left" style="margin-right: 0.5em;">
                @Html.ActionLink("Open Purchase Order", "OpenPurchaseOrderbyVendor", "Vendors", new { id = Model.vendor.VendorNo }, new { id = "lnkOpenPurchaseOrder", @class = "btNavTimley", target = "_blank" })
            </div>
            <div class="left" style="margin-right: 0.5em; display: none;">
                @Html.ActionLink("Outstanding Invoice", "OpenPurchaseOrderbyVendor", "Vendors", new { id = Model.vendor.VendorNo }, new { id = "lnkOpenPurchaseOrder", @class = "btNavTimley", target = "_blank" })
            </div>
            <div class="left" style="margin-right: 0.5em; display: none;">
                @Html.ActionLink("Order History", "ReceivedPurchaseOrderbyVendor", "Vendors", new { id = Model.vendor.VendorNo }, new { id = "lnkReceivedPurchaseOrder", @class = "btNavTimley", target = "_blank" })
            </div>
            <div class="left" style="margin-right: 0.5em; display: none;">
                @Html.ActionLink("Statement", "OpenPurchaseOrderbyVendor", "Vendors", new { id = Model.vendor.VendorNo }, new { id = "lnkOpenPurchaseOrder", @class = "btNavTimley", target = "_blank" })
            </div>
            <div class="left">
                @Html.ActionLink("Special Note", "CreateEditNote", "Vendors", new { id = Model.vendornote.Id, customerid = ViewBag.VendorId }, new { @class = "btNavTimley", id = "lnkVendorNoteid" })
            </div>
        </div>
    </div>
</div>
<div style="padding: 5px; display: none;">
    @using (Html.BeginForm("UpdateVendorhistory", "Vendors", FormMethod.Post))
    {
        @Html.HiddenFor(model => model.vendorhistory.Id)
        @Html.HiddenFor(model => model.vendorhistory.VendorId)
        <table style="width: 220px; border-collapse: collapse; margin: 0px auto; border: 1px solid #000000;">
            <tr>
                <td style="padding: 5px;">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.vendorhistory.OutstandingBalance)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.vendorhistory.OutstandingBalance)
                        @Html.ValidationMessageFor(model => model.vendorhistory.OutstandingBalance)
                    </div>
                </td>
                <td style="padding: 5px;">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.vendorhistory.OpenPurchaseOrder)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.vendorhistory.OpenPurchaseOrder)
                        @Html.ValidationMessageFor(model => model.vendorhistory.OpenPurchaseOrder)
                    </div>
                </td>
                <td>
                    <div style="width: 220px; margin: 0px auto; padding: 5px;">
                        <input type="submit" class="btNavTimley" value="Update" />
                    </div>
                </td>
            </tr>
        </table>                              
    }
</div>

<div style="margin: 5px auto; width: 20%; display: none;">
    @Html.ActionLink("Back", "Index", "Vendors")
</div>
<div id="editcustomerdialoid">
    edit customer data here
</div>
<div style="display: none;">
    @Html.ActionLink("Contact Sales", "CreateEditSales", "Vendors", new { vendorid = Model.vendordefaults.SalesContactId, id = Model.vendoraddress.Id }, new { id = "lnkCreateEditSaleCustomer01" })
    @Html.ActionLink("Contact Sales02", "CreateEditSales02", "Vendors", new { vendorid = Model.vendordefaults.SalesContactId, vendordefaultid = Model.vendordefaults.Id }, new { id = "lnkCreateEditSaleCustomer02" })
    @Html.ActionLink("Edit", "CreateEditNote", new { id = Model.vendornote.Id, customerid = ViewBag.VendorId }, new { @class = "lnkCreateEditNoteCustomer", id = "lnkVendorNoteidXxx" })
    @Html.ActionLink("Previous", "PreviousVendor", "Vendors", new { customerNo = Model.vendor.VendorNo, id = Model.vendor.Id }, new { id = "lnkPrevious" })
    @Html.ActionLink("Next", "NextVendor", "Vendors", new { customerNo = Model.vendor.VendorNo, id = Model.vendor.Id }, new { id = "lnkNext" })
</div>
