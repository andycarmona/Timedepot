@using PagedList.Mvc;   @*//import this so we get our HTML Helper*@
@using PagedList;       @*//import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@
@model IEnumerable<TimelyDepotMVC.Models.Admin.UserQuotationDetail>

<div style="width: 80%; margin: 5px auto 5px auto;">
    <table>
        <tr>
            <td>
                <div>
                    <div class="left">Customer No:</div>
                    <div style="padding-left: 115px;">
                        <input id="customerNoHlp" type="text" />
                    </div>
                </div>
            </td>
            <td>@Html.ActionLink("Select Customer", "SelectCustomer", "Quotes", null, new { id = "lnkselectcustomerid" })</td>
        </tr>
        <tr>
            <td>
                <div>
                    <div class="left" style="padding-left: 30px;">Trade ID:</div>
                    <div style="padding-left: 115px;">
                        @Html.DropDownList("tradeddl", (IEnumerable<SelectListItem>)ViewBag.TradeList, "Select Trade", new { id = "tradeselectorId" })
                    </div>
                </div>
            </td>
            <td></td>
        </tr>
    </table>
</div>

@using (Html.BeginForm("CreateSalesOrder", "Quotes", new { username = ViewBag.userName }, FormMethod.Post, null))
{
    <div style="display: none;">
        <div style="display: block;">
            <input id="tradeddl" name="tradeddl" type="text" />
            <input id="customerNoHlp01" name="customerNoHlp01" type="text" />
        </div>

    </div>
    <div style="width: 80%; margin: 5px auto 5px auto;">
        <table class="webgrid" style="margin: 0px; width: 100%;">
            <tr class="webgrid-header">
                <th>
                    <input id="Checkbox1" type="checkbox" value="Select" /></th>
                <th style="display: none;">
                    @Html.DisplayNameFor(model => model.DetailId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ItemID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ProductType)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Quantity)
                </th>
                <th style="display: none;">
                    @Html.DisplayNameFor(model => model.ShippedQuantity)
                </th>
                <th style="display: none;">
                    @Html.DisplayNameFor(model => model.BOQuantity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Amount)
                </th>
            </tr>
            @{
    TimelyDepotMVC.DAL.TimelyDepotContext db01 = new TimelyDepotMVC.DAL.TimelyDepotContext();
    string szCkId = "";
    string szItemID = "";

    int nRow = 0;
    int nMod = 0;
    string szClass = "";
            }
            @foreach (var item in Model)
            {
                szCkId = string.Format("chk_{0}", item.Id);
                //szItemID = TimelyDepotMVC.Controllers.QuotesController.GetSubItemId(db01, item.ItemID);
                szItemID = TimelyDepotMVC.Controllers.QuotesController.GetSubItemId01(db01, item.Id);
                nRow++;
                nMod = (nRow % 2);
                if (nMod == 0)
                {
                    szClass = "webgrid-alternating-row";
                }
                else
                {
                    szClass = "webgrid-row-style";
                }
                
                <tr class="@szClass">
                    <td>
                        <input id="@szCkId" name="@szCkId" class="chkHlp" type="checkbox" />
                    </td>
                    <td style="display: none;">
                        @Html.DisplayFor(modelItem => item.DetailId)
                    </td>
                    <td>
                        @*@Html.DisplayFor(modelItem => item.ItemID)*@
                        @szItemID
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductType)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Quantity)
                    </td>
                    <td style="display: none;">
                        @Html.DisplayFor(modelItem => item.ShippedQuantity)
                    </td>
                    <td style="display: none;">
                        @Html.DisplayFor(modelItem => item.BOQuantity)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Amount)
                    </td>
                </tr>
            }
            <tr>
                <td colspan="7">
                    <!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
                    @Html.PagedListPager((IPagedList)ViewBag.OnePageOfData, page => Url.Action("Index", new { page }))

                </td>
            </tr>

        </table>
        <p>
            <input type="submit" class="btNavTimley" value="Create Sales Order" />&nbsp;   
            <input id="btDialogClose" class="btNavTimley" type="button" value="Close" />
        </p>
    </div>
}

<div id="usernameHlpId" style="display: none;">
    @ViewBag.userName
</div>
