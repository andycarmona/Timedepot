@model TimelyDepotMVC.Models.Admin.Payments

@{
    ViewBag.Title = "Edit Payment";
    Layout = "~/Views/Shared/_LayoutModule.cshtml";
}

@section scripts{
    <script type="text/javascript">
        jQuery(document).ready(initalizeEditPayment);

        function initalizeEditPayment() {
            //debugger;

            //Set buttons
            jQuery("#btnSubmit").button();

            //Set the datepicker
            jQuery("#PaymentDate").datepicker({
                dateFormat: "mm/dd/yy",
                showOn: "button",
                buttonImage: "/images/calendar.gif",
                buttonImageOnly: true
            });

            var szDate = jQuery("#PaymentDate").val();
            szDate = jQuery.trim(szDate);
            jQuery("#PaymentDate").val(szDate);
        }

    </script>
}

<h2>@ViewBag.Title</h2>

@{
    int nHas = 0;
    int nPos = -1;
    string szError = "";
    string szDecriptedData = "";
    string szDecriptedCode = "";
    string szMsg = "";

    szError = "";
    szDecriptedData = TimelyDepotMVC.Controllers.PaymentController.DecodeInfo02(Model.CreditCardNumber, ref szError);
    if (!string.IsNullOrEmpty(szError))
    {
        nPos = szError.IndexOf("data to decode");
        if (nPos != -1)
        {
            szDecriptedData = string.Empty;
        }
        else
        {
            szDecriptedData = string.Format("******");
        }
    }
    else
    {
        //Mask the card number
        nHas = szDecriptedData.Length;
        if (nHas > 4)
        {
            szMsg = szDecriptedData.Substring(nHas - 4, 4);
            szDecriptedData = string.Format("******{0}", szMsg);
        }
        else
        {
            szDecriptedData = string.Format("******");
        }
    }

}
<div style="width: 400px; margin: 0px auto;">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <fieldset>
            <legend>Payment</legend>

            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.SalesOrderNo)
            @Html.HiddenFor(model=>model.TransactionCode)

            <div style="width:80%; margin:0px auto;">
                <div class="editor-label">
                    @Html.LabelFor(model => model.PaymentNo)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.PaymentNo)
                    @Html.ValidationMessageFor(model => model.PaymentNo)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.CustomerNo)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.CustomerNo)
                    @Html.ValidationMessageFor(model => model.CustomerNo)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.SalesOrderNo)
                </div>
                <div class="editor-field">
                    @Html.DisplayFor(model => model.SalesOrderNo)
                    @Html.ValidationMessageFor(model => model.SalesOrderNo)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.PaymentType)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.PaymentType)
                    @Html.ValidationMessageFor(model => model.PaymentType)
                </div>
                @if (ViewBag.TransCode == 2)
                {
                    <div class="editor-label">
                        @Html.LabelFor(model => model.CreditCardNumber)
                    </div>
                    <div class="editor-field">
                        <input id="CreditCardNumberHlp" name="CreditCardNumberHlp" type="text" value="@szDecriptedData" />
                    </div>
                    <div class="editor-field" style="display: none">
                        @Html.EditorFor(model => model.CreditCardNumber)
                        @Html.ValidationMessageFor(model => model.CreditCardNumber)
                    </div>
                }
                <div class="editor-label">
                    @Html.LabelFor(model => model.ReferenceNo)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.ReferenceNo)
                    @Html.ValidationMessageFor(model => model.ReferenceNo)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.Amount)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Amount)
                    @Html.ValidationMessageFor(model => model.Amount)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.PaymentDate)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.PaymentDate)
                    @Html.ValidationMessageFor(model => model.PaymentDate)
                </div>

                <div style="margin:5px;">
                    <input class="btn btn-default" id="btnSubmit" type="submit" value="Save" />
                    @Html.ActionLink("Quit", "PaymentTransactionList", "Payment", new { salesOrderNo = @Model.SalesOrderNo }, new { @class = "btn btn-default" })
                    @Html.ActionLink("Delete", "Delete", "Payment", new { id = @Model.Id }, new { @class = "btn btn-default" })
                </div>
            </div>
        </fieldset>
    }

    <div style="margin:5px;">
    
    </div>
</div>
@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@
