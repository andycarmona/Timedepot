@{
    ViewBag.Title = "Payment GateWay";
   
}
@Styles.Render("~/Content/FDZstyle.css")

<div class="cf" style="margin: 15px;">
    <div class="divh2 left" style="margin-right: 15px;">@ViewBag.Title  <b style="color:red;">Environment:@ViewBag.Environment</b></div>
    <div class="divh2 left">
        Sales Order No: @ViewBag.PaymentTitle
    </div>
</div>
<div>
    @using (Html.BeginForm("GetRestData02", "Payment", null, FormMethod.Post, new { id = "formGetRestDataid" }))
    {
        @Html.Hidden("transactionselectorId","Purchase");
        <div class="error" style="display: none;"><span></span></div>
        <div id="formid" style="width: 500px; margin: 0px auto; border: solid 1px gray; padding: 10px;">
            <div class="clear-fix">
                <div class="float-left marginR10" style="width: 118px;"></div>
                <div> @*@Html.DropDownList("transaction", (IEnumerable<SelectListItem>)ViewBag.TransactionList, "Transaction", new { id = "transactionselectorId", @class = "marginB10", style = "width:205px;margin-right:10px;" })*@</div>
                <div style="display: none;">
                    <input id="transaction" name="transaction" class="width200" type="text" />
                </div>
            </div>
            <div class="clear-fix">
                <div class="float-left marginR10" style="padding-top: 6px; width: 118px;">Amount</div>
                <div>
            
                    <input id="amount" name="amount" class="width200" style="margin-right: 10px;" type="text" value="@ViewBag.Amount" />
                </div>
            </div>
            <div class="clear-fix">
                <div class="float-left marginR10" style="padding-top: 6px; width: 118px;">Expiry Date</div>
                <div>
                    <input id="expiryDate" readonly="readonly" name="expiryDate" class="width200" style="margin-right: 10px;" type="text" />
                </div>
            </div>
            <div class="clear-fix">
                <div class="float-left marginR10" style="padding-top: 6px; width: 118px;">Card Holders Name</div>
                <div>
                    <input id="cardHoldersName" readonly="readonly" name="cardHoldersName" class="width200" type="text" style="margin-right: 10px;" />
                </div>
            </div>
            <div class="clear-fix">
                <div class="float-left marginR10" style="padding-top: 6px; width: 118px;">Card Number</div>
                <div>
                    <input id="cardNumber" readonly="readonly" name="cardNumber" class="width200" style="margin-right: 10px;" type="text" value="4111111111111111" />
                </div>
                <div style="display: none;">
                    <input id="cardNumber02" readonly="readonly" name="cardNumber02" class="width200" style="margin-right: 10px;" type="text" value="0" />
                    <input id="paymentid" readonly="readonly" name="paymentid" class="width200" style="margin-right: 10px;" type="text" value="0" />
                </div>
            </div>
            <div class="clear-fix">
                <div class="float-left marginR10" style="padding-top: 6px; width: 118px;">Card Type</div>
                <div>
                    <input id="cardType" readonly="readonly" class="width200" style="margin-right: 10px;" type="text" value="@ViewBag.CardType" readonly="readonly" />
                </div>
            </div>
            <div class="clear-fix">
                <div class="float-left marginR10" style="padding-top: 6px; width: 118px;">Address</div>
                <div>
                    <input id="cardAddress" readonly="readonly"  class="width200" style="margin-right: 10px;" type="text" value="@ViewBag.CardAddress" readonly="readonly" />
                </div>
            </div>
            <div class="clear-fix">
                <div class="float-left marginR10" style="padding-top: 6px; width: 118px;">Zip</div>
                <div>
                    <input id="zipAddress" readonly="readonly" class="width200" style="margin-right: 10px;" type="text" value="@ViewBag.ZipAddress" readonly="readonly" />
                </div>
            </div>
        
            <div id="authorizationNumberDiv"  class="clear-fix" style="display: none;">
                <div class="float-left marginR10" style="padding-top: 6px; width: 118px; border: solid 1px red;">Authorization No.</div>
                <div>
                    <input id="authorizationNumber" readonly="readonly" name="authorizationNumber" class="width200" style="margin-right: 10px;" type="text" />
                    <div id="authorizationNumberError" class="error" style="color: red; display: none">
                        <label for='authorizationNumber'>The Authorization Number is required.</label>
                    </div>
                </div>
            </div>
            <div style="display: none">
                <input id="InvoicePayment" readonly="readonly" name="InvoicePayment" class="width200" style="margin-right: 10px;" type="text" value="@ViewBag.InvoicePayment" />
            </div>
            <div style="width: 200px; margin: 10px auto;">
                <input id="btSubmit" class="btn btn-default" type="submit" value="Submit" />
            </div>
        </div>
        
    }

    <div id="restDataDialg" style="width: 900px; padding: 10px; margin: 10px auto; display: none; border: solid 1px blue;">
    </div>
    @Html.ActionLink("Back to List", "PaymentTransactionList", "Payment", new { salesOrderNo = @ViewBag.SalesOrderNo, invoiceId = -1 }, new { @class = "btn btn-default" })

    
   
</div>
@section scripts{
    @Scripts.Render("~/Scripts/jquery.validate.js")
    <script type="text/javascript">

        jQuery(document).ready(initializeTest02);

        function initializeTest02() {

            //Initialize fields
            jQuery(".btn btn-default").button();
         

            var sztransaction = "@ViewBag.Transaction";
            switch (sztransaction) {
                case "Purchase":
                    jQuery("#transactionselectorId").val("00");
                    break
                case "Refund":
                    jQuery("#transactionselectorId").val("04");
                    break
                case "Void":
                    jQuery("#transactionselectorId").val("13");
                    break
                default:
                    jQuery("#transactionselectorId").val("00");
            }
            jQuery("#transactionselectorId").attr("readonly", "readonly")

            @*var szAmount = "@ViewBag.Amount";
            jQuery("#amount").val(szAmount);*@

            var szExpiryDate = "@ViewBag.expiryDate";
            jQuery("#expiryDate").val(szExpiryDate);


            var szCardName = "@ViewBag.CardHolderName";
            jQuery("#cardHoldersName").val(szCardName);

            var szCardNumber = "@ViewBag.CardNumber";
            jQuery("#cardNumber").val(szCardNumber);

            var szCardNumber02 = "@ViewBag.CardNumber02";
            jQuery("#cardNumber02").val(szCardNumber02);

            var szPaymentID = "@ViewBag.PaymentId";
            jQuery("#paymentid").val(szPaymentID);


            //Attach handlers
            jQuery("#transactionselectorId").change(changetransactionselectorId);
            jQuery("#formGetRestDataid").submit(submitformGetRestDataid);


            // Prepare dialogs
            jQuery("#loadingHlpDialogid").dialog({ autoOpen: false, modal: true });

            //Validate the form
            jQuery("#formGetRestDataid").validate(
                {
                    invalidHandler: invalidform,
                    //submitHandler: submitFormHandler,
                    rules:
                        {
                            amount: "required",
                            expiryDate: "required",
                            cardHoldersName: "required",
                            cardNumber: "required"
                        },
                    messages:
                        {
                            amount: "The amount value is required.",
                            expiryDate: "Month and Year are required. (ex.1214)",
                            cardHoldersName: "The card holder name value is required. (As it is in the card)",
                            cardNumber: "The Card Number value is required."
                        }
                });
        }
        function invalidform(form, errors) {
            jQuery("#formid").css("width", "750px");
        }
        function submitformGetRestDataid(src, arg) {
            var szRefunded = "@ViewBag.Refunded";
            if (szRefunded!=true) {
               
                var bStatus = jQuery(src.target).valid();

                //debugger;
                if (bStatus) {
                    //If is refund, check authorization Number
                    var szTransaction = jQuery("#transactionselectorId").val();
                    if (szTransaction == "04") {
                        var szAuthorizationNumber = jQuery("#authorizationNumber").val();
                        if (szAuthorizationNumber == "") {
                            jQuery("#authorizationNumberError").css("display", "block");
                            src.preventDefault();
                        }
                    }

                    //Get the transacion data
                    getRestData(src.target);
                    src.preventDefault();
                }
                else {
                    src.preventDefault();
                }
            } else {
                src.preventDefault();
                alert("Attention! You are triying to refund more than the customer already paid");
            }
        }
        function getRestData(src) {
            var szUrl = src.action;

            //debugger;

            var szPars = "";
            var szMsg = "";

            szMsg = jQuery("#amount").val();
            if (szMsg != "") {
                if (szPars == "") {
                    szPars = '?amount=' + szMsg;
                }
                else {
                }
            }
            szMsg = jQuery("#expiryDate").val();
            if (szMsg != "") {
                if (szPars == "") {
                    szPars = '?expiryDate=' + szMsg;
                }
                else {
                    szPars = szPars + '&expiryDate=' + szMsg;
                }
            }
            szMsg = jQuery("#cardHoldersName").val();
            if (szMsg != "") {
                if (szPars == "") {
                    szPars = '?cardHoldersName=' + szMsg;
                }
                else {
                    szPars = szPars + '&cardHoldersName=' + szMsg;
                }
            }
            szMsg = jQuery("#cardNumber").val();
            if (szMsg != "") {
                if (szPars == "") {
                    szPars = '?cardNumber=' + szMsg;
                }
                else {
                    szPars = szPars + '&cardNumber=' + szMsg;
                }
            }
            szMsg = jQuery("#cardNumber02").val();
            if (szMsg != "") {
                if (szPars == "") {
                    szPars = '?cardNumber02=' + szMsg;
                }
                else {
                    szPars = szPars + '&cardNumber02=' + szMsg;
                }
            }
            szMsg = jQuery("#paymentid").val();
            if (szMsg != "") {
                if (szPars == "") {
                    szPars = '?paymentid=' + szMsg;
                }
                else {
                    szPars = szPars + '&paymentid=' + szMsg;
                }
            }
            szMsg = jQuery("#authorizationNumber").val();
            if (szMsg != "") {
                if (szPars == "") {
                    szPars = '?authorizationNumber=' + szMsg;
                }
                else {
                    szPars = szPars + '&authorizationNumber=' + szMsg;
                }
            }
            szMsg = jQuery("#transactionselectorId").val();
            if (szMsg != "") {
                if (szPars == "") {
                    szPars = '?transaction=' + szMsg;
                }
                else {
                    szPars = szPars + '&transaction=' + szMsg;
                }
            }
            szMsg = jQuery("#InvoicePayment").val();
            if (szMsg != "") {
                if (szPars == "") {
                    szPars = '?invoicepayment=' + szMsg;
                }
                else {
                    szPars = szPars + '&invoicepayment=' + szMsg;
                }
            }

            szUrl = szUrl + szPars;

            ShowLoadingDialog();

            jQuery.ajax({
                type: 'GET',
                url: szUrl,
                data: null,
                //contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                error: AjaxFailed,
                success: getRestDataSuccess
            });
        }
        function getRestDataSuccess(response, statusCode) {
            var objRes = response;

            //Display the response data
            jQuery("#restDataDialg").html(objRes);

            HideLoadingDialog();

            //Show data
            jQuery("#restDataDialg").css("display", "block");
            jQuery("#btSubmit").css("display", "none");
        }
        function AjaxFailed(response, statusCode, optionerror) {
            //debugger;
            //var response = ajaxContext.get_response();
            //var statusCode = response.get_statusCode();
            alert("Sorry, the request failed with status code: " + statusCode);
        }

        function changetransactionselectorId(src, arg) {
            var szTransaction = jQuery(src.target).val();
            jQuery("#restDataDialg").css("display", "none");
            if (szTransaction == "13") {
                jQuery("#authorizationNumberDiv").css("display", "block");
                jQuery("#btSubmit").val("Void");
            }
            else {
                jQuery("#authorizationNumberDiv").css("display", "none");
                switch (szTransaction) {
                    case "00":
                        jQuery("#btSubmit").val("Purchase");
                        jQuery("#transaction").val(szTransaction);
                        break;
                    case "04":
                        jQuery("#btSubmit").val("Refund");
                        jQuery("#transaction").val(szTransaction);
                        break;
                    case "13":
                        jQuery("#btSubmit").val("Void");
                        jQuery("#transaction").val(szTransaction);
                        break;
                    default:
                        jQuery("#btSubmit").val("Submit");
                }
            }
        }
    </script>
}