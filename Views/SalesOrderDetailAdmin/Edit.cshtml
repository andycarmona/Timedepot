@model TimelyDepotMVC.Models.Admin.SalesOrderDetail

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>SalesOrderDetail</legend>

        @Html.HiddenFor(model => model.Id)

        <div class="editor-label">
            @Html.LabelFor(model => model.SalesOrderId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SalesOrderId)
            @Html.ValidationMessageFor(model => model.SalesOrderId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ItemID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ItemID)
            @Html.ValidationMessageFor(model => model.ItemID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Sub_ItemID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Sub_ItemID)
            @Html.ValidationMessageFor(model => model.Sub_ItemID)
        </div>


        <div class="editor-label">
            @Html.LabelFor(model => model.Quantity)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Quantity)
            @Html.ValidationMessageFor(model => model.Quantity)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ShipQuantity)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ShipQuantity)
            @Html.ValidationMessageFor(model => model.ShipQuantity)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.BackOrderQuantity)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.BackOrderQuantity)
            @Html.ValidationMessageFor(model => model.BackOrderQuantity)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Tax)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Tax)
            @Html.ValidationMessageFor(model => model.Tax)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UnitPrice)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UnitPrice)
            @Html.ValidationMessageFor(model => model.UnitPrice)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ItemPosition)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ItemPosition)
            @Html.ValidationMessageFor(model => model.ItemPosition)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ItemOrder)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ItemOrder)
            @Html.ValidationMessageFor(model => model.ItemOrder)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Logo)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Logo)
            @Html.ValidationMessageFor(model => model.Logo)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ImprintMethod)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ImprintMethod)
            @Html.ValidationMessageFor(model => model.ImprintMethod)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
