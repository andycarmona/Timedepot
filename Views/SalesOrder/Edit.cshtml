@model TimelyDepotMVC.Models.Admin.SalesOrder

@{
    ViewBag.Title = "Customer Sales Order";
    //Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("Edit", "SalesOrder", FormMethod.Post, new { id = "editsalesorderid" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.SalesOrderId)
    @Html.HiddenFor(model => model.CustomerId)
    @Html.HiddenFor(model => model.SalesOrderNo)
    @Html.HiddenFor(model => model.PaymentAmount)
    @Html.HiddenFor(model => model.PaymentDate)
@*Html.HiddenFor(model => model.Tax_rate)*@
    @Html.HiddenFor(model => model.Invs_Tax)

    TimelyDepotMVC.DAL.TimelyDepotContext db01 = new TimelyDepotMVC.DAL.TimelyDepotContext();
    string szAsi = "";
    string szSAGE = "";
    string szWebSite = "";
    string szEmail = "";

    string szAddress = "";
    string szAddressHlp = "";
    string szAddressHlp1 = "";
    string szAddressHlp2 = "";
    string szAddressHlp3 = "";
    string szCompany = "";
    string szAddressHlp4 = "";
    string szAddressHlp5 = "";
    string szAddressHlp6 = "";
    string szCompany2 = "";
    string szCity = "";
    string szState = "";
    string szZip = "";
    string szCountry = "";
    string szCountry2 = "";
    string szTel2 = "";
    string szTel = "";
    string szFax = "";
    string szWebSiteTrade = "";
    string szEmailTrade = "";
    string szFirstName = "";
    string szLastName = "";
    string szFirstName2 = "";
    string szLastName2 = "";
    string szTradeName = "";
    string szAsiTrade = "";
    string szSageTrade = "";
    string szPpaiTrade = "";
    string szMsg = "";
    string szMsg01 = "";
    string szShipDate = "";
    string szSODate = "";
    string szRequiredDate = "";
    string szApprovedDate = "";
    string szBillto = "";
    string szShippedDate01 = "";
    string szTrackingNo = "";
    string szInvoice = "";
    DateTime dShipDate = DateTime.Now;
    DateTime dSODate = DateTime.Now;
    DateTime dRequiredDate = DateTime.Now;
    DateTime dApprovedDate = DateTime.Now;

    if (Model.SODate == null)
    {
        dSODate = DateTime.Now;
        szSODate = dShipDate.ToString("MM/dd/yyyy"); ;
    }
    else
    {
        dSODate = Convert.ToDateTime(Model.SODate);
        szSODate = dSODate.ToString("MM/dd/yyyy");
    }

    if (Model.Requiredate == null)
    {
        dRequiredDate = DateTime.Now;
        szRequiredDate = dRequiredDate.ToString("MM/dd/yyyy"); ;
    }
    else
    {
        dRequiredDate = Convert.ToDateTime(Model.Requiredate);
        szRequiredDate = dRequiredDate.ToString("MM/dd/yyyy");
    }


    if (Model.ShipDate == null)
    {
        dShipDate = DateTime.Now;
        szShipDate = dShipDate.ToString("MM/dd/yyyy"); ;
    }
    else
    {
        dShipDate = Convert.ToDateTime(Model.ShipDate);
        szShipDate = dShipDate.ToString("MM/dd/yyyy");
    }


    if (Model.AprovedDate == null)
    {
        dShipDate = DateTime.Now;
        szApprovedDate = dShipDate.ToString("MM/dd/yyyy"); ;
    }
    else
    {
        dShipDate = Convert.ToDateTime(Model.AprovedDate);
        szApprovedDate = dShipDate.ToString("MM/dd/yyyy");
    }


    long telHlp = 0;
    long faxHlp = 0;
    string telfmt = "000-000-0000";

    TimelyDepotMVC.Controllers.SalesOrderController.GetCustomerData(db01, ref szAsi, ref szSAGE, ref szWebSite, ref szEmail, Convert.ToInt32(Model.CustomerId));
    TimelyDepotMVC.Controllers.SalesOrderController.GetTradeData(db01, ref szAddress, ref szCity, ref szState, ref szZip, ref szCountry, ref szTel, ref szFax,
        ref szWebSiteTrade, ref szEmailTrade, ref szTradeName, ref szAsiTrade, ref szSageTrade, ref szPpaiTrade, Convert.ToInt32(Model.TradeId));
    if (string.IsNullOrEmpty(szTel))
    {
        szTel = "0";
    }
    telHlp = Convert.ToInt64(szTel);
    szTel = telHlp.ToString(telfmt);
    if (string.IsNullOrEmpty(szFax))
    {
        szFax = "0";
    }
    telHlp = Convert.ToInt64(szFax);
    szFax = telHlp.ToString(telfmt);


    TimelyDepotMVC.Models.Admin.CustomersContactAddress soldto = null;
    if (ViewBag.SoldTo != null)
    {
        soldto = ViewBag.SoldTo;
    }
    else
    {
        soldto = new TimelyDepotMVC.Models.Admin.CustomersContactAddress();
    }

    TimelyDepotMVC.Models.Admin.VendorsContactAddress venaddress = null;
    if (ViewBag.VendorAddress != null)
    {
        venaddress = ViewBag.VendorAddress;
    }
    else
    {
        venaddress = new TimelyDepotMVC.Models.Admin.VendorsContactAddress();
    }

    if (!string.IsNullOrEmpty(venaddress.State))
    {
        venaddress.State = string.Format(", {0}", venaddress.State);
    }
    szAddressHlp = string.Format("{0}{1} {2}", venaddress.City, venaddress.State, venaddress.Zip);

    TimelyDepotMVC.Models.Admin.CustomersBillingDept billto = null;
    if (ViewBag.BillTo != null)
    {
        billto = ViewBag.BillTo;
    }
    else
    {
        billto = new TimelyDepotMVC.Models.Admin.CustomersBillingDept();
    }
    //szBillto = string.Format("{0} {1}", billto.FirstName, billto.LastName);
    szBillto = string.Format("{0}", billto.Id.ToString());

    TimelyDepotMVC.Models.Admin.CustomersShipAddress shipto = null;
    if (ViewBag.ShipTo != null)
    {
        shipto = ViewBag.ShipTo;
    }
    else
    {
        shipto = new TimelyDepotMVC.Models.Admin.CustomersShipAddress();
    }

    if (!string.IsNullOrEmpty(shipto.State))
    {
        shipto.State = string.Format(", {0}", shipto.State);
    }
    szAddressHlp1 = string.Format("{0}{1} {2}", shipto.City, shipto.State, shipto.Zip);

    TimelyDepotMVC.Models.Admin.VendorsSalesContact vendorsalescontact = null;
    if (ViewBag.VendorSalesContact != null)
    {
        vendorsalescontact = ViewBag.VendorSalesContact;
    }
    else
    {
        vendorsalescontact = new TimelyDepotMVC.Models.Admin.VendorsSalesContact();
    }

    TimelyDepotMVC.Models.Admin.SalesOrderBlindShip salesorderblindship = null;
    if (ViewBag.BlindShip != null)
    {
        salesorderblindship = ViewBag.BlindShip;
    }
    else
    {
        salesorderblindship = new TimelyDepotMVC.Models.Admin.SalesOrderBlindShip();
    }

    //Select Blind ship or Trade name
    if (Model.IsBlindShip)
    {
        //szFirstName = salesorderblindship.FirstName;
        //szLastName = salesorderblindship.LastName;
        //szAddressHlp2 = string.Format("{0} {1}", salesorderblindship.Address1, salesorderblindship.Address2);
        //szAddressHlp3 = string.Format("{0}{1} {2}", salesorderblindship.City, salesorderblindship.State, salesorderblindship.Zip);

        szFirstName = soldto.FirstName;
        szLastName = soldto.LastName;
        szCompany = soldto.CompanyName;
        szAddressHlp2 = string.Format("{0}", soldto.Address);
        szAddressHlp3 = string.Format("{0} {1} {2}", soldto.City, soldto.State, soldto.Zip);


        szFirstName2 = salesorderblindship.FirstName;
        szLastName2 = salesorderblindship.LastName;
        szCompany2 = salesorderblindship.Title;
        szAddressHlp4 = string.Format("{0}", salesorderblindship.Address1, salesorderblindship.Address2);
        szAddressHlp6 = string.Format("{0}", salesorderblindship.Address2);
        szAddressHlp5 = string.Format("{0} {1} {2}", salesorderblindship.City, salesorderblindship.State, salesorderblindship.Zip);
        szCountry2 = salesorderblindship.Country;
        telHlp = Convert.ToInt64(salesorderblindship.Tel);
        szTel2 = telHlp.ToString(telfmt);
    }
    else
    {
        szFirstName = szTradeName;
        szAddressHlp2 = szAddress;
        szAddressHlp3 = string.Format("{0} {1} {2}", szCity, szState, szZip);

        szFirstName2 = shipto.FirstName;
        szLastName2 = shipto.LastName;
        szCompany2 = soldto.CompanyName;
        szAddressHlp4 = string.Format("{0}", shipto.Address1);
        szAddressHlp5 = string.Format("{0} {1} {2}", shipto.City, shipto.State, shipto.Zip);

    }

    TimelyDepotMVC.Controllers.SalesOrderController.GetInvoiceData(db01, Model.SalesOrderNo, ref szShippedDate01, ref szTrackingNo, ref szInvoice);
    
    <div class="error" style="margin: 5px;">@ViewBag.ErrorSalesOrder</div>
    <div class="darkerline" style="padding-top: 0.5em; padding-bottom: 0.5em; padding-left: 1em; padding-right: 1em;">
        <div class="cf">
            <div class="left">
                <div>
                    @if (ViewBag.TradeList != null)
                    {
                        @Html.DropDownList("TradeId", (IEnumerable<SelectListItem>)ViewBag.TradeList, "Select Trade", new { id = "tradeselectorId" })
                    }
                    <div style="display: none;">
                        @Html.EditorFor(model => model.TradeId)
                        @Html.ValidationMessageFor(model => model.TradeId)
                    </div>
                </div>
            </div>
            <div class="right divh3">
                <div class="right">
                    <div class="editor-label left" style="padding-top: 0px;">
                        @Html.LabelFor(model => model.SalesOrderNo):
                    </div>
                    <div class="editor-field">
                        @Html.DisplayFor(model => model.SalesOrderNo)
                    </div>
                </div>
            </div>
        </div>
        <div class="cf">
            <div class="right " style="width: 288px; padding: 0px 5px 0px 5px;">
                <div style="margin-bottom: 5px;">
                    <div class="cf">
                        <div class="editor-label left" style="padding-right: 5px; padding-top: 0px;">
                            @*@Html.LabelFor(model => model.CustomerId)*@
                            Customer No :
                        </div>
                        <div class="editor-field">
                            @if (ViewBag.Customer != null)
                            {
                                if (ViewBag.Customer.CustomerNo != null)
                                {
                                @ViewBag.Customer.CustomerNo                                       
                                }
                            }
                        </div>
                    </div>
                </div>
                <div class="darkerline">
                    <table>
                        <tr>
                            <td>@soldto.CompanyName</td>
                        </tr>
                        <tr>
                            <td>@soldto.Address</td>
                        </tr>
                        <tr>
                            <td>@soldto.City,&nbsp;@soldto.State&nbsp;@soldto.Zip</td>
                        </tr>
                        @{
                            string szBussinessType = TimelyDepotMVC.Controllers.CustomersController.GetBussinesType(db01, Convert.ToInt32(Model.CustomerId), "");

                            if (!string.IsNullOrEmpty(szBussinessType))
                            {
                                if (szBussinessType.ToUpper() != "DOMESTIC")
                                {
                                    int nLen = 13;
                                    if (!string.IsNullOrEmpty(soldto.Tel))
                                    {
                                        nLen = soldto.Tel.Length;
                                    }
                                    switch (nLen)
                                    {
                                        case 8:
                                            telfmt = "000-00000";
                                            break;
                                        case 9:
                                            telfmt = "000-000000";
                                            break;
                                        case 10:
                                            telfmt = "000-0000000";
                                            break;
                                        case 11:
                                            telfmt = "000-00000000";
                                            break;
                                        case 12:
                                            telfmt = "000-000000000";
                                            break;
                                        case 13:
                                            telfmt = "000-0000000000";
                                            break;
                                        default:
                                            break;
                                    }

                                }
                            }


                            telHlp = Convert.ToInt64(soldto.Tel);
                            szMsg = telHlp.ToString(telfmt);
                            telHlp = Convert.ToInt64(soldto.Fax);
                            szMsg01 = telHlp.ToString(telfmt);
                        }
                        <tr>
                            <td>Tel:&nbsp;@szMsg&nbsp;&nbsp;&nbsp;&nbsp;Fax:&nbsp;@szMsg01</td>
                        </tr>
                    </table>
                </div>


            </div>
            <div class="left" style="width: 300px;">
                <div>@szAddress</div>
                <div>@szCity,&nbsp;@szState&nbsp;@szZip</div>
                <div>Tel:&nbsp;@szTel</div>
                <div>Fax:&nbsp;@szFax</div>
            </div>
            <div class="left divh1" style="width: 500px; text-align: center; position: relative; top: -25px;"><span>Customer Sales Order</span></div>
        </div>
        @{
                            DateTime dDate = Convert.ToDateTime(Model.SODate);
        }

        <div class="darkerline cf" style="margin-top: 0.5em; margin-bottom: 0.5em; padding-left: 0.5em; padding-right: 0.5em">
            <table style="width: 100%">
                <tr>
                    <td class="tdw196">
                        <div style="text-align: center; margin-right: 20px;">S/O Date</div>
                        <div>
                            <div class="editor-field">
                                <input id="SODateHlp" name="SODateHlp" type="text" value="@szSODate" />
                                <div>
                                    @*                                        @Html.EditorFor(model => model.SODate)
                                        @Html.ValidationMessageFor(model => model.SODate)*@
                                </div>
                            </div>
                        </div>
                    </td>
                    <td class="tdw196">
                        <div style="text-align: center">Required Date</div>
                        <div>
                            <div class="editor-field">
                                <input id="RequiredateHlp" name="RequiredateHlp" type="text" value="@szRequiredDate" />
                                @*@Html.EditorFor(model => model.Requiredate)
                                @Html.ValidationMessageFor(model => model.Requiredate)*@
                            </div>
                        </div>
                    </td>
                    <td>
                        <div style="text-align: center">Purchase Order No.</div>
                        <div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.PurchaseOrderNo)
                                @Html.ValidationMessageFor(model => model.PurchaseOrderNo)
                            </div>
                        </div>
                    </td>
                    <td>
                        <div style="text-align: center">Ship Via</div>
                        <div>
                            @if (ViewBag.ShipViaList != null)
                            {
                                @Html.DropDownList("ShipVia", (IEnumerable<SelectListItem>)ViewBag.ShipViaList, "Select", new { id = "shipviaselectorId" })
                            }
                            <div class="editor-field" style="display: none;">
                                @Html.EditorFor(model => model.ShipVia)
                                @Html.ValidationMessageFor(model => model.ShipVia)
                            </div>
                        </div>
                    </td>
                    <td>
                        <div style="text-align: center">Terms</div>
                        <div>
                            @if (ViewBag.TermsList != null)
                            {
                                @Html.DropDownList("PaymentTerms", (IEnumerable<SelectListItem>)ViewBag.TermsList, "Select", new { id = "PaymentTermsselectorId" })
                            }
                            <div class="editor-field" style="display: none;">
                                @Html.EditorFor(model => model.PaymentTerms)
                                @Html.ValidationMessageFor(model => model.PaymentTerms)
                            </div>
                        </div>
                    </td>
                    <td>
                        <div style="text-align: center">Sales Rep</div>
                        <div>
                            @if (ViewBag.SalesContactList != null)
                            {
                                @Html.DropDownList("SalesRep", (IEnumerable<SelectListItem>)ViewBag.SalesContactList, "Select", new { id = "SalesRepselectorId" })
                            }
                            <div class="editor-field" style="display: none;">
                                @Html.EditorFor(model => model.SalesRep)
                                @Html.ValidationMessageFor(model => model.SalesRep)
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div style="text-align: center">Order Contact</div>
                        <div>
                            @if (ViewBag.SalesContac01tList != null)
                            {
                                @Html.DropDownList("VendorId", (IEnumerable<SelectListItem>)ViewBag.SalesContac01tList, "Select", new { id = "salesordercontactselectorId", style = "width:190px;" }) 
                            }
                            <div style="display: none;">
                                <div class="vendoridddl">@Html.EditorFor(model => model.VendorId)</div>
                                @Html.ValidationMessageFor(model => model.VendorId)

                            </div>
                        </div>
                    </td>
                    <td>
                        <div style="text-align: center">Bill to</div>
                        @if (ViewBag.BillToList != null)
                        {
                            @Html.DropDownList("billtoid", (IEnumerable<SelectListItem>)ViewBag.BillToList, "Select", new { id = "billtoselectorId", style = "width:190px;" }) 
                        }
                        <div class="editor-field" style="display: none;">
                            @*<input id="billtoid" name="billtoid" type="text" value="@szBillto" />*@
                            <input id="billtoid" name="billtoid" type="text" value="@szBillto" />
                        </div>
                    </td>
                    <td>
                        <div style="text-align: center">Shipped date</div>
                        <div>
                            <div class="editor-field">
                                <input id="ShipDateHlp" name="ShipDateHlp" type="text" value="@szShippedDate01" />
                                @*                                    @Html.EditorFor(model => model.ShipDate)
                                    @Html.ValidationMessageFor(model => model.ShipDate)*@
                            </div>
                        </div>
                    </td>
                    <td>
                        <div style="text-align: center">Tracking No.</div>
                        <div>
                            <input id="trackingnoid" type="text" value="@szTrackingNo" />
                        </div>
                    </td>
                    <td>
                        <div style="text-align: center">Invoice.</div>
                        <div>
                            <input id="invoiceid" type="text" value="@szInvoice" />
                        </div>
                    </td>
                    <td>
                        <div style="text-align: center">Warehouse</div>
                        <div>
                            @if (ViewBag.WarehouseList != null)
                            {
                                @Html.DropDownList("VendorAddress", (IEnumerable<SelectListItem>)ViewBag.WarehouseList, "Select", new { id = "warehouseselectorId" })
                            }
                            <div class="editor-field" style="display: none;">
                                @Html.EditorFor(model => model.VendorAddress)
                                @Html.ValidationMessageFor(model => model.VendorAddress)
                            </div>
                        </div>
                    </td>
                </tr>
            </table>

        </div>
        <div class="darkerline cf" style="margin-top: 0.5em; margin-bottom: 0.5em; padding-left: 0.5em; padding-right: 0.5em; padding-bottom: 0.5em;">
            <div style="text-align: center;">Shipment Information</div>
            <div class="cf">
                <div class="darkerline right" style="width: 40%; padding: 5px;">
                    <div>Ship to</div>
                    <div class="viosinput400 boxtb3">
                        @Html.EditorFor(model => model.ToCompany)
                        @Html.ValidationMessageFor(model => model.ToCompany)
                    </div>
                    <div class="viosinput400 boxtb3">
                        @Html.EditorFor(model => model.ToName)
                        @Html.ValidationMessageFor(model => model.ToName)
                    </div>
                    <div class="viosinput400 boxtb3">
                        @Html.EditorFor(model => model.ToAddress1)
                        @Html.ValidationMessageFor(model => model.ToAddress1)
                    </div>
                    <div class="viosinput400 boxtb3">
                        @Html.EditorFor(model => model.ToAddress2)
                        @Html.ValidationMessageFor(model => model.ToAddress2)
                    </div>
                    <div>
                        <div class="left viosinput120 boxtb3">
                            @Html.EditorFor(model => model.ToCity)
                            @Html.ValidationMessageFor(model => model.ToCity)
                        </div>
                        <div class="left viosinput40 boxtb3">
                            @Html.EditorFor(model => model.ToState)
                            @Html.ValidationMessageFor(model => model.ToState)
                        </div>
                        <div class="left viosinput40 boxtb3">
                            @Html.EditorFor(model => model.ToZip)
                            @Html.ValidationMessageFor(model => model.ToZip)
                        </div>
                    </div>
                    <div class="viosinput400 boxtb3">
                        @Html.EditorFor(model => model.ToCountry)
                        @Html.ValidationMessageFor(model => model.ToCountry)
                    </div>
                </div>
                <div class="darkerline left" style="width: 40%; padding: 5px;">
                    <div>Ship From:</div>
                    <div class="viosinput400 boxtb3">
                        @Html.EditorFor(model => model.FromCompany)
                        @Html.ValidationMessageFor(model => model.FromCompany)
                    </div>
                    <div class="viosinput400 boxtb3">
                        @Html.EditorFor(model => model.FromName)
                        @Html.ValidationMessageFor(model => model.FromName)
                    </div>
                    <div class="viosinput400 boxtb3">
                        @Html.EditorFor(model => model.FromAddress1)
                        @Html.ValidationMessageFor(model => model.FromAddress1)
                    </div>
                    <div class="viosinput400 boxtb3">
                        @Html.EditorFor(model => model.FromAddress2)
                        @Html.ValidationMessageFor(model => model.FromAddress2)
                    </div>
                    <div class="cf">
                        <div class="left viosinput120 boxtb3">
                            @Html.EditorFor(model => model.FromCity)
                            @Html.ValidationMessageFor(model => model.FromCity)
                        </div>
                        <div class="left viosinput40 boxtb3">
                            @Html.EditorFor(model => model.FromState)
                            @Html.ValidationMessageFor(model => model.FromState)
                        </div>
                        <div class="left viosinput40 boxtb3">
                            @Html.EditorFor(model => model.FromZip)
                            @Html.ValidationMessageFor(model => model.FromZip)
                        </div>
                    </div>
                    <div class="viosinput400 boxtb3">
                        @Html.EditorFor(model => model.FromCountry)
                        @Html.ValidationMessageFor(model => model.FromCountry)
                    </div>
                </div>
            </div>
        </div>
        <div class="darkerline cf" style="margin-top: 0.5em; margin-bottom: 0.5em; padding-left: 0.5em; padding-right: 0.5em">
            <div id="salesdetailsid">Details</div>
        </div>
        <div class="darkerline cf" style="margin-top: 0.5em; margin-bottom: 0.5em; padding-left: 0.5em; padding-right: 0.5em">
            <div class="left" style="width: 600px;">
                <div style="vertical-align: top; padding-left: 5px;">Notes:</div>
                <div>
                    <textarea id="Note" name="Note" cols="70" rows="8">@Model.Note</textarea>
                </div>
            </div>
            <div class="left" style="margin-left: 20px; margin-top: 30px;">
                <div style="text-align: center">Approved by</div>
                <div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Approvedby, new { style = "width:200px;" })
                        @Html.ValidationMessageFor(model => model.Approvedby)
                    </div>
                </div>
                <div style="text-align: center">Approved Date</div>
                <div>
                    <div class="editor-field">
                        <input id="AprovedDateHlp" name="AprovedDateHlp" type="text" style = "width:180px;" value="@szApprovedDate" />
                        @*@Html.TextBoxFor(model => model.AprovedDate, new { style = "width:180px;" })
                        @Html.ValidationMessageFor(model => model.AprovedDate)*@
                    </div>
                </div>
            </div>
            <div class="left" style="margin-top: 20px; margin-left: 50px;width: 20%;">
                <div style="margin-bottom: 5px;">
                    <div class="right">@ViewBag.SalesAmount</div>
                    <div><span style="font-size: 1.0em; font-weight: bold;">Sub_total:</span></div>
                </div>
                <div style="margin-bottom: 5px;">
                    <div>
                        <div class="right">@ViewBag.TotalTax</div>
                        @*<div>Tax&nbsp;@ViewBag.Tax&nbsp;%</div>*@
                        <div>
                            <div class="left" style="padding-top: 5px;">Tax&nbsp;</div>
                            <div class="viosinput40">
                                @Html.EditorFor(model => model.Tax_rate)&nbsp;%
                                                @Html.ValidationMessageFor(model => model.Tax_rate)
                            </div>
                        </div>
                    </div>
                </div>
                <div style="margin-bottom: 5px;">
                    <div style="height: 28px;">
                        <div class="right viosinput80" style="margin-left: 8px;">@Html.EditorFor(model => model.ShippingHandling)</div>
                        <div>Shipping & Handling:</div>
                    </div>
                </div>
                <div style="margin-bottom: 5px;">
                    <div>
                        <div class="right">@ViewBag.TotalAmount</div>
                        <div>Order Total:</div>
                    </div>
                </div>
                <div style="margin-bottom: 5px;">
                    <div>
                        <div class="right">@Html.DisplayFor(model => model.PaymentAmount)</div>
                        <div>@Html.ActionLink("Payment:","PaymentTransactionList","Payment", new { salesOrderNo = Model.SalesOrderNo,invoiceId=-1 },null)</div>
                    </div>
                </div>
                <div style="margin-bottom: 5px;">
                    <div>
                        <div class="right tdsalestotal">@ViewBag.BalanceDue</div>
                        <div><span style="font-size: 1.0em; font-weight: bold;">Balance Due:</span></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div style="margin: 5px auto 5px auto; width: 400px;">
        <input class="btnEditSO" type="submit" value="Save" />&nbsp;@Html.ActionLink("Print (Pdf)", "SalesOrderReport", "iTextReports", new { SalesOrderId = Model.SalesOrderId }, new { @class = "btnEditSO", target = "_blank" })&nbsp;<a class="btnEditSO" href="#">Email</a>&nbsp;@Html.ActionLink("Quit", "Index", null, new { @class = "btnEditSO" })
    </div>
    <div style="display: none;">@Html.ActionLink("Get Sales Details", "GetSalesDetailsSRC", "SalesOrder", new { salesorderid = Model.SalesOrderId }, new { id = "getsalesdetailsId" })</div>
}

<div id="selectvendorDialog">
    Select vendor here
</div>
<div style="display: none;">
    @Html.ActionLink("Blind Ship", "BlindShip", "SalesOrder", new { salesorderid = @Model.SalesOrderId }, new { id = "lnkBlindShip" })
</div>

@section Scripts {
    @Scripts.Render("~/Scripts/jquery.validate.min.js")
    <script type="text/javascript">
        jQuery(document).ready(initializeSalesOrderIndex);

        function initializeSalesOrderIndex() {

            //Set the buttons
            jQuery(".btnSubmitSearch").button();
            jQuery(".btnEditSO").button();

            //Intialize fields 
            //debugger;

            jQuery("#ShippingHandling").css("text-align", "right");
            //jQuery("#SalesOrderNo").attr("readonly", "readonly");

            //Attach handlers 
            jQuery("#lnkselectvendorid").click(clicklnkselectvendorid);
            jQuery("#lnkselectlocationid").click(clicklnkselectlocationid);
            jQuery("#getsalesdetailsId").click(clickgetsalesdetailsId);
            jQuery("#lnkBlindShip").click(clicklnkBlindShip);
            jQuery("#lnkEditBlindShip").click(clicklnkBlindShip);
            jQuery("#IsBlindShip").click(clickIsBlindShip);
            jQuery("#salesordercontactselectorId").change(changesalesordercontactselectorId);
            jQuery("#editsalesorderid").submit(submiteditsalesorderid);
            jQuery("#lnkpaysalesorderid01").click(clicklnkpaysalesorderid01);

            //Prepare the dialogs 
            jQuery("#loadingHlpDialogid").dialog({ autoOpen: false, modal: true });
            jQuery("#selectvendorDialog").dialog({ autoOpen: false, modal: true });

            //debugger;

            //Display sales details
            jQuery("#getsalesdetailsId").trigger('click');

            //Set the datepicker
            jQuery("#ShipDateHlp").datepicker({
                dateFormat: "mm/dd/yy",
                showOn: "button",
                buttonImage: "/images/calendar.gif",
                buttonImageOnly: true
            });

            jQuery("#SODateHlp").datepicker({
                dateFormat: "mm/dd/yy",
                showOn: "button",
                buttonImage: "/images/calendar.gif",
                buttonImageOnly: true
            });

            jQuery("#AprovedDateHlp").datepicker({
                dateFormat: "mm/dd/yy",
                showOn: "button",
                buttonImage: "/images/calendar.gif",
                buttonImageOnly: true
            });

            jQuery("#RequiredateHlp").datepicker({
                dateFormat: "mm/dd/yy",
                showOn: "button",
                buttonImage: "/images/calendar.gif",
                buttonImageOnly: true
            });

            SetBillTo();

        }
        function SetBillTo() {
            var szBilltoId = jQuery("#billtoid").val();
            jQuery("#billtoselectorId").val(szBilltoId);

            var szWarehouse = jQuery("#editsalesorderid #VendorAddress").val();
            jQuery("#warehouseselectorId").val(szWarehouse);
        }
        function clicklnkpaysalesorderid01(src, arg) {
            //debugger;

            src.preventDefault();

            //Display load image
            ShowLoadingDialog();

            //Get the partial view
            var szUrl = jQuery(src.target).attr("href");

            jQuery.ajax({
                type: 'GET',
                url: szUrl,
                data: null,
                //contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                error: AjaxFailed,
                success: paymentSuccess
            });
        }
        function paymentSuccess(response, statusCode) {
            //debugger;
            var objRes = response;

            //Display the response data
            jQuery("#selectvendorDialog").html(objRes);

            //Hide load image
            HideLoadingDialog();

            //Initialize fields
            jQuery("#PaymentNo").prop("readonly", true);
            jQuery("#CustomerNo").prop("readonly", true);
            jQuery("#SalesOrderNoPay").prop("readonly", true);
            jQuery("#PaymentDatePay").prop("readonly", true);

            //Set the buttons 
            jQuery(".btNavTimley").button();

            //Attach handlers 
            jQuery("#btDialogClose").click(clickbtDialogClose);
            jQuery("#PaymentTypeHlpIdselectorId").change(changePaymentTypeHlpIdselectorId);

            jQuery("#formpaysalesorderid").validate({
                rules: {
                    PaymentType: "required",
                    CreditCardNumber: "required"
                },
                messages: {
                    PaymentType: " Payment type is required.",
                    CreditCardNumber: " Card number is required."
                }

            });

            //Get the title 
            //debugger;
            var szTitle = "Payment";

            //Show the dialog (used with the BuscarDepartamento call)
            jQuery("#selectvendorDialog").dialog("option", "title", "Select " + szTitle);

            //setter
            jQuery("#selectvendorDialog").dialog("option", "width", 400);

            //display the popup dialog
            jQuery("#selectvendorDialog").dialog("open");
        }
        function changePaymentTypeHlpIdselectorId(src, arg) {
            var objselect = jQuery(src.target).prop("selectedIndex");
            if (objselect > 0) {
                var szSelect = src.target[objselect].text;
                var szMsg = szSelect.split('-');
                var szMsg01 = jQuery.trim(szMsg[0]);
                jQuery("#PaymentType").val(szMsg01);
                var szMsg01 = jQuery.trim(szMsg[1]);
                jQuery("#CreditCardNumber").val(szMsg01);
            }
            else {
                jQuery("#PaymentType").val("");
                jQuery("#CreditCardNumber").val("");
            }
        }
        function clicklnkselectvendorid(src, arg) {
            //debugger;
            src.preventDefault();

            //Display load image
            ShowLoadingDialog();

            //Get the partial view
            var szUrl = jQuery(src.target).attr("href");

            jQuery.ajax({
                type: 'GET',
                url: szUrl,
                data: null,
                //contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                error: AjaxFailed,
                success: selectvendorSuccess
            });
        }

        function AjaxFailed(response, statusCode, optionerror) {
            //debugger;
            //var response = ajaxContext.get_response();
            //var statusCode = response.get_statusCode();
            alert("Sorry, the request failed with status code: " + statusCode);
        }

        function selectvendorSuccess(response, statusCode) {
            //debugger;
            var objRes = response;

            //Display the response data
            jQuery("#selectvendorDialog").html(objRes);

            //Hide load image
            HideLoadingDialog();

            //Set the buttons lnkResetId
            jQuery(".btNavTimley").button();

            //Attach handlers lnkSelectVendor
            jQuery("#btDialogClose").click(clickbtDialogClose);
            jQuery("#btnSubmitSearchVendorid").click(clickbtnSubmitSearchVendorid);
            jQuery(".btnSubmitSearchVendor a").each(eachbtnSubmitSearchVendor);
            jQuery(".lnkSelectVendor a").each(eachlnkSelectVendor);



            jQuery(".pagination ul li a").each(eachlnknavigation);
            //Initialize fields

            //Get the title 
            //debugger;
            var szTitle = "Vendor";

            //Show the dialog (used with the BuscarDepartamento call)
            jQuery("#selectvendorDialog").dialog("option", "title", "Select " + szTitle);

            //setter
            jQuery("#selectvendorDialog").dialog("option", "width", 900);

            //display the popup dialog
            jQuery("#selectvendorDialog").dialog("open");

        }

        function clickbtDialogClose(src, arg) {
            jQuery("#selectvendorDialog").dialog("close");
        }

        function eachbtnSubmitSearchVendor(nPos, src) {
            //debugger;
            jQuery(src).click(clicklnkselectvendorreset);
        }

        function clicklnkselectvendorreset(src, arg) {
            src.preventDefault();

            //Display load image
            ShowLoadingDialog();

            //Get the partial view
            var szUrl = jQuery(src.target.parentNode).attr("href");

            jQuery.ajax({
                type: 'GET',
                url: szUrl,
                data: null,
                //contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                error: AjaxFailed,
                success: selectvendorSuccess
            });
        }

        function eachlnknavigation(nPos, src) {
            if (src.href != "") {
                jQuery(src).click(clicklnkselectvendorid);
            }
        }

        function clickbtnSubmitSearchVendorid(src, arg) {
            //debugger;

            //Display load image
            ShowLoadingDialog();

            //Get the search value
            var szSearchVendor = jQuery("#searchItemVendor").val();

            // Get the url
            var lnkResethref = jQuery("#lnkResetVendorId").attr("href");

            if (szSearchVendor != "") {
                var szUrl = lnkResethref + '?searchItemVendor=' + szSearchVendor;

                jQuery.ajax({
                    type: 'GET',
                    url: szUrl,
                    data: null,
                    //contentType: 'application/json; charset=utf-8',
                    dataType: 'html',
                    error: AjaxFailed,
                    success: selectvendorSuccess
                });
            }
        }

        function eachlnkSelectVendor(nPos, src) {
            jQuery(src).click(clicklnkSelectVendor);
        }

        function clicklnkSelectVendor(src, arg) {
            src.preventDefault();


            var szMsg01 = "";
            var szMsg02 = "";
            var szMsg03 = "";
            var szMsg = src.target.href;
            var szItemIdHlp = szMsg.split('/');
            var szItemId = szItemIdHlp[szItemIdHlp.length - 1];

            //Get and displat the selected values
            jQuery("#VendorId").val(szItemId);

            szMsg = '#fn_' + szItemId;
            szMsg01 = jQuery(szMsg).html();
            szMsg01 = jQuery.trim(szMsg01);
            szMsg = '#ln_' + szItemId;
            szMsg02 = jQuery(szMsg).html();
            szMsg02 = jQuery.trim(szMsg02);
            jQuery("#firstlastnameid").html(szMsg01 + ' ' + szMsg02);

            szMsg = '#cmp_' + szItemId;
            szMsg01 = jQuery(szMsg).html();
            szMsg01 = jQuery.trim(szMsg01);
            jQuery("#td_companynameid").html(szMsg01);

            szMsg = '#adr_' + szItemId;
            szMsg01 = jQuery(szMsg).html();
            szMsg01 = jQuery.trim(szMsg01);
            jQuery("#td_addressid").html(szMsg01);

            szMsg = '#cty_' + szItemId;
            szMsg01 = jQuery(szMsg).html();
            szMsg01 = jQuery.trim(szMsg01);

            //debugger;

            szMsg = '#sta_' + szItemId;
            szMsg02 = jQuery(szMsg).html();
            szMsg02 = jQuery.trim(szMsg02);
            if (szMsg02 != "") {
                szMsg02 = ', ' + szMsg02
            }

            szMsg = '#zp_' + szItemId;
            szMsg03 = jQuery(szMsg).html();
            szMsg03 = jQuery.trim(szMsg03);
            jQuery("#td_cityid").html(szMsg01 + szMsg02 + ' ' + szMsg03);

            jQuery("#selectvendorDialog").dialog("close");

        }

        function clicklnkselectlocationid(src, arg) {
            //debugger;
            src.preventDefault();

            //Display load image
            ShowLoadingDialog();

            //Get the partial view
            var szUrl = jQuery(src.target).attr("href");

            jQuery.ajax({
                type: 'GET',
                url: szUrl,
                data: null,
                //contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                error: AjaxFailed,
                success: selectlocationSuccess
            });
        }

        function selectlocationSuccess(response, statusCode) {
            var objRes = response;

            //Display the response data
            jQuery("#selectvendorDialog").html(objRes);

            //Hide load image
            HideLoadingDialog();

            //Set the buttons lnkResetId
            jQuery(".btNavTimley").button();

            //Attach handlers 
            jQuery("#btDialogClose").click(clickbtDialogClose);
            jQuery("#btnSubmitSearchLocationid").click(clickbtnSubmitSearchLocationid02);

            jQuery(".btnSubmitSearchLocation a").each(eachbtnSubmitSearchVendor);
            jQuery(".lnkSelectLocation a").each(eachlnkSelectLocation);

            //debugger;
            jQuery(".btnSubmitSearchLocationlnk a").click(clickbtnSubmitSearchLocationid01);

            jQuery(".pagination ul li a").each(eachlnknavigationlocation);
            //Initialize fields

            //Get the title 
            //debugger;
            var szTitle = "Location";

            //Show the dialog (used with the BuscarDepartamento call)
            jQuery("#selectvendorDialog").dialog("option", "title", "Select " + szTitle);

            //setter
            jQuery("#selectvendorDialog").dialog("option", "width", 700);

            //display the popup dialog
            jQuery("#selectvendorDialog").dialog("open");

        }

        function eachlnkSelectLocation(nPos, src) {
            //debugger;
            jQuery(src).click(clicklnkSelectLocation);
        }

        function clicklnkSelectLocation(src, arg) {
            src.preventDefault();

            //debugger;

            var szMsg01 = "";
            var szMsg02 = "";
            var szMsg03 = "";
            var szMsg = src.target.href;
            var szItemIdHlp = szMsg.split('/');
            var szItemId = szItemIdHlp[szItemIdHlp.length - 1];

            //Get and displat the selected values
            jQuery("#CustomerShiptoId").val(szItemId);

            szMsg = '#fn_' + szItemId;
            szMsg01 = jQuery(szMsg).html();
            szMsg01 = jQuery.trim(szMsg01);
            szMsg = '#ln_' + szItemId;
            szMsg02 = jQuery(szMsg).html();
            szMsg02 = jQuery.trim(szMsg02);
            jQuery("#STfirstlastnameid").html(szMsg01 + ' ' + szMsg02);

            szMsg = '#cmp_' + szItemId;
            szMsg01 = jQuery(szMsg).html();
            szMsg01 = jQuery.trim(szMsg01);
            jQuery("#td_STcompanynameid").html(szMsg01);

            szMsg = '#adr_' + szItemId;
            szMsg01 = jQuery(szMsg).html();
            szMsg01 = jQuery.trim(szMsg01);
            jQuery("#td_STaddressid").html(szMsg01);

            szMsg = '#cty_' + szItemId;
            szMsg01 = jQuery(szMsg).html();
            szMsg01 = jQuery.trim(szMsg01);

            //debugger;

            szMsg = '#sta_' + szItemId;
            szMsg02 = jQuery(szMsg).html();
            szMsg02 = jQuery.trim(szMsg02);
            if (szMsg02 != "") {
                szMsg02 = ', ' + szMsg02
            }

            szMsg = '#zp_' + szItemId;
            szMsg03 = jQuery(szMsg).html();
            szMsg03 = jQuery.trim(szMsg03);
            jQuery("#td_STcityid").html(szMsg01 + szMsg02 + ' ' + szMsg03);

            szMsg = '#prf_' + szItemId;
            szMsg01 = jQuery(szMsg).html();
            szMsg01 = jQuery.trim(szMsg01);
            jQuery("#ShipVia").val(szMsg01);


            jQuery("#selectvendorDialog").dialog("close");

        }

        function clickbtnSubmitSearchLocationid02(src, arg) {
            //debugger;

            var szSearchLocation = jQuery("#searchLocation").val();
            if (szSearchLocation != "") {

                //Display load image
                ShowLoadingDialog();


                //Get Customerid
                var szCustomerId = jQuery("#selectlocationcustmerid").html();
                szCustomerId = jQuery.trim(szCustomerId);

                //Get the partial view
                var szUrl = jQuery("#lnkResetLocationId").attr("href");
                szUrl = szUrl + '&searchLocation=' + szSearchLocation;


                jQuery.ajax({
                    type: 'GET',
                    url: szUrl,
                    data: null,
                    //contentType: 'application/json; charset=utf-8',
                    dataType: 'html',
                    error: AjaxFailed,
                    success: selectlocationSuccess
                });

            }
        }

        function clickbtnSubmitSearchLocationid01(src, arg) {
            //debugger;
            src.preventDefault();

            //Display load image
            ShowLoadingDialog();

            //Get Customerid
            var szCustomerId = jQuery("#selectlocationcustmerid").html();
            szCustomerId = jQuery.trim(szCustomerId);

            //Get the partial view
            var szUrl = jQuery(src.target.parentNode).attr("href");
            szUrl = szUrl + '&customerid=' + szCustomerId;

            jQuery.ajax({
                type: 'GET',
                url: szUrl,
                data: null,
                //contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                error: AjaxFailed,
                success: selectlocationSuccess
            });

        }

        function eachlnknavigationlocation(nPos, src) {
            if (src.href != "") {
                jQuery(src).click(clicklnknavigationlocation);
            }
        }

        function clicklnknavigationlocation(src, arg) {
            //debugger;
            src.preventDefault();

            //Display load image
            ShowLoadingDialog();

            //Get Customerid
            var szCustomerId = jQuery("#selectlocationcustmerid").html();
            szCustomerId = jQuery.trim(szCustomerId);

            //Get the partial view
            var szUrl = jQuery(src.target).attr("href");
            szUrl = szUrl + '&customerid=' + szCustomerId;

            jQuery.ajax({
                type: 'GET',
                url: szUrl,
                data: null,
                //contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                error: AjaxFailed,
                success: selectlocationSuccess
            });
        }

        function clickbtnSubmitSearchLocationid(src, arg) {
            //debugger;

            //Display load image
            ShowLoadingDialog();

            //Get the search value
            var szSearchVendor = jQuery("#searchLocation").val();

            // Get the url
            var lnkResethref = jQuery("#lnkResetLocationId").attr("href");

            if (szSearchVendor != "") {
                var szUrl = lnkResethref + '&searchLocation=' + szSearchVendor;

                jQuery.ajax({
                    type: 'GET',
                    url: szUrl,
                    data: null,
                    //contentType: 'application/json; charset=utf-8',
                    dataType: 'html',
                    error: AjaxFailed,
                    success: selectvendorSuccess
                });
            }
        }

        function clickgetsalesdetailsId(src, arg) {
            //debugger;
            src.preventDefault();

            //Display load image
            ShowLoadingDialog();

            //Get url
            var szUrl = jQuery(src.target).attr("href");

            jQuery.ajax({
                type: 'GET',
                url: szUrl,
                data: null,
                //contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                error: AjaxFailed,
                success: getdetailsSuccess
            });
        }

        function getdetailsSuccess(response, statusCode) {
            //debugger;
            var objRes = response;

            //Display the response data
            jQuery("#salesdetailsid").html(objRes);

            //Hide load image
            HideLoadingDialog();

            //Set readonly fields
            // the tax should be on product only, no tax on service
            jQuery(".service input").each(eachSOdetailservice)

            //Set the buttons lnkResetId
            jQuery(".btNavTimley").button();

            //Attach handlers 
            jQuery(".pagination ul li a").each(eachlnknavigationDetails);

            jQuery(".lnkEditDetail a").each(eachlnkEditDetail);
            jQuery(".lnkUpdateDetail a").each(eachlnkUpdateDetail);
            jQuery("#lnkAddSalesOrderDetail").click(clicklnkAddSalesOrderDetail);
            jQuery(".lnkAddDetail a").each(eachlnkAddDetail);
            jQuery(".lksalesdetailQty input").each(eachlksalesdetailQty);

            jQuery(".imprintselectorclass").each(eachimprintselectorclass);
            jQuery(".imprintclass").each(eachimprintclass);
        }
        function eachimprintclass(nPos, src) {
            jQuery(src).prop("readonly", true);
        }
        function eachimprintselectorclass(nPos, src) {
            jQuery(src).change(changeimprintselector);
        }
        function changeimprintselector(src, arg) {
            var szSelected = jQuery(src.target).val();
            var szId = jQuery(src.target).attr("id");
            szId = szId.replace("ipmtselect_", "ipmt_");
            if (szSelected != "") {
                jQuery("#" + szId + ' input').val(szSelected);
            }
            else {
                jQuery("#" + szId + ' input').val("");
            }
        }
        function eachSOdetailservice(nPos, src) {
            //debugger;
            jQuery(src).attr("readonly", "readonly");
            jQuery(src).attr("disabled");
        }
        function eachlnknavigationDetails(nPos, src) {
            if (src.href != "") {
                jQuery(src).click(clicklnknavigationDetails);
            }
        }

        function clicklnknavigationDetails(src, arg) {
            //debugger;
            src.preventDefault();

            //Display load image
            ShowLoadingDialog();

            //Get the sales order id
            var szSalesOrderId = jQuery("#SalesOrderId").val();

            //Get the partial view
            var szUrl = jQuery(src.target).attr("href");
            szUrl = szUrl + '&salesorderid=' + szSalesOrderId;

            jQuery.ajax({
                type: 'GET',
                url: szUrl,
                data: null,
                //contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                error: AjaxFailed,
                success: getdetailsSuccess
            });
        }

        function clicklnkBlindShip(src, arg) {

            //debugger;
            src.preventDefault();

            //Display load image
            ShowLoadingDialog();


            //Get the partial view
            var szUrl = jQuery(src.target).attr("href");

            jQuery.ajax({
                type: 'GET',
                url: szUrl,
                data: null,
                //contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                error: AjaxFailed,
                success: blindshipSuccess
            });
        }

        function blindshipSuccess(response, statusCode) {
            //debugger;
            var objRes = response;

            //Display the response data
            jQuery("#selectvendorDialog").html(objRes);

            //Hide load image
            HideLoadingDialog();

            //Set the buttons lnkResetId
            jQuery(".btNavTimley").button();

            //Attach handlers 
            jQuery("#btDialogClose").click(clickbtDialogClose);

            //Initialize fields

            //Get the title 
            //debugger;
            var szTitle = "Blind Ship Address";

            //Show the dialog (used with the BuscarDepartamento call)
            jQuery("#selectvendorDialog").dialog("option", "title", "Select " + szTitle);

            //setter
            jQuery("#selectvendorDialog").dialog("option", "width", 480);

            //display the popup dialog
            jQuery("#selectvendorDialog").dialog("open");
        }

        function clickIsBlindShip(src, arg) {
            //debugger;
            if (src.target.checked) {
                jQuery("#lnkBlindShip").trigger('click');
            }
        }

        function eachlnkEditDetail(nPos, src) {
            jQuery(src).click(clicklnkEditDetail);
        }

        function clicklnkEditDetail(src, arg) {

            //debugger;
            src.preventDefault();

            //Display load image
            ShowLoadingDialog();


            //Get the partial view
            var szUrl = jQuery(src.target).attr("href");

            jQuery.ajax({
                type: 'GET',
                url: szUrl,
                data: null,
                //contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                error: AjaxFailed,
                success: editdetailSuccess
            });
        }

        function editdetailSuccess(response, status) {
            //debugger;

            var objRes = response;

            //Display the response data
            jQuery("#selectvendorDialog").html(objRes);

            //Hide load image
            HideLoadingDialog();

            //Set the buttons lnkResetId
            jQuery(".btNavTimley").button();

            //Attach handlers 
            jQuery("#btDialogClose").click(clickbtDialogClose);
            jQuery("#btnSubmitSearchLocationid").click(clickbtnSubmitSearchLocationid02);

            jQuery(".btnSubmitSearchLocation a").each(eachbtnSubmitSearchVendor);
            jQuery(".lnkSelectLocation a").each(eachlnkSelectLocation);

            jQuery(".btnSubmitSearchLocationlnk a").click(clickbtnSubmitSearchLocationid01);

            jQuery(".pagination ul li a").each(eachlnknavigationlocation);
            //Initialize fields

            //Get the title 
            //debugger;
            var szTitle = "Sales Order Detail";

            //Show the dialog (used with the BuscarDepartamento call)
            jQuery("#selectvendorDialog").dialog("option", "title", "Edit " + szTitle);

            //setter
            jQuery("#selectvendorDialog").dialog("option", "width", 800);

            //display the popup dialog
            jQuery("#selectvendorDialog").dialog("open");
        }

        function clicklnkAddSalesOrderDetail(src, arg) {
            src.preventDefault();

            //Display load image
            ShowLoadingDialog();

            //debugger;
            //Get the partial view
            var szUrl = jQuery(src.target).attr("href");

            jQuery.ajax({
                type: 'GET',
                url: szUrl,
                data: null,
                //contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                error: AjaxFailed,
                success: adddetailSuccess
            });
        }

        function adddetailSuccess(response, status) {
            //debugger;

            var objRes = response;

            //Display the response data
            jQuery("#selectvendorDialog").html(objRes);

            //Hide load image
            HideLoadingDialog();

            //Set the buttons 
            jQuery(".btNavTimley").button();
            jQuery(".btnSubmitSearch").button();

            //Attach handlers 
            jQuery("#btDialogClose").click(clickbtDialogClose);
            jQuery(".pagination ul li a").each(eachlnknavigationAddDetail);
            jQuery(".lnkResetId a").click(clicklnkResetId);
            jQuery("#searchsubitemid").submit(submitsearchsubitemid);


            //Initialize fields

            //Get the title 
            //debugger;
            var szTitle = "Sales Order Detail";

            //Show the dialog (used with the BuscarDepartamento call)
            jQuery("#selectvendorDialog").dialog("option", "title", "Add " + szTitle);

            //setter
            jQuery("#selectvendorDialog").dialog("option", "width", 800);

            //display the popup dialog
            jQuery("#selectvendorDialog").dialog("open");
        }

        function eachlnknavigationAddDetail(nPos, src) {
            if (src.href != "") {
                jQuery(src).click(clicklnknavigationAddDetail);
            }
        }

        function clicklnknavigationAddDetail(src, arg) {
            //debugger;
            src.preventDefault();

            //Display load image
            ShowLoadingDialog();

            //Get the partial view
            var szUrl = jQuery(src.target).attr("href");

            jQuery.ajax({
                type: 'GET',
                url: szUrl,
                data: null,
                //contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                error: AjaxFailed,
                success: adddetailSuccess
            });
        }

        function clicklnkResetId(src, arg) {
            //debugger;
            src.preventDefault();

            //Display load image
            ShowLoadingDialog();

            //Get the partial view
            var szUrl = jQuery(src.target.parentNode).attr("href");

            jQuery.ajax({
                type: 'GET',
                url: szUrl,
                data: null,
                //contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                error: AjaxFailed,
                success: adddetailSuccess
            });
        }

        function submitsearchsubitemid(src, arg) {
            //debugger;
            src.preventDefault();

            //Display load image
            ShowLoadingDialog();

            //Get the seacrh parameter
            var szSearchItem = jQuery("#searchItem").val();

            //Get the partial view
            var szUrl = jQuery(src.target).attr("action");
            if (szSearchItem != "") {
                szUrl = szUrl + '&searchitem=' + szSearchItem;
            }

            jQuery.ajax({
                type: 'GET',
                url: szUrl,
                data: null,
                //contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                error: AjaxFailed,
                success: adddetailSuccess
            });
        }

        function changesalesordercontactselectorId(src, arg) {
            //debugger;
            var nSelected = src.target.selectedIndex;
            var nId = src.target[nSelected].value;
            if (nId != "") {
                jQuery(".vendoridddl #VendorId").val(nId);
            }
        }

        function eachlnkUpdateDetail(nPos, src) {
            //debugger;
            jQuery(src).click(clicklnkUpdateDetail);
        }

        function clicklnkUpdateDetail(src, arg) {
            //debugger;

            var hrefHlp = src.target.href;
            var szHlp = hrefHlp.split('/');
            var szMsg = "";
            var szQty = "";
            var szShipQty = "";
            var szBOQty = "";
            var szDesc = "";
            var szTax = "";
            var szPrice = "";
            var szLogo = "";
            var szImprint = "";
            var szQtySCid = "";
            var szQtyRCid = "";
            var szPriceSC = "";
            var szPriceRC = "";
            var szId = "0";
            var nPos = -1;
            szMsg = szHlp[szHlp.length - 1];
            nPos = szMsg.indexOf('?');
            if (nPos != -1) {
                szId = szMsg.substring(0, nPos);
            }
            if (szId != "0") {
                szMsg = "#qty_" + szId + ' input';
                szQty = jQuery(szMsg).val();
                szMsg = "#shipqty_" + szId + ' input';
                szShipQty = jQuery(szMsg).val();
                szMsg = "#boqty_" + szId + ' input';
                szBOQty = jQuery(szMsg).val();
                szMsg = "#desc_" + szId + ' input';
                szDesc = jQuery(szMsg).val();
                szMsg = "#tax_" + szId + ' input';
                szTax = jQuery(szMsg).val();
                szMsg = "#price_" + szId + ' input';
                szPrice = jQuery(szMsg).val();

                szMsg = "#logo_" + szId + ' input';
                szLogo = jQuery(szMsg).val();
                szMsg = "#ipmt_" + szId + ' input';
                szImprint = jQuery(szMsg).val();
                szMsg = "#qtySC_" + szId + ' input';
                szQtySCid = jQuery(szMsg).val();
                szMsg = "#qtyRC_" + szId + ' input';
                szQtyRCid = jQuery(szMsg).val();
                szMsg = "#priceSC_" + szId + ' input';
                szPriceSC = jQuery(szMsg).val();
                szMsg = "#priceRC_" + szId + ' input';
                szPriceRC = jQuery(szMsg).val();

                hrefHlp = hrefHlp + '&qty=' + szQty + '&shipqty=' + szShipQty + '&boqty=' + szBOQty + '&desc=' + szDesc + '&price=' + szPrice + '&tax=' + szTax + '&logo=' + szLogo + '&imprt=' + szImprint + '&qtysc=' + szQtySCid + '&qtyrc=' + szQtyRCid + '&pricesc=' + szPriceSC + '&pricerc=' + szPriceRC;
                src.target.href = hrefHlp;
            }
        }

        function eachlnkAddDetail(nPos, src) {
            //debugger;
            jQuery(src).click(clicklnkAddDetail);
        }
        function clicklnkAddDetail(src, arg) {
            //debugger;
            src.preventDefault();

            var nPos = -1;
            var nPos1 = -1;
            var itemPos = 0;
            var itemOrder = 0;
            var szMsg = "";
            var hRefHlp0 = src.target.href;
            var hRefHlp = hRefHlp0.split('=');
            if (hRefHlp != null) {
                itemOrder = hRefHlp[hRefHlp.length - 1];

                nPos = hRefHlp0.indexOf("itemPos=");
                if (nPos != -1) {
                    szMsg = hRefHlp0.substring(nPos + 8);
                    nPos1 = szMsg.indexOf("&");
                    if (nPos1 != -1) {
                        itemPos = szMsg.substring(0, nPos1);
                    }
                }
            }

            var hrefAdd = jQuery("#lnkAddSalesOrderDetail").attr("href");
            if (itemPos != "") {
                hrefAdd = hrefAdd + '&itemPos=' + itemPos + '&itemOrder=' + itemOrder;
                jQuery("#lnkAddSalesOrderDetail").attr("href", hrefAdd)
            }

            jQuery("#lnkAddSalesOrderDetail").trigger('click');
        }

        function eachlksalesdetailQty(nPos, src) {
            jQuery(src).change(changesalesdetailQty);
        }
        function changesalesdetailQty(src, arg) {
            //debugger;
            var szMsg = src.target.parentNode.id;
            szMsg = szMsg.replace("qty_", "lkup_");
            var lkHlp = jQuery("#" + szMsg).attr("href");

            var hrefHlp = lkHlp;
            var szHlp = hrefHlp.split('/');
            var szMsg = "";
            var szQty = "";
            var szShipQty = "";
            var szBOQty = "";
            var szDesc = "";
            var szPrice = "";
            var szTax = "";
            var szId = "0";
            var nPos = -1;
            szMsg = szHlp[szHlp.length - 1];
            nPos = szMsg.indexOf('?');
            if (nPos != -1) {
                szId = szMsg.substring(0, nPos);
            }
            if (szId != "0") {
                szMsg = "#qty_" + szId + ' input';
                szQty = jQuery(szMsg).val();
                szMsg = "#shipqty_" + szId + ' input';
                szShipQty = jQuery(szMsg).val();
                szMsg = "#boqty_" + szId + ' input';
                szBOQty = jQuery(szMsg).val();
                szMsg = "#desc_" + szId + ' input';
                szDesc = jQuery(szMsg).val();
                szMsg = "#tax_" + szId + ' input';
                szTax = jQuery(szMsg).val();
                szMsg = "#price_" + szId + ' input';
                szPrice = jQuery(szMsg).val();

                hrefHlp = hrefHlp + '&qty=' + szQty + '&shipqty=' + szShipQty + '&boqty=' + szBOQty + '&desc=' + szDesc + '&price=' + szPrice + '&tax=' + szTax;
                //src.target.href = hrefHlp;
                //Display load image
                ShowLoadingDialog();

                window.location(hrefHlp);
            }
        }

        function submiteditsalesorderid(src, arg) {
            //debugger;
            //var szYear = "";
            //var szMonth = "";
            //var szDay = "";
            //var szDateHlp = jQuery("#SODate").val();
            //var szMsg = szDateHlp.split('/');
            //if (szMsg != "") {
            //    szMonth = szMsg[0];
            //    szMonth = jQuery.trim(szMonth);
            //    szDay = szMsg[1];
            //    szYear = szMsg[2];
            //    //szDateHlp = szDay + '/' + szMonth + '/' + szYear;
            //    szDateHlp = szYear + '/' + szMonth + '/' + szDay;
            //    jQuery("#SODate").val(szDateHlp);
            //}
        }
    </script>
}
