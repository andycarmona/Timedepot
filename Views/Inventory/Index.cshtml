@using PagedList.Mvc;   @*//import this so we get our HTML Helper*@
@using PagedList;       @*//import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@
@model IEnumerable<TimelyDepotMVC.Models.Admin.ITEM>

@{
    ViewBag.Title = "Inventory";
    Layout = "~/Views/Shared/_LayoutModule.cshtml";
}
<div class="divh1">@ViewBag.Title</div>

<div style="width: 100%">
    <div style="margin: 0px auto; width: 50%; display: none;">
        @Html.ActionLink("Add Item", "Create", "Inventory", null, new { id = "lnkInventoryId" })
    </div>
    @using (Html.BeginForm("Index", "Inventory", FormMethod.Post))
    {
        <div style="margin: 0 auto; width: 600px;">
            <div class="cf">
                <div class="left" style="width: 120px; padding: 5px;">
                    <div style="margin-top: 5px;"><span>Active Only</span><input id="ckActive" type="checkbox" checked /></div>
                </div>
                <div class="cf right" style="margin: 5px;">
                    <div class="left" style="margin-right: 5px; margin-top: 5px;">
                        <input id="searchItem" name="searchItem" type="text" value="@ViewBag.SearchItem" />
                    </div>
                    <div>
                        <input id="btnSubmitSearch" class="btnSubmitSearch" type="submit" value="Search" />
                        @Html.ActionLink("Reset", "Index", "Inventory", null, new { id = "lnkResetId", @class = "btnSubmitSearch" })
                    </div>
                </div>
            </div>
            <div class="cf">
                <div class="left" style="margin: 5px; width: 96px;">Search by item:</div>
                <div style="margin-left: 110px; margin-top: 5px; margin-right: 5px; margin-bottom: 5px; width: 200px;">
                    <div><span>Item No.</span><input id="ckitem" style="margin-left: 50px;" type="checkbox" checked /></div>
                </div>
                <div style="margin-left: 110px; margin-top: 5px; margin-right: 5px; margin-bottom: 5px; width: 200px;">
                    <div><span>Vendor Part No.</span><input id="ckpart" style="margin-left: 5px;" type="checkbox" /></div>
                </div>
                <div style="margin-left: 110px; margin-top: 5px; margin-right: 5px; margin-bottom: 5px; width: 200px;">
                    <div><span>Depart No.</span><input id="ckdepart" style="margin-left: 35px;" type="checkbox" /></div>
                </div>
                <div style="margin-left: 110px; margin-top: 5px; margin-right: 5px; margin-bottom: 5px; width: 200px;">
                    <div><span>Class No.</span><input id="ckclassno" style="margin-left: 45px;" type="checkbox" /></div>
                </div>
                <div style="margin-left: 110px; margin-top: 5px; margin-right: 5px; margin-bottom: 5px; width: 200px;">
                    <div><span>UPC Code</span><input id="ckupcode" style="margin-left: 40px;" type="checkbox" /></div>
                </div>
            </div>
        </div>
        <div style="display: none">
            <input id="ckActiveHlp" name="ckActive" type="text" value="@ViewBag.ckActiveHlp" />
            <input id="ckCriteriaHlp" name="ckCriteria" type="text" value="@ViewBag.ckCriteriaHlp" />
        </div>    
    }
    <table class="webgrid" style="margin: 0px auto;">
        <tr class="webgrid-header">
            <th>
                @Html.DisplayNameFor(model => model.ItemID)
            </th>
            <th style="display: block">Image
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DescA)
            </th>
            <th>Vendor&nbsp;Part&nbsp;No</th>
            <th>@Html.DisplayNameFor(model => model.DeptoNo)</th>
            <th>@Html.DisplayNameFor(model => model.ClassNo)</th>
            <th>@Html.DisplayNameFor(model => model.UPCCode)</th>
        </tr>
        @{
            TimelyDepotMVC.DAL.TimelyDepotContext db01 = new TimelyDepotMVC.DAL.TimelyDepotContext();
            int nRow = 0;
            int nMod = 0;
            string szClass = "";
            string szVendorPartNo = "";
            string szVendorPartNo02 = "";

            //Set the image path
            string szPicPath = "";
            string sztrId = "";
            string sztrId1 = "";
            string szimgId = "";
            string szDepId = "";
            string szClsId = "";
            string szUpcId = "";
            string szVpnId = "";

            string szNewLine = Environment.NewLine;
            string[] stringSeparators = new string[] { "<br />" };

            string szDesA = "";
            string[] szDescaHlp = null;

            System.Web.Mvc.SelectList ListVendorPartNo = null;
        }
        @foreach (var item in Model)
        {

            nRow++;
            nMod = (nRow % 2);
            if (nMod == 0)
            {
                szClass = "webgrid-alternating-row timelydeptotr trhlp";
            }
            else
            {
                szClass = "webgrid-row-style timelydeptotr trhlp";
            }

            //szVendorPartNo = TimelyDepotMVC.Controllers.InventoryController.GetFirstVendorPartNo(db01, item.ItemID);
            szVendorPartNo02 = null;
            ListVendorPartNo = TimelyDepotMVC.Controllers.InventoryController.GetListVendorPartNo(db01, item.ItemID, ref szVendorPartNo02);

            szPicPath = string.Format("~/Images/timely/Small_Pic/{0}.gif", item.ItemID);
            szPicPath = Url.Content(szPicPath);

            sztrId = string.Format("row0_{0}", item.ItemID);
            sztrId1 = string.Format("row1_{0}", item.ItemID);
            szimgId = string.Format("img_{0}", item.ItemID);
            szDepId = string.Format("dep_{0}", item.ItemID);
            szClsId = string.Format("cls_{0}", item.ItemID);
            szUpcId = string.Format("upc_{0}", item.ItemID);
            szVpnId = string.Format("vpn_{0}", item.ItemID);

            szDesA = item.DescA;
            //szDesA = szDesA.Replace("<br />", szNewLine);
            szDescaHlp = szDesA.Split(stringSeparators, System.StringSplitOptions.None);
            
            <tr class="@szClass">
                <td id="@sztrId" style="font-size:1.0em; font-weight:bold;">
                    @Html.DisplayFor(modelItem => item.ItemID)
                </td>
                <td style="padding: 10px; display: block;">
                    <div>
                        <img id="@szimgId" alt="@item.ItemID" src="@szPicPath" width="100" />
                    </div>
                </td>
                <td id="@sztrId1" style="width:300px;">
                    @*@Html.DisplayFor(modelItem => item.DescA)*@
                    @foreach (string szitem in szDescaHlp)
                    {
                        @szitem<br />
                    }
                </td>
                <td id="@szVpnId" style="text-align:center;">
                    @if (ListVendorPartNo.Count() > 0)
                    {
                        @szVendorPartNo02
                    }
                    else
                    {
                        @szVendorPartNo02                            
                    }
                </td>
                <td id="@szDepId">
                    @Html.DisplayFor(modelItem => item.DeptoNo)
                </td>
                <td id="@szClsId">
                    @Html.DisplayFor(modelItem => item.ClassNo)
                </td>
                <td id="@szUpcId">
                    @Html.DisplayFor(modelItem => item.UPCCode)
                </td>


            </tr>
        }
        <tr>
            <td colspan="6">
                <!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
                @Html.PagedListPager((IPagedList)ViewBag.OnePageOfData, page => Url.Action("Index", new { page, searchItem = ViewBag.SearchItem, ckActive = ViewBag.ckActiveHlp, ckCriteria = ViewBag.ckCriteriaHlp }))

            </td>
        </tr>

    </table>
</div>
<div id="addinventorydialogId">
    Inventory data here
</div>
<div style="display: none;">
    @Html.ActionLink("Edit", "Edit", new { id = "0" }, new { id = "lnkEditItem" })
</div>
@section scripts{
    <script type="text/javascript">
        jQuery(document).ready(initializeInventoryIndex);

        function initializeInventoryIndex() {
            //debugger;

            //Set the buttons
            jQuery(".btnSubmitSearch").button();
            var szckCriteria = '@ViewBag.ckCriteriaHlp';
            SetDefaultCheckBox(szckCriteria);


            //Attach handlers
            jQuery("#lnkInventoryId").click(clicklnkInventoryId);
            jQuery(".timelydeptotr").each(eachtimelydeptotr);
            jQuery("#lnkEditItem").click(clicklnkEditItem);

            //Attach handlres
            jQuery("#ckActive").click(clickckActive);
            jQuery("#ckitem").click(clickckitem);
            jQuery("#ckpart").click(clickckpart);
            jQuery("#ckdepart").click(clickckdepart);
            jQuery("#ckclassno").click(clickckclassno);
            jQuery("#ckupcode").click(clickckupcode);

            //Prepare the dialogs 
            jQuery("#loadingHlpDialogid").dialog({ autoOpen: false, modal: true });
            jQuery("#addinventorydialogId").dialog({ autoOpen: false, modal: true });
        }
        function SetDefaultCheckBox(szckCriteria) {
            jQuery("#ckitem").prop("checked", false);
            switch (szckCriteria) {
                case "item":
                    jQuery("#ckitem").prop("checked", true);
                    break;
                case "part":
                    jQuery("#ckpart").prop("checked", true);
                    break;
                case "depart":
                    jQuery("#ckdepart").prop("checked", true);
                    break;
                case "classno":
                    jQuery("#ckclassno").prop("checked", true);
                    break;
                case "upccode":
                    jQuery("#ckupcode").prop("checked", true);
                    break;
                default:
                    jQuery("#ckitem").prop("checked", true);
                    break;
            }
        }
        function clickckitem(src, arg) {
            var bChkItem = (src.target.checked);
            if (bChkItem) {
                jQuery("#searchItem").val("");
                jQuery("#ckCriteriaHlp").val("item");
                jQuery("#ckpart").prop("checked", false);
                jQuery("#ckdepart").prop("checked", false);
                jQuery("#ckclassno").prop("checked", false);
                jQuery("#ckupcode").prop("checked", false);

                var trObj = jQuery(".trhlp").remove();
            }
        }
        function clickckpart(src, arg) {
            var bChkItem = (src.target.checked);
            if (bChkItem) {
                jQuery("#searchItem").val("");
                jQuery("#ckCriteriaHlp").val("part");
                jQuery("#ckitem").prop("checked", false);
                jQuery("#ckdepart").prop("checked", false);
                jQuery("#ckclassno").prop("checked", false);
                jQuery("#ckupcode").prop("checked", false);

                var trObj = jQuery(".trhlp").remove();
            }
        }
        function clickckdepart(src, arg) {
            var bChkItem = (src.target.checked);
            if (bChkItem) {
                jQuery("#searchItem").val("");
                jQuery("#ckCriteriaHlp").val("depart");
                jQuery("#ckitem").prop("checked", false);
                jQuery("#ckpart").prop("checked", false);
                jQuery("#ckclassno").prop("checked", false);
                jQuery("#ckupcode").prop("checked", false);

                var trObj = jQuery(".trhlp").remove();
            }
        }
        function clickckclassno(src, arg) {
            var bChkItem = (src.target.checked);
            if (bChkItem) {
                jQuery("#searchItem").val("");
                jQuery("#ckCriteriaHlp").val("classno");
                jQuery("#ckitem").prop("checked", false);
                jQuery("#ckpart").prop("checked", false);
                jQuery("#ckdepart").prop("checked", false);
                jQuery("#ckupcode").prop("checked", false);

                var trObj = jQuery(".trhlp").remove();
            }
        }
        function clickckupcode(src, arg) {
            var bChkItem = (src.target.checked);
            if (bChkItem) {
                jQuery("#searchItem").val("");
                jQuery("#ckCriteriaHlp").val("upccode");
                jQuery("#ckitem").prop("checked", false);
                jQuery("#ckpart").prop("checked", false);
                jQuery("#ckdepart").prop("checked", false);
                jQuery("#ckclassno").prop("checked", false);

                var trObj = jQuery(".trhlp").remove();
            }
        }

        function clickckActive(src, arg) {
            var bChkActive = (src.target.checked);
            if (bChkActive) {
                jQuery("#ckActiveHlp").val("true");
            }
            else {
                jQuery("#ckActiveHlp").val("false");
            }
        }

        function clicklnkInventoryId(src, arg) {
            src.preventDefault();

            //debugger;

            //Display load image
            ShowLoadingDialog();

            //Get the partial view
            var szUrl = jQuery(src.target).attr("href");

            jQuery.ajax({
                type: 'GET',
                url: szUrl,
                data: null,
                //contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                error: AjaxFailed,
                success: inventorySuccess
            });
        }
        function AjaxFailed(response, statusCode, optionerror) {
            //debugger;
            //var response = ajaxContext.get_response();
            //var statusCode = response.get_statusCode();
            alert("Sorry, the request failed with status code: " + statusCode);
        }
        function inventorySuccess(response, statusCode) {
            //debugger;
            var objRes = response;

            //Display the response data
            jQuery("#addinventorydialogId").html(objRes);

            //Hide load image
            HideLoadingDialog();

            //Set the buttons
            jQuery(".btNavTimley").button();

            //Attach handlers 
            jQuery("#btDialogClose").click(clickbtDialogClose);
            //jQuery("#lnkserachUserID").click(clicklnkserachUserID);
            //jQuery("#lnkserachPais").click(clicklnkserachPais);
            //jQuery("#lnkserachDepartamento").click(clicklnkserachDepartamento);
            //jQuery("#lnkserachCiudad").click(clicklnkserachCiudad);
            //jQuery(".verDepartamentosLnk a").each(eachverDepartamentosLnk);
            //jQuery(".verCiudadLnk a").each(eachverCiudadLnk);

            //Initialize fields

            //Get the title 
            //debugger;
            var szTitle = "Item";

            //Show the dialog (used with the BuscarDepartamento call)
            jQuery("#addinventorydialogId").dialog("option", "title", "Add " + szTitle);

            //setter
            jQuery("#addinventorydialogId").dialog("option", "width", 800);

            //display the popup dialog
            jQuery("#addinventorydialogId").dialog("open");

        }
        function clickbtDialogClose(src, arg) {
            jQuery("#addinventorydialogId").dialog("close");
        }

        function eachtimelydeptotr(nPos, src) {
            jQuery(src).click(clickimelydeptotr);
            jQuery(src).mouseover(mouseovertimelydeptotr);
        }
        function clickimelydeptotr(src, arg) {
            //debugger;


            var szhRef = jQuery("#lnkEditItem").attr("href");

            var szId = src.target.id;
            szId = szId.replace("row0_", "");
            szId = szId.replace("row1_", "");
            szId = szId.replace("img_", "");
            szId = szId.replace("dep_", "");
            szId = szId.replace("cls_", "");
            szId = szId.replace("upc_", "");
            szId = szId.replace("vpn_", "");

            szhRef = szhRef.replace("0", szId);
            jQuery("#lnkEditItem").attr("href", szhRef);
            jQuery("#lnkEditItem").trigger('click');
        }

        function clicklnkEditItem(src, arg) {
            //debugger;
            var szUrl = src.target.href;
            //window.location(szUrl);
            window.open(szUrl, "_self");
        }

        function mouseovertimelydeptotr(src, arg) {
            //debugger;
            jQuery(src.target).css("cursor", "pointer");
        }
    </script>
}
