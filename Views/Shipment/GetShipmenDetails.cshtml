@using PagedList.Mvc;   @*//import this so we get our HTML Helper*@
@using PagedList;       @*//import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@
@model IEnumerable<TimelyDepotMVC.Models.Admin.ShipmentDetails>

<div class="boxMb10" style="text-align:center; font-size:1.1em; font-weight:bold;">@ViewBag.ShipmentTitle</div>
<table class="webgrid" style="width: 900px; margin: 0px auto;">
    <tr class="webgrid-header">
        <th>@Html.ActionLink("Add", "AddDetail", new { shipmenid = ViewBag.ShipmentId }, new { id="lnkAddShipmentDetail" })</th>
        <th style="display:none;">
            @Html.DisplayNameFor(model => model.ShipmentId)
        </th>
        <th style="display:none;">
            @Html.DisplayNameFor(model => model.DetailId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BoxNo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Sub_ItemID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Quantity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UnitPrice)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UnitWeight)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DimensionH)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DimensionL)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DimensionD)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Reference1)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Reference2)
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @*@Html.ActionLink("Edit", "EditShipDetail", new { id = item.ShipmentDetailID }) |*@
                @Html.ActionLink("Delete", "Delete", new { id = item.ShipmentDetailID }, new {onclick="return confirm('Do you want to delete this detail?');" })
            </td>
            <td style="display:none;">
                @Html.DisplayFor(modelItem => item.ShipmentId)
            </td>
            <td style="display:none;">
                @Html.DisplayFor(modelItem => item.DetailId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BoxNo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Sub_ItemID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitWeight)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DimensionH)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DimensionL)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DimensionD)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Reference1)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Reference2)
            </td>
        </tr>
    }
        <tr>
        <td colspan="11">
            <!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
            @Html.PagedListPager((IPagedList)ViewBag.OnePageOfData, page => Url.Action("Index", new { page }))

        </td>
    </tr>

</table>
<div id="shipmentLogDetailsid" style="display:none;">@ViewBag.ShipmentLogDetails</div>