@using PagedList.Mvc;   @*//import this so we get our HTML Helper*@
@using PagedList;       @*//import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@
@model IEnumerable<TimelyDepotMVC.Models.Admin.Vendors>

<div>
    <div style="width: 80%; margin: 0px auto;">
        @using (Html.BeginForm("SelectVendor", "PurchaseOrder", null, FormMethod.Post, new { id = "SelectVendorFormid" }))
        {
            <div style="margin-bottom: 5px;">
                <table>
                    <tr>
                        <td>Search Vendor No.</td>
                        <td>
                            <input id="searchVendorNo" name="searchVendorNo" type="text" value="@ViewBag.SearchVendorNo" /></td>
                        <td>
                            <input id="btsubmitSOsearchid" class="btn btn-default" type="submit" value="Search" style="margin-bottom: 3px;" />
                            @Html.ActionLink("Reset", "SelectVendor", "PurchaseOrder", null, new { id = "lnkResetVendorId", @class = "btn btn-default" })</td>
                    </tr>
                </table>

            </div>    
        }
    </div>
    <table class="webgrid">
        <tr class="webgrid-header">
            <th></th>
            <th>
                @Html.DisplayNameFor(model => model.VendorNo)
            </th>
            <th>Company Name</th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BussinesType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Origin)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreditLimit)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PaymentTerms)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BussinesSice)
            </th>
        </tr>
        @{
            TimelyDepotMVC.DAL.TimelyDepotContext db01 = new TimelyDepotMVC.DAL.TimelyDepotContext();
            int nRow = 0;
            int nMod = 0;
            string szClass = "";
            string szCompanyName = "";
            string szSelectVendorNo = "";
        }

        @foreach (var item in Model)
        {
            szCompanyName = TimelyDepotMVC.Controllers.VendorsController.GetCompanyName(db01, item.Id.ToString());
            szSelectVendorNo = string.Format("vdno_{0}", item.Id);

            nRow++;
            nMod = (nRow % 2);
            if (nMod == 0)
            {
                szClass = "webgrid-alternating-row";
            }
            else
            {
                szClass = "webgrid-row-style";
            }
            <tr class="@szClass">
                <td class="lnkSelectVendor">
                    @Html.ActionLink("Select", "SelectVendor", new { id = item.Id })
                </td>
                <td id="@szSelectVendorNo">
                    @Html.DisplayFor(modelItem => item.VendorNo)
                </td>
                <td>
                    @szCompanyName
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BussinesType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Origin)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreditLimit)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PaymentTerms)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BussinesSice)
                </td>
            </tr>
        }
        <tr>
            <td colspan="8">
                <!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
                @Html.PagedListPager((IPagedList)ViewBag.OnePageOfData, page => Url.Action("Index", new { page }))
            </td>
            <td style="padding: 5px;">
                <input id="btDialogClose" class="btn btn-default" type="button" value="Close" />
            </td>
        </tr>

    </table>

</div>
