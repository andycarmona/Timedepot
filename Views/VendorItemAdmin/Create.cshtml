@model TimelyDepotMVC.Models.Admin.VendorItem

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>VendorItem</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.ItemId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ItemId)
            @Html.ValidationMessageFor(model => model.ItemId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.VendorNo)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.VendorNo)
            @Html.ValidationMessageFor(model => model.VendorNo)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.VendorPartNo)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.VendorPartNo)
            @Html.ValidationMessageFor(model => model.VendorPartNo)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Cost)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Cost)
            @Html.ValidationMessageFor(model => model.Cost)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CostBlind)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CostBlind)
            @Html.ValidationMessageFor(model => model.CostBlind)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.RunCharge)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.RunCharge)
            @Html.ValidationMessageFor(model => model.RunCharge)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SetupCharge)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SetupCharge)
            @Html.ValidationMessageFor(model => model.SetupCharge)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ReSetupCharge)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ReSetupCharge)
            @Html.ValidationMessageFor(model => model.ReSetupCharge)
        </div>

@*        <div class="editor-label">
            @Html.LabelFor(model => model.LeadTimeHrs)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LeadTimeHrs)
            @Html.ValidationMessageFor(model => model.LeadTimeHrs)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LeadTimeMin)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LeadTimeMin)
            @Html.ValidationMessageFor(model => model.LeadTimeMin)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LeadTimeSec)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LeadTimeSec)
            @Html.ValidationMessageFor(model => model.LeadTimeSec)
        </div>*@

        <div class="editor-label">
            @Html.LabelFor(model => model.LeadTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LeadTime)
            @Html.ValidationMessageFor(model => model.LeadTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UpdateDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UpdateDate)
            @Html.ValidationMessageFor(model => model.UpdateDate)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
