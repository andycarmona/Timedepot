@using PagedList.Mvc;   @*//import this so we get our HTML Helper*@
@using PagedList;       @*//import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@
@model IEnumerable<TimelyDepotMVC.Models.Admin.VendorItem>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Vendor Item</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table>
    <tr>
         <th></th>
         <th>Id</th>
       <th>
            @Html.DisplayNameFor(model => model.ItemId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VendorNo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VendorPartNo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Cost)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CostBlind)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RunCharge)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SetupCharge)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ReSetupCharge)
        </th>
@*        <th>
            @Html.DisplayNameFor(model => model.LeadTimeHrs)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LeadTimeMin)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LeadTimeSec)
        </th>*@
        <th>
            @Html.DisplayNameFor(model => model.LeadTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UpdateDate)
        </th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Id)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ItemId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.VendorNo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.VendorPartNo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Cost)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CostBlind)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.RunCharge)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SetupCharge)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ReSetupCharge)
        </td>
@*        <td>
            @Html.DisplayFor(modelItem => item.LeadTimeHrs)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LeadTimeMin)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LeadTimeSec)
        </td>*@
        <td>
            @Html.DisplayFor(modelItem => item.LeadTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UpdateDate)
        </td>
    </tr>
}
    <tr>
        <td colspan="10">
            <!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
            @Html.PagedListPager((IPagedList)ViewBag.OnePageOfData, page => Url.Action("Index", new { page }))

        </td>
    </tr>

</table>
